{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Table of Contents\n",
    "\n",
    "[Imports](#Imports)\n",
    "\n",
    "[Playground](#Playground)\n",
    "\n",
    "[Spotify Functions](#Spotify-Functions)\n",
    "\n",
    "[Songkick Functions](#Songkick-Functions)\n",
    "\n",
    "[Analysis Functions](#Analysis-Functions)\n",
    "\n",
    "[Analysis](#Analysis)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Imports\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             geometry                 name\n",
      "0   POLYGON ((-69.8822326660156 12.4111099243165, ...                Aruba\n",
      "1   (POLYGON ((-61.7388916015625 17.5405540466309,...  Antigua and Barbuda\n",
      "2   POLYGON ((61.2765579223633 35.6072463989258, 6...          Afghanistan\n",
      "3   POLYGON ((-5.15213489532459 30.1804695129396, ...              Algeria\n",
      "4   (POLYGON ((45.0258293151855 41.0305480957031, ...           Azerbaijan\n",
      "..                                                ...                  ...\n",
      "46  POLYGON ((-94.46169128436209 34.19676535931296...                   AR\n",
      "47  (POLYGON ((-93.70752428365972 30.2395783556275...                   LA\n",
      "48  (POLYGON ((-80.7856622716253 28.78519435427305...                   FL\n",
      "49  (POLYGON ((-88.49752727880752 48.1737953723300...                   MI\n",
      "50  (POLYGON ((-161.3337853466416 58.7332483821643...                   AK\n",
      "\n",
      "[302 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "#import necessary libraries\n",
    "import requests\n",
    "import json\n",
    "import pandas as pd\n",
    "import geopandas as gpd\n",
    "from shapely.geometry import Point, LineString\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.pyplot import figure\n",
    "import re\n",
    "import spotipy\n",
    "import base64\n",
    "import teetool as tt\n",
    "from collections import Counter\n",
    "import libpysal\n",
    "from pysal.model import spreg\n",
    "from libpysal.weights import Queen, Rook, KNN, Kernel\n",
    "import pysal\n",
    "from pysal.explore import esda\n",
    "from pysal.viz.splot import esda as esdaplot\n",
    "import cenpy\n",
    "import movingpandas as mpd\n",
    "import datetime\n",
    "from datetime import date\n",
    "from spotipy.oauth2 import SpotifyClientCredentials\n",
    "\n",
    "api_key = \"fCnCRQ1S6LDAS7zQ\"\n",
    "client_id = 'f5a0fe76389c42c0b85c832f1de66cf7'\n",
    "client_secret = 'e9d4fc0874f345b2b636a6e307384bb7'\n",
    "\n",
    "world = gpd.read_file('Countries_WGS84/Countries_WGS84.shp') #open file\n",
    "states = gpd.read_file('states_21basic/states.shp') #open file\n",
    "\n",
    "s2 = states[['geometry', 'STATE_ABBR']]\n",
    "s2.columns = ['geometry', 'name']\n",
    "\n",
    "w2 = world[['geometry', 'CNTRY_NAME']]\n",
    "w2.columns = ['geometry', 'name']\n",
    "\n",
    "ws = w2.append(s2)\n",
    "\n",
    "print(ws)\n",
    "\n",
    "\n",
    "#maybe remove festivals - songkick\n",
    "# maybe market - spotify"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Playground\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'artists': {'href': 'https://api.spotify.com/v1/search?query=id%3D0WjtdWS6su0f3jrW9aqEHl&type=artist&market=US&offset=0&limit=10', 'items': [], 'limit': 10, 'next': None, 'offset': 0, 'previous': None, 'total': 0}}\n"
     ]
    }
   ],
   "source": [
    "#spotipy playground\n",
    "client_credentials_manager = SpotifyClientCredentials(client_id, client_secret)\n",
    "sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)\n",
    "\n",
    "playlists = sp.user_playlists('spotify')\n",
    "\n",
    "\"https://api.spotify.com/v1/search?q=year%3A2001&type=artist&market=US\"\n",
    "\n",
    "# se = sp.search(q = 'year:0000-9999', limit = 1, offset = 9999, type = 'artist', market = 'US')\n",
    "\n",
    "se = sp.search(q = 'tag:hipster ', limit = 1, offset = 5678, type = 'album', market = 'US')\n",
    "\n",
    "se = sp.search(q = 'id=0WjtdWS6su0f3jrW9aqEHl', offset = 0, type = 'artist', market = 'US')\n",
    "\n",
    "print(se)\n",
    "\n",
    "# se = sp.search(q = 'berhana', limit = 1, type = 'artist')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Spotify Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# spotify function definitions\n",
    "\n",
    "# given a name/id or genre, will provide a list of \n",
    "# artists that exist in relation and also are within the follower limit\n",
    "\n",
    "# custom function used to sort by num of shared genres\n",
    "def custom_sort(x):\n",
    "    return x[2]\n",
    "\n",
    "query_count = 0\n",
    "\n",
    "# handles counting the genres for related artists\n",
    "def ra_help(artid, genres, followers, lessthan):\n",
    "    global query_count\n",
    "#     print(followers)\n",
    "    alist = []\n",
    "    if query_count < 10:\n",
    "        query_count += 1\n",
    "        for a in sp.artist_related_artists(artid)['artists']:\n",
    "#             print(a)\n",
    "            gc = 0\n",
    "            if (followers == -1):\n",
    "                print('hey')\n",
    "                for g in a['genres']:    \n",
    "                    if g in genres:\n",
    "                        gc += 1\n",
    "                if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                    alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "            else:\n",
    "                if (lessthan == True):\n",
    "#                     print(a)\n",
    "                    if (a['followers']['total'] < followers):\n",
    "                        for g in a['genres']:    \n",
    "                            if g in genres:\n",
    "                                gc += 1\n",
    "                        if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                            alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "                elif (lessthan == False):\n",
    "                    if (a['followers']['total'] >= followers):\n",
    "                        for g in a['genres']:    \n",
    "                            if g in genres:\n",
    "                                gc += 1\n",
    "                        if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                            alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "                \n",
    "        return sorted(alist, key = custom_sort, reverse = True)\n",
    "                    \n",
    "# used to faciliate recursive calls - \n",
    "# allows me to find the related artists in each level of separation from the root\n",
    "# before moving on to the root artist\n",
    "def ra_rec(lst, genres, followers, lessthan):\n",
    "    global query_count\n",
    "    lst2 = []\n",
    "    query_count += 1\n",
    "    for a in lst:\n",
    "        if query_count < 10:\n",
    "            lst2+=(ra_help(a[1], genres, followers, lessthan))\n",
    "#         print(\"ra_rec ra_help\" + str(query_count))\n",
    "    if query_count < 10:\n",
    "        lst2 += (ra_rec((sorted(lst2, key = custom_sort)), genres, followers, lessthan))    \n",
    "    \n",
    "    return sorted(lst2, key = custom_sort, reverse = True)\n",
    "\n",
    "def related_artists(artname='', artid='', genre='', followers=-1, lessthan = True):\n",
    "    if (artname == '' and artid == '' and genre == ''):\n",
    "        print('please include name, id, or genre')\n",
    "        return\n",
    "    else:\n",
    "        global query_count\n",
    "        query_count = 0\n",
    "        alist = []\n",
    "        if (artname != ''):\n",
    "            se = sp.search(q = artname, limit = 1, type = 'artist')\n",
    "            query_count += 1\n",
    "            print(\"related_artists search \" + str(query_count))\n",
    "            if (se['artists']['total'] > 0):\n",
    "                artist = se['artists']['items'][0]\n",
    "                artid = artist['id']\n",
    "                genres = artist['genres']\n",
    "        elif (artid != ''):\n",
    "            artist = sp.artist(artid)\n",
    "            genres = artist['genres']\n",
    "            \n",
    "#         print(artist)\n",
    "        \n",
    "        for a in sp.artist_related_artists(artid)['artists']:\n",
    "            genres+=a['genres']\n",
    "            \n",
    "        print(genres)\n",
    "\n",
    "        lst = ra_help(artid, genres, followers, lessthan)\n",
    "        print(lst)\n",
    "        query_count += 1\n",
    "        print(\"related_artists ra_help \" + str(query_count))\n",
    "                \n",
    "        if query_count < 10:\n",
    "            lst+=(ra_rec(lst, genres, followers, lessthan))\n",
    "          \n",
    "        print(len(lst))\n",
    "        \n",
    "        print(len(sorted(list(set(lst)), key = custom_sort)))\n",
    "    \n",
    "    return sorted(list(set(lst)), key = custom_sort, reverse = True) \n",
    "\n",
    "# related_artists(artname = 'berhana', followers = 75000)    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Songkick Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# function definitions\n",
    "\n",
    "# takes json string from songkick for an artist and makes points based on the results\n",
    "def make_points(json_str, artist):\n",
    "    df = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': []})\n",
    "\n",
    "    i = 0\n",
    "    \n",
    "    if (json_str['resultsPage']['totalEntries'] != 0):\n",
    "        for p in json_str['resultsPage']['results']['event']:\n",
    "            #     print(p['popularity'])\n",
    "            venue = p['venue']['displayName']\n",
    "            lng = p['location']['lng']\n",
    "            lat = p['location']['lat']\n",
    "            city = p['location']['city']\n",
    "            state = 'N/A'\n",
    "            csplit = city.split(',')\n",
    "            country = csplit[1]\n",
    "        \n",
    "            if (len(csplit) == 3):\n",
    "                if not ('Washington' == csplit[0] and 'DC' == csplit[1]):\n",
    "                    city = csplit[0]\n",
    "                    state = csplit[1]\n",
    "                    country = csplit[2]\n",
    "                else:\n",
    "                    city = csplit[0] + ', ' + csplit[1]\n",
    "                    state = 'N/A'\n",
    "                    country = csplit[2].replace(' ', '')\n",
    "        \n",
    "            df.loc[i] = [artist] + [venue] + [city] + [state] + [country] + [lat] +[lng]\n",
    "\n",
    "            i+=1\n",
    "        #convert to gdf to plot\n",
    "        gdf = gpd.GeoDataFrame(\n",
    "            df, geometry=[Point(x, y) for y, x in zip(df['Longitude'], df['Latitude'])])\n",
    "\n",
    "        gdf2 = gdf\n",
    "        gdf2 = gdf2.drop(list(range(1, len(gdf))))\n",
    "        gdf3 = gdf\n",
    "        gdf3 = gdf3.drop(list(range(0, len(gdf)-1)))\n",
    "    \n",
    "        return(gdf, gdf2, gdf3)\n",
    "    else:\n",
    "        return -1\n",
    "    \n",
    "def find_tour(json_str, artist, tr = 7, cutoff_yr = 2):\n",
    "    df = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': [],\n",
    "     't': []})\n",
    "\n",
    "    i = 0\n",
    "    \n",
    "    arr = []\n",
    "    \n",
    "    if (json_str['resultsPage']['totalEntries'] != 0):\n",
    "        for p in json_str['resultsPage']['results']['event']:\n",
    "            if 'US' in p['location']['city']:\n",
    "                venue = p['venue']['displayName']\n",
    "                lng = p['location']['lng']\n",
    "                lat = p['location']['lat']\n",
    "                city = p['location']['city']\n",
    "                state = 'N/A'\n",
    "                csplit = city.split(',')\n",
    "                country = csplit[1]\n",
    "        \n",
    "                if (len(csplit) == 3):\n",
    "                    if not ('Washington' == csplit[0] and 'DC' == csplit[1]):\n",
    "                        city = csplit[0]\n",
    "                        state = csplit[1]\n",
    "                        country = csplit[2]\n",
    "                    else:\n",
    "                        city = csplit[0] + ', ' + csplit[1]\n",
    "                        state = city\n",
    "                        country = csplit[2].replace(' ', '')\n",
    "                    df.loc[i] = [artist] + [venue] + [city] + [state] + [country] + [lat] + [lng] + [p['start']['date']]\n",
    "            \n",
    "                i+=1\n",
    "            \n",
    "                if (len(p['location']['city'].split(',')) == 3):\n",
    "                    d = p['start']['date'].split('-')\n",
    "                    arr.append(date(int(d[0]), int(d[1]), int(d[2])))\n",
    "    else:\n",
    "        return -1\n",
    "    \n",
    "    l = [0,0]\n",
    "    first = 0\n",
    "    last = 0\n",
    "    for i in range(len(arr)-1):\n",
    "        if (arr[i] != -1 and arr[i+1] != -1):\n",
    "            if (((arr[i] - arr[i+1]).days > tr) or (i == len(arr)-2)):\n",
    "                last = i\n",
    "                if (last-first > l[1] - l[0]):\n",
    "                    l = [first, last]\n",
    "                first = i+1\n",
    "        else:\n",
    "            last = i\n",
    "            if (last-first > l[1] - l[0]):\n",
    "                l = [first, last]\n",
    "            first = i+1\n",
    "            \n",
    "    print(l)\n",
    "    \n",
    "    df2 = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': [],\n",
    "     't': []})\n",
    "    \n",
    "    if (len(df) > 0):\n",
    "        for i in range(l[0], l[1]+1):\n",
    "            df2.loc[i] = df.loc[i]\n",
    "        \n",
    "        #convert to gdf to plot\n",
    "        gdf = gpd.GeoDataFrame(\n",
    "                df2, geometry=[Point(x, y) for y, x in zip(df2['Longitude'], df2['Latitude'])])\n",
    "\n",
    "        return gdf\n",
    "    else:\n",
    "        return -1\n",
    "\n",
    "# plots singular tour path for artist\n",
    "def run_plot(req, aname):\n",
    "    gdfs = make_points(req.json(), aname)\n",
    "\n",
    "    points_gdf = gdfs[0]\n",
    "    print(points_gdf)\n",
    "    start_gdf = gdfs[1]\n",
    "    stop_gdf = gdfs[2]\n",
    "\n",
    "    #current us basemap\n",
    "    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n",
    "\n",
    "    # fig, ax = plt.subplots(figsize=(15,15))\n",
    "    ax = world[world.continent == 'North America'].plot(\n",
    "#     ax = world.plot(\n",
    "        color='white', edgecolor='black')\n",
    "\n",
    "    ax.set_xlim(-130, -65)\n",
    "    ax.set_ylim(24, 50)\n",
    "\n",
    "    # We can now plot our ``GeoDataFrame``.\n",
    "    points_gdf.plot(ax=ax, color='blue')\n",
    "\n",
    "    start_gdf.plot(ax=ax, color='green')\n",
    "    stop_gdf.plot(ax=ax, color='red')\n",
    "\n",
    "    points = []\n",
    "\n",
    "    linedf = pd.DataFrame(\n",
    "        {'Line': []})\n",
    "\n",
    "    for i in range(len(points_gdf)):\n",
    "        points.append(points_gdf.iloc[i].loc[\"geometry\"])\n",
    "\n",
    "    line = LineString(points)\n",
    "\n",
    "    def plot_line(ax, ob):\n",
    "        x, y = ob.xy\n",
    "        ax.plot(x, y, color='grey', alpha=0.7, linewidth=1, solid_capstyle='round', zorder=2)\n",
    "\n",
    "    plot_line(ax, line)\n",
    "\n",
    "    plt.tight_layout()\n",
    "\n",
    "    plt.show()\n",
    "    \n",
    "# used to find the artist id on songkick\n",
    "def get_artist_id(artist_name):\n",
    "    json_str = requests.get(\"https://api.songkick.com/api/3.0/search/artists.json?apikey=\" + api_key + \"&query=\" + artist_name).json()\n",
    "    return (str(json_str['resultsPage']['results']['artist'][0]['id']) if json_str['resultsPage']['totalEntries'] != 0 else -1)\n",
    "\n",
    "# function for interface for taking input\n",
    "def req_input():\n",
    "    print(\"Welcome\")\n",
    "    while (True):\n",
    "        past = True\n",
    "        is_venue = True\n",
    "        \n",
    "        cmd = input(\"Venue search (0) or event search (1)?\")\n",
    "        \n",
    "        if (cmd == 1):\n",
    "            is_venue = False\n",
    "            \n",
    "        if (is_venue == False):\n",
    "            cmd = input(\"Past events (0), upcoming events (1): \")\n",
    "        \n",
    "            if (cmd == 1):\n",
    "                past = False\n",
    "            \n",
    "            cmd = input(\"Please type the parameters: [artist_name, min_date, max_date.] Separate with commas.\"\n",
    "                       + \"\\nIf no input, just add a comma and skip.\\n\")\n",
    "        \n",
    "            if (cmd == 'quit'):\n",
    "                return\n",
    "        \n",
    "            cs = cmd.split(',')\n",
    "            an = get_artist_id(cs[0].replace(' ', '+')) if not (cs[0]+' ').isspace() else print('need artist!')\n",
    "            if (cs[0]+' ').isspace():\n",
    "                continue\n",
    "            mind = \"&min_date=\" + cs[1].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[1])) else ''\n",
    "            maxd = \"&max_date=\" + cs[2].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[2])) else ''\n",
    "            \n",
    "            if (past == True):\n",
    "                r = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key \n",
    "                              + mind + maxd)\n",
    "                run_plot(r, cs[0])\n",
    "            else:\n",
    "                r = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=\"+ api_key \n",
    "                    + an + loc + mind + maxd)\n",
    "                print(r.json())\n",
    "                run_plot(r, cs[0])\n",
    "        else:\n",
    "            cmd = input(\"Past venues (0), upcoming venues (1): \")\n",
    "        \n",
    "            if (cmd == 1):\n",
    "                past = False\n",
    "            \n",
    "        cmd = input(\"Please type the parameters: [artist_name, min_date, max_date.] Separate with commas.\"\n",
    "                   + \"\\nIf no input, just add a comma and skip.\\n\")\n",
    "        \n",
    "        if (cmd == 'quit'):\n",
    "            return\n",
    "        \n",
    "        cs = cmd.split(',')\n",
    "        an = get_artist_id(cs[0].replace(' ', '+')) if not (cs[0]+' ').isspace() else print('need artist!')\n",
    "        if (cs[0]+' ').isspace():\n",
    "            continue\n",
    "        mind = \"&min_date=\" + cs[1].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[1])) else ''\n",
    "        maxd = \"&max_date=\" + cs[2].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[2])) else ''\n",
    "        \n",
    "        if (past == True):\n",
    "            r = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key \n",
    "                              + mind + maxd)\n",
    "            run_plot(r, cs[0])\n",
    "        else:\n",
    "            r = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=\"+ api_key \n",
    "                + an + loc + mind + maxd)\n",
    "            print(r.json())\n",
    "            run_plot(r, cs[0])\n",
    "              \n",
    "\n",
    "    \n",
    "# req = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=fCnCRQ1S6LDAS7zQ&artist_name=young+thug&min_date=2019-10-01&max_date=2019-11-01\")\n",
    "\n",
    "# req = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=fCnCRQ1S6LDAS7zQ&artist_name=travis+scott&min_date=2018-01-01&max_date=2022-11-01\")\n",
    "\n",
    "# print(get_artist_id('travis+scott'))\n",
    "\n",
    "# print(\"https://api.songkick.com/api/3.0/artists/\"+ get_artist_id('travis+scott') + \"/gigography.json?apikey=fCnCRQ1S6LDAS7zQ\")\n",
    "\n",
    "# print(req.text)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [],
   "source": [
    "# r = \"https://api.songkick.com/api/3.0/artists/\"+ get_artist_id('travis+scott') + \"/gigography.json?apikey=fCnCRQ1S6LDAS7zQ&order=desc\"\n",
    "\n",
    "# find_tour(requests.get(r).json(), \"Travis Scott\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# find the last 20 concerts for root artist and related artists - use num of genres as weights\n",
    "# cluster analysis \n",
    "# basic stats - top5 states/venues/countries\n",
    "\n",
    "# also, autocorrelation function - if us, then do using states, or cenpy for one state. otherwise, countries (in a continent)\n",
    "\n",
    "# with what i have, can do - cluster analysis, top5 states/countries; need to add venue info, "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# this function generates many related artists, returns 20 most recent events for each one, \n",
    "def compile_points(name):\n",
    "    artists = related_artists(artname = name)\n",
    "\n",
    "    gl = []\n",
    "\n",
    "    for a in artists:\n",
    "        an = get_artist_id(a[0].replace(' ', '+')) if not (a[0]+' ').isspace() else print('need artist!')\n",
    "    \n",
    "        if an != -1:\n",
    "            req = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "#             print(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "            gdfs = make_points(req.json(), a[0])\n",
    "            if gdfs != -1:\n",
    "                gl.append(gdfs[0])\n",
    "            \n",
    "    return gl\n",
    "\n",
    "# gdfs = compile_points('aster aweke')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "def basic_stats(gdfs, state = ''):    \n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    \n",
    "    # basic stats\n",
    "    venues = {}\n",
    "    cities = {}\n",
    "    countries_states = {}\n",
    "    \n",
    "    for index, row in rdf.iterrows():\n",
    "        if row[1] != 'Unknown venue':\n",
    "            if row[1] not in venues:\n",
    "                venues[row[1]] = 1\n",
    "            else:\n",
    "                venues[row[1]] += 1\n",
    "          \n",
    "        if row[3] != 'N/A':\n",
    "            if (row[2] + ', ' + row[3][1:]) not in cities:\n",
    "                cities[(row[2] + ', ' + row[3][1:])] = 1\n",
    "            else:\n",
    "                cities[(row[2] + ', ' + row[3][1:])] += 1\n",
    "        else:\n",
    "            if (row[2] + ', ' + row[4]) not in cities:\n",
    "                cities[(row[2] + ', ' + row[4][1:])] = 1\n",
    "            else:\n",
    "                cities[(row[2] + ', ' + row[4][1:])] += 1\n",
    "            \n",
    "        if row[3] != 'N/A':\n",
    "            if (row[3][1:]) not in countries_states:\n",
    "                countries_states[row[3][1:]] = 1\n",
    "            else:\n",
    "                countries_states[row[3][1:]] += 1\n",
    "\n",
    "        \n",
    "        if (row[4][1:]) not in countries_states:\n",
    "            countries_states[row[4][1:]] = 1\n",
    "        else:\n",
    "            countries_states[row[4][1:]] += 1\n",
    "            \n",
    "    print('Top 5 venues:')\n",
    "    top = Counter(venues)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    print('\\nTop 5 cities:')\n",
    "    top = Counter(cities)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    print('\\nTop 5 countries:')\n",
    "    top = Counter(countries_states)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    # end basic stats    \n",
    "\n",
    "def autocorr(gdfs, state = ''):\n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "\n",
    "    plt.figure(figsize=(10, 12))\n",
    "\n",
    "    world = ws\n",
    "    \n",
    "    showcount = []\n",
    "    \n",
    "    for index, row in world.iterrows():\n",
    "        if row[1] == 'United States':\n",
    "            c = 'US'            \n",
    "        elif row[1] == 'United Kingdom':\n",
    "            c = 'UK'\n",
    "        else:\n",
    "            c = row[1]\n",
    "#             print(c)\n",
    "        \n",
    "        if c in countries_states:\n",
    "            showcount.append(countries_states[c])\n",
    "        else:\n",
    "            showcount.append(0)\n",
    "        \n",
    "    world[\"ShowCount\"] = showcount #make new column\n",
    "\n",
    "    for index, row in ws.iterrows():\n",
    "        if row[1] == 'United States':\n",
    "            world.drop(index, inplace=True)\n",
    "    \n",
    "    fig, ax = plt.subplots(figsize=(15,15)) #plot\n",
    "    world.plot(\"ShowCount\", ax=ax)\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    \n",
    "    # morans i\n",
    "\n",
    "    qW = Queen.from_dataframe(world)\n",
    "    \n",
    "    qW.silent_island_warning = True\n",
    "\n",
    "    qW.transform = 'r'\n",
    "\n",
    "    #moran\n",
    "    moran_sc = esda.moran.Moran(world[['ShowCount']], qW)\n",
    "\n",
    "    #lisa\n",
    "    lisa_sc = esda.Moran_Local(world[\"ShowCount\"], qW)\n",
    "\n",
    "    print(str(moran_sc.I) + \", \" + str(moran_sc.p_sim))\n",
    "    \n",
    "    from pysal.viz.splot import esda as esdaplot\n",
    "    esdaplot.plot_local_autocorrelation(lisa_sc, world, \"ShowCount\")\n",
    "    \n",
    "#          if state in countries_states:\n",
    "#         state_cen = cenpy.products.Decennial2010().from_state(state)\n",
    "\n",
    "#         state_gdf = rdf\n",
    "#         for index, row in state_gdf.iterrows():\n",
    "#             i\n",
    "\n",
    "\n",
    "        \n",
    "#     ax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05), fontsize = 2)\n",
    "\n",
    "#     rdf.plot(ax=ax, color='red', markersize = 2.0)\n",
    "\n",
    "    plt.show()\n",
    "\n",
    "# def traj(gdfs, state = ''):\n",
    "    \n",
    "    \n",
    "def analyze(gdfs, state = ''):\n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    \n",
    "\n",
    "# analyze(gdfs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 396,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Matched: Los Angeles, CA to Los Angeles city within layer Incorporated Places\n"
     ]
    },
    {
     "ename": "KeyError",
     "evalue": "'city'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-396-323bb906607b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmd2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcenpy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mproducts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mACS\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2015\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrom_place\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Los Angeles, CA'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'city'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/cenpy/products.py\u001b[0m in \u001b[0;36mfrom_place\u001b[0;34m(self, place, variables, level, return_geometry, place_type, strict_within, return_bounds, replace_missing)\u001b[0m\n\u001b[1;32m    655\u001b[0m                                               \u001b[0mstrict_within\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstrict_within\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    656\u001b[0m                                               \u001b[0mreturn_bounds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mreturn_bounds\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 657\u001b[0;31m                                               replace_missing=replace_missing)\n\u001b[0m\u001b[1;32m    658\u001b[0m         \u001b[0mvariables\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'GEOID'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvariables\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGEO_ID\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'US'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    659\u001b[0m         \u001b[0mreturn_table\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgeoms\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'GEOID'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'geometry'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/cenpy/products.py\u001b[0m in \u001b[0;36mfrom_place\u001b[0;34m(self, place, variables, place_type, level, return_geometry, geometry_precision, strict_within, return_bounds, replace_missing)\u001b[0m\n\u001b[1;32m    187\u001b[0m                                       \u001b[0mgeometry_precision\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgeometry_precision\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m                                       \u001b[0mstrict_within\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_bounds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 189\u001b[0;31m                                       replace_missing=replace_missing)\n\u001b[0m\u001b[1;32m    190\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mstrict_within\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    191\u001b[0m             geoms = geopandas.sjoin(geoms, env[['geometry']],\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/cenpy/products.py\u001b[0m in \u001b[0;36m_from_bbox\u001b[0;34m(self, bounding_box, variables, level, return_geometry, geometry_precision, strict_within, return_bounds, replace_missing)\u001b[0m\n\u001b[1;32m    209\u001b[0m         \u001b[0menvelope\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'%2C'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'{:.6f}'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbounding_box\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m         \u001b[0mlayer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_api\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmapservice\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayers\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_layer_lookup\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m         involved = layer.query(geometryType='esriGeometryEnvelope',\n\u001b[1;32m    213\u001b[0m                                \u001b[0mgeometry\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0menvelope\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: 'city'"
     ]
    }
   ],
   "source": [
    "md2 = cenpy.products.ACS(2015).from_place('Los Angeles, CA', level = 'city')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                Artist                                Venue  \\\n",
      "0    Shewandagne Hailu                            Echostage   \n",
      "1     Michael Belayneh                            Echostage   \n",
      "2           Teddy Afro                       Union Transfer   \n",
      "3           Teddy Afro                            DC Armory   \n",
      "4            Abdu Kiar                     lion club lounge   \n",
      "..                 ...                                  ...   \n",
      "96        Express Band                          Soundlaster   \n",
      "97        Express Band  Amphitheater des Englischen Gartens   \n",
      "98          Nati Haile           Yoshi's Jazz Club, Oakland   \n",
      "99      Hamelmal Abate                           Los Globos   \n",
      "100     Hamelmal Abate                   Turnhalle im PROGR   \n",
      "\n",
      "                    City State/Province       Country  Longitude    Latitude  \\\n",
      "0             Washington             DC            US  38.919800  -76.972605   \n",
      "1             Washington             DC            US  38.919800  -76.972605   \n",
      "2           Philadelphia             PA            US  39.961623  -75.155307   \n",
      "3             Washington             DC            US  38.888732  -76.975397   \n",
      "4    Zürich, Switzerland            N/A   Switzerland  47.376887    8.541694   \n",
      "..                   ...            ...           ...        ...         ...   \n",
      "96    Landsberg, Germany            N/A       Germany  48.050783   10.870351   \n",
      "97       Munich, Germany            N/A       Germany  48.135125   11.581981   \n",
      "98               Oakland             CA            US  37.795936 -122.278286   \n",
      "99           Los Angeles             CA            US  34.084014 -118.274187   \n",
      "100    Bern, Switzerland            N/A   Switzerland  46.950217    7.442990   \n",
      "\n",
      "                                  geometry  \n",
      "0           POINT (-76.9726045 38.9198004)  \n",
      "1           POINT (-76.9726045 38.9198004)  \n",
      "2    POINT (-75.15530699999999 39.9616234)  \n",
      "3           POINT (-76.9753966 38.8887324)  \n",
      "4              POINT (8.541694 47.3768866)  \n",
      "..                                     ...  \n",
      "96            POINT (10.8703515 48.050783)  \n",
      "97           POINT (11.5819806 48.1351253)  \n",
      "98         POINT (-122.2782863 37.7959363)  \n",
      "99         POINT (-118.2741873 34.0840136)  \n",
      "100           POINT (7.4429895 46.9502173)  \n",
      "\n",
      "[101 rows x 8 columns]\n",
      "            Artist                       Venue              City  \\\n",
      "64            Gigi         Visalia Fox Theatre           Visalia   \n",
      "65            Gigi                      El Cid  Los Angeles (LA)   \n",
      "98      Nati Haile  Yoshi's Jazz Club, Oakland           Oakland   \n",
      "99  Hamelmal Abate                  Los Globos       Los Angeles   \n",
      "\n",
      "   State/Province Country  Longitude    Latitude  \\\n",
      "64             CA      US  36.330413 -119.294898   \n",
      "65             CA      US  34.093950 -118.282100   \n",
      "98             CA      US  37.795936 -122.278286   \n",
      "99             CA      US  34.084014 -118.274187   \n",
      "\n",
      "                           geometry  \n",
      "64    POINT (-119.294898 36.330413)  \n",
      "65       POINT (-118.2821 34.09395)  \n",
      "98  POINT (-122.2782863 37.7959363)  \n",
      "99  POINT (-118.2741873 34.0840136)  \n",
      "Empty GeoDataFrame\n",
      "Columns: [GEOID, geometry, NAME, state, county, index_right, Artist, Venue, City, State/Province, Country, Longitude, Latitude]\n",
      "Index: []\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages/geopandas/tools/sjoin.py:44: UserWarning: CRS of frames being joined does not match!\n",
      "  warn('CRS of frames being joined does not match!')\n"
     ]
    }
   ],
   "source": [
    "state_gdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "\n",
    "print(state_gdf)\n",
    "for index, row in state_gdf.iterrows():\n",
    "    if row[3][1:] != 'CA':\n",
    "        state_gdf.drop(index, inplace=True)\n",
    "print(state_gdf)\n",
    "      \n",
    "dfsjoin = gpd.sjoin(md2,state_gdf) #Spatial join Points to polygons\n",
    "# dfpivot = pd.pivot_table(dfsjoin,index='geometry',columns='Food',aggfunc={'Food':len})\n",
    "# dfpivot.columns = dfpivot.columns.droplevel()\n",
    "\n",
    "print(dfsjoin)\n",
    "# dfpolynew = polys.merge(dfpivot, how='left',on='PolyID')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    884\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 885\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    886\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    474\u001b[0m         \"\"\"\n\u001b[0;32m--> 475\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    476\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: ",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-20-dfed8d2dc3b9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mreq_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#travis scott, 2018-10-31, 2018-12-01\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-12-e117c773f566>\u001b[0m in \u001b[0;36mreq_input\u001b[0;34m()\u001b[0m\n\u001b[1;32m    104\u001b[0m         \u001b[0mis_venue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m         \u001b[0mcmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Venue search (0) or event search (1)?\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    107\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcmd\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    858\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    859\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 860\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    861\u001b[0m         )\n\u001b[1;32m    862\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    888\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    889\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 890\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    891\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    892\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "req_input()\n",
    "\n",
    "#travis scott, 2018-10-31, 2018-12-01"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. query for hipster tagged artists. or popularity <30 with followers < 50000\n",
    "\n",
    "2. generate the related artists with functions written\n",
    "\n",
    "3. find 'tours' using 1 week cutoff - use longest one with at least one date in last 2 years\n",
    "\n",
    "4. moving pandas - plot all trajectories\n",
    "\n",
    "analysis should be several genres\n",
    "\n",
    "by the end, each genre should have 4 examples of average trajectories with points labeled by importance\n",
    "\n",
    "also, use cenpy on these points to get more info about them, certain socioeconomic factors.\n",
    "\n",
    "run ols, other stuff lol\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "related_artists search 1\n",
      "['detroit hip hop', 'detroit trap', 'dmv rap', 'new orleans rap', 'detroit trap', 'boom bap', 'cali rap', 'underground hip hop', 'west coast trap', 'atl hip hop', 'detroit trap', 'west coast trap', 'underground hip hop', 'detroit trap', 'boom bap', 'underground hip hop', 'west coast trap', 'detroit trap']\n",
      "[('Larry June', '1grN0519h2zYqpRtYbDZAl', 3, 30791), ('LNDN DRGS', '65d2Cw70rLuVwEZwQpHtFW', 3, 9782), ('Dusty McFly', '0ekbxDROhz27q5QvYDCOsj', 2, 1814), ('Payroll Giovanni & Cardo', '70Wt3o0gTumIypKychnX6U', 2, 6687), ('Premo Rice', '4pTta0pLvML8AM2AwfgJyE', 1, 3448), ('Ren Gettz', '5gvvV1muWeUh3BNDT0YnTV', 1, 234), ('Oba Rowland', '4Mou7Vl6XtRSQIBdv2XTld', 1, 1341), ('Nolan The Ninja', '1HnXpWThntjKhdC6Kp3V3u', 1, 3305), ('Jonah Cruzz', '21NrnXKmcu8PF48F8SwulJ', 1, 3334), ('Dot Demo', '2ID5ZEW2EbdUo1oEjwJnD3', 1, 3868), ('Babyface Ray', '3zZ88AwlTwfCJkowsFCvLA', 1, 13660), ('Payroll Giovanni', '6q2peHL8h2vUGvWNbsIjii', 1, 27178)]\n",
      "related_artists ra_help 3\n",
      "102\n",
      "70\n",
      "[14, 18]\n",
      "[5, 17]\n",
      "[8, 11]\n",
      "[0, 4]\n",
      "[11, 12]\n",
      "[0, 10]\n",
      "[0, 0]\n",
      "[4, 8]\n",
      "[4, 5]\n",
      "[0, 0]\n",
      "[0, 1]\n",
      "[2, 3]\n",
      "[12, 18]\n",
      "[9, 18]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[3, 5]\n",
      "[0, 0]\n",
      "[2, 3]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[0, 1]\n",
      "[0, 1]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[11, 17]\n",
      "[6, 9]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[0, 1]\n",
      "[3, 14]\n",
      "[3, 18]\n",
      "[6, 9]\n",
      "[3, 10]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[0, 0]\n",
      "[0, 0]\n"
     ]
    }
   ],
   "source": [
    "import folium\n",
    "# se = sp.search(q = 'genre:%22southern%20hip%20hop%22', type = 'album', market = 'US')\n",
    "\n",
    "#         for a in sp.artist_related_artists(artid)['artists']:\n",
    "\n",
    "\n",
    "def compile_tours(name, spid = -1, followers = -1, lessthan = True):\n",
    "    if (spid != -1):\n",
    "        artists = related_artists(artid = name, followers = followers, lessthan = lessthan)\n",
    "    else:\n",
    "        artists = related_artists(artname = name, followers = followers, lessthan = lessthan)\n",
    "\n",
    "    gl = []\n",
    "\n",
    "    for a in artists:\n",
    "        an = get_artist_id(a[0].replace(' ', '+')) if not (a[0]+' ').isspace() else print('need artist!')\n",
    "    \n",
    "        if an != -1:\n",
    "            req = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "#             print(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "            g = find_tour(req.json(), a[0])\n",
    "            if g is not int:\n",
    "                gl.append(g)\n",
    "            \n",
    "    return gl\n",
    "\n",
    "ts = compile_tours('supakaine', followers = 50000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[        Artist                                              Venue       City  \\\n",
      "14  Larry June                           House of Blues - Houston    Houston   \n",
      "15  Larry June  House of Blues Dallas presented by Cricket Wir...     Dallas   \n",
      "16  Larry June                                             Mohawk     Austin   \n",
      "17  Larry June                                      The Van Buren    Phoenix   \n",
      "18  Larry June                                               Soma  San Diego   \n",
      "\n",
      "   State/Province Country  Longitude    Latitude           t  \\\n",
      "14             TX      US  29.753930  -95.364060  2018-05-24   \n",
      "15             TX      US  32.785330  -96.808090  2018-05-23   \n",
      "16             TX      US  30.270130  -97.735905  2018-05-22   \n",
      "17             AZ      US  33.451411 -112.078188  2018-05-20   \n",
      "18             CA      US  32.753815 -117.209272  2018-05-19   \n",
      "\n",
      "                               geometry  \n",
      "14  POINT (-95.36405999999999 29.75393)  \n",
      "15  POINT (-96.80809000000001 32.78533)  \n",
      "16       POINT (-97.7359046 30.2701302)  \n",
      "17      POINT (-112.0781884 33.4514114)  \n",
      "18        POINT (-117.209272 32.753815)  ,          Artist                            Venue         City State/Province  \\\n",
      "5   Young Roddy    Santos Party House Downstairs    Manhattan             NY   \n",
      "6   Young Roddy                        Chop Shop    Charlotte             NC   \n",
      "7   Young Roddy             The Kymberle Project     Brooklyn             NY   \n",
      "8   Young Roddy                     Subterranean      Chicago             IL   \n",
      "9   Young Roddy                    The Riot Room  Kansas City             MO   \n",
      "10  Young Roddy                       The Analog     Portland             OR   \n",
      "11  Young Roddy                    Venue Oakland      Oakland             CA   \n",
      "12  Young Roddy                       Las Palmas    Hollywood             CA   \n",
      "13  Young Roddy                         Pub Rock   Scottsdale             AZ   \n",
      "14  Young Roddy                       The Korova  San Antonio             TX   \n",
      "15  Young Roddy           Prophet Bar Elm Street       Dallas             TX   \n",
      "16  Young Roddy                            Red 7       Austin             TX   \n",
      "17  Young Roddy  The Greenroom at Warehouse Live      Houston             TX   \n",
      "\n",
      "   Country  Longitude    Latitude           t  \\\n",
      "5       US  40.717700  -74.001530  2015-10-13   \n",
      "6       US  35.247390  -80.806228  2015-10-06   \n",
      "7       US  40.678089  -73.948400  2015-09-29   \n",
      "8       US  41.910409  -87.677996  2015-09-25   \n",
      "9       US  39.054209  -94.590906  2015-09-22   \n",
      "10      US  45.512008 -122.658177  2015-09-19   \n",
      "11      US  37.804256 -122.270302  2015-09-12   \n",
      "12      US  34.102051 -118.336138  2015-09-11   \n",
      "13      US  33.457744 -111.908162  2015-09-09   \n",
      "14      US  29.429386  -98.492984  2015-09-06   \n",
      "15      US  32.783772  -96.787109  2015-09-05   \n",
      "16      US  30.267224  -97.736175  2015-09-03   \n",
      "17      US  29.751979  -95.354499  2015-09-02   \n",
      "\n",
      "                                 geometry  \n",
      "5               POINT (-74.00153 40.7177)  \n",
      "6          POINT (-80.8062281 35.2473898)  \n",
      "7          POINT (-73.9484003 40.6780885)  \n",
      "8   POINT (-87.67799599999999 41.9104085)  \n",
      "9   POINT (-94.59090550000001 39.0542088)  \n",
      "10        POINT (-122.6581769 45.5120081)  \n",
      "11          POINT (-122.270302 37.804256)  \n",
      "12        POINT (-118.3361384 34.1020506)  \n",
      "13        POINT (-111.9081615 33.4577445)  \n",
      "14         POINT (-98.4929842 29.4293856)  \n",
      "15         POINT (-96.7871085 32.7837716)  \n",
      "16         POINT (-97.7361753 30.2672236)  \n",
      "17         POINT (-95.3544991 29.7519793)  ,                    Artist                   Venue           City  \\\n",
      "8   Trademark Da Skydiver               Club Boca     Boca Raton   \n",
      "9   Trademark Da Skydiver           Grand Central          Miami   \n",
      "10  Trademark Da Skydiver             Jannus Live  St Petersburg   \n",
      "11  Trademark Da Skydiver  SoapBox Laundro Lounge     Wilmington   \n",
      "\n",
      "   State/Province Country  Longitude   Latitude           t  \\\n",
      "8              FL      US  26.350098 -80.100436  2011-06-17   \n",
      "9              FL      US  25.780664 -80.193623  2011-06-16   \n",
      "10             FL      US  27.771666 -82.636035  2011-06-15   \n",
      "11             NC      US  34.238382 -77.949208  2011-06-09   \n",
      "\n",
      "                                geometry  \n",
      "8           POINT (-80.100436 26.350098)  \n",
      "9           POINT (-80.193623 25.780664)  \n",
      "10  POINT (-82.63603500000001 27.771666)  \n",
      "11          POINT (-77.949208 34.238382)  ,               Artist                         Venue       City State/Province  \\\n",
      "0  Benny The Butcher                         Trees     Dallas             TX   \n",
      "1  Benny The Butcher                 Empire Garage     Austin             TX   \n",
      "2  Benny The Butcher  The Studio at Warehouse Live    Houston             TX   \n",
      "3  Benny The Butcher          Center Stage Theater    Atlanta             GA   \n",
      "4  Benny The Butcher               The Underground  Charlotte             NC   \n",
      "\n",
      "  Country  Longitude  Latitude           t  \\\n",
      "0      US   32.78461 -96.78442  2019-12-01   \n",
      "1      US   30.26749 -97.73605  2019-11-30   \n",
      "2      US   29.75212 -95.35467  2019-11-29   \n",
      "3      US   33.79209 -84.38800  2019-11-25   \n",
      "4      US   35.24030 -80.84531  2019-11-23   \n",
      "\n",
      "                              geometry  \n",
      "0           POINT (-96.78442 32.78461)  \n",
      "1  POINT (-97.73605000000001 30.26749)  \n",
      "2           POINT (-95.35467 29.75212)  \n",
      "3  POINT (-84.38800000000001 33.79209)  \n",
      "4            POINT (-80.84531 35.2403)  ,          Artist             Venue     City State/Province Country  Longitude  \\\n",
      "11  Chris Crack  The Empty Bottle  Chicago             IL      US  41.900392   \n",
      "12  Chris Crack         Abbey Pub  Chicago             IL      US  41.950386   \n",
      "\n",
      "     Latitude           t                        geometry  \n",
      "11 -87.686788  2015-03-17  POINT (-87.6867877 41.9003921)  \n",
      "12 -87.713678  2015-03-13  POINT (-87.7136782 41.9503862)  ,           Artist                            Venue          City  \\\n",
      "0   Roc Marciano            The Novo by Microsoft   Los Angeles   \n",
      "1   Roc Marciano       House of Blues - San Diego     San Diego   \n",
      "2   Roc Marciano                      Fox Theater       Oakland   \n",
      "3   Roc Marciano                  Neptune Theatre       Seattle   \n",
      "4   Roc Marciano  Cervantes' Masterpiece Ballroom        Denver   \n",
      "5   Roc Marciano                     First Avenue   Minneapolis   \n",
      "6   Roc Marciano               Concord Music Hall       Chicago   \n",
      "7   Roc Marciano                     Toad's Place     New Haven   \n",
      "8   Roc Marciano              Franklin Music Hall  Philadelphia   \n",
      "9   Roc Marciano                     Irving Plaza      New York   \n",
      "10  Roc Marciano               Paradise Rock Club        Boston   \n",
      "\n",
      "   State/Province Country  Longitude   Latitude           t  \\\n",
      "0              CA      US   34.04494 -118.26550  2019-03-16   \n",
      "1              CA      US   32.71636 -117.15961  2019-03-13   \n",
      "2              CA      US   37.80785 -122.27000  2019-03-11   \n",
      "3              WA      US   47.66128 -122.31365  2019-03-07   \n",
      "4              CO      US   39.75449 -104.97854  2019-03-02   \n",
      "5              MN      US   44.97827  -93.27608  2019-02-24   \n",
      "6              IL      US   41.91856  -87.69003  2019-02-23   \n",
      "7              CT      US   41.31157  -72.92936  2019-02-17   \n",
      "8              PA      US   39.95898  -75.15028  2019-02-16   \n",
      "9              NY      US   40.73492  -73.98845  2019-02-13   \n",
      "10             MA      US   42.35211  -71.11942  2019-02-11   \n",
      "\n",
      "                               geometry  \n",
      "0            POINT (-118.2655 34.04494)  \n",
      "1           POINT (-117.15961 32.71636)  \n",
      "2              POINT (-122.27 37.80785)  \n",
      "3           POINT (-122.31365 47.66128)  \n",
      "4           POINT (-104.97854 39.75449)  \n",
      "5   POINT (-93.27607999999999 44.97827)  \n",
      "6   POINT (-87.69002999999999 41.91856)  \n",
      "7            POINT (-72.92936 41.31157)  \n",
      "8            POINT (-75.15028 39.95898)  \n",
      "9            POINT (-73.98845 40.73492)  \n",
      "10  POINT (-71.11942000000001 42.35211)  , -1,              Artist             Venue     City State/Province Country  \\\n",
      "0  Kook the Kashcow  Majestic Theatre  Detroit             MI      US   \n",
      "\n",
      "   Longitude  Latitude           t                  geometry  \n",
      "0    42.3871  -83.1026  2014-03-15  POINT (-83.1026 42.3871)  ,      Artist             Venue           City State/Province Country  \\\n",
      "4  ALLBLACK             Sonia      Cambridge             MA      US   \n",
      "5  ALLBLACK  Milkboy Arthouse   College Park             MD      US   \n",
      "6  ALLBLACK  Gramercy Theatre       New York             NY      US   \n",
      "7  ALLBLACK   The Underground      Charlotte             NC      US   \n",
      "8  ALLBLACK     Tower Theatre  Oklahoma City             OK      US   \n",
      "\n",
      "   Longitude  Latitude           t                             geometry  \n",
      "4   42.36350 -71.10162  2019-08-06            POINT (-71.10162 42.3635)  \n",
      "5   38.98144 -76.93828  2019-08-03  POINT (-76.93828000000001 38.98144)  \n",
      "6   40.73977 -73.98493  2019-08-02  POINT (-73.98493000000001 40.73977)  \n",
      "7   35.24030 -80.84531  2019-07-30            POINT (-80.84531 35.2403)  \n",
      "8   35.49350 -97.52016  2019-07-23            POINT (-97.52016 35.4935)  ,         Artist      Venue       City State/Province Country  Longitude  \\\n",
      "4  Dusty McFly  Blind Pig  Ann Arbor             MI      US  42.280221   \n",
      "5  Dusty McFly  Blind Pig  Ann Arbor             MI      US  42.280221   \n",
      "\n",
      "    Latitude           t                       geometry  \n",
      "4 -83.751238  2012-10-04  POINT (-83.7512377 42.280221)  \n",
      "5 -83.751238  2012-10-01  POINT (-83.7512377 42.280221)  ,                      Artist        Venue     City State/Province Country  \\\n",
      "0  Payroll Giovanni & Cardo  Thalia Hall  Chicago             IL      US   \n",
      "\n",
      "   Longitude  Latitude           t                    geometry  \n",
      "0   41.85773 -87.65733  2016-12-14  POINT (-87.65733 41.85773)  ,           Artist                     Venue              City State/Province  \\\n",
      "0  Westside Gunn  Oakland Metro Operahouse           Oakland             CA   \n",
      "1  Westside Gunn                 Catch One  Los Angeles (LA)             CA   \n",
      "\n",
      "  Country  Longitude   Latitude           t                     geometry  \n",
      "0      US   37.79706 -122.27779  2019-07-27  POINT (-122.27779 37.79706)  \n",
      "1      US   34.04759 -118.32415  2019-07-25  POINT (-118.32415 34.04759)  ,               Artist                 Venue     City State/Province Country  \\\n",
      "2  Doughboyz Cashout  The Crofoot Ballroom  Pontiac             MI      US   \n",
      "3  Doughboyz Cashout    The Garden Theater  Detroit             MI      US   \n",
      "\n",
      "   Longitude   Latitude           t                        geometry  \n",
      "2  42.636741 -83.291705  2014-05-09  POINT (-83.2917046 42.6367415)  \n",
      "3  42.349888 -83.059922  2014-05-02  POINT (-83.0599224 42.3498882)  ,        Artist                  Venue         City State/Province Country  \\\n",
      "12  Kool John           The Catalyst   Santa Cruz             CA      US   \n",
      "13  Kool John          Ace of Spades   Sacramento             CA      US   \n",
      "14  Kool John          Crest Theatre       Fresno             CA      US   \n",
      "15  Kool John                Club XS       Tucson             AZ      US   \n",
      "16  Kool John          The Pressroom      Phoenix             AZ      US   \n",
      "17  Kool John   The Loft at Gilley's       Dallas             TX      US   \n",
      "18  Kool John  Alamo City Music Club  San Antonio             TX      US   \n",
      "\n",
      "    Longitude    Latitude           t                              geometry  \n",
      "12  36.972000 -122.026000  2016-06-23               POINT (-122.026 36.972)  \n",
      "13  38.569980 -121.490690  2016-06-22           POINT (-121.49069 38.56998)  \n",
      "14  36.735182 -119.793053  2016-06-18       POINT (-119.7930528 36.7351821)  \n",
      "15  32.237116 -110.867374  2016-06-12         POINT (-110.867374 32.237116)  \n",
      "16  33.445745 -112.079656  2016-06-11       POINT (-112.0796557 33.4457445)  \n",
      "17  32.768777  -96.797987  2016-06-08  POINT (-96.79798700000001 32.768777)  \n",
      "18  29.425672  -98.476976  2016-06-07         POINT (-98.4769759 29.425672)  ,       Artist                         Venue          City State/Province  \\\n",
      "9   G Perico                        Neumos       Seattle             WA   \n",
      "10  G Perico                The New Parish       Oakland             CA   \n",
      "11  G Perico        Paper Tiger Main Stage   San Antonio             TX   \n",
      "12  G Perico         Come and Take It Live        Austin             TX   \n",
      "13  G Perico  The Studio at Warehouse Live       Houston             TX   \n",
      "14  G Perico                         Trees        Dallas             TX   \n",
      "15  G Perico           U Street Music Hall    Washington             DC   \n",
      "16  G Perico                Voltage Lounge  Philadelphia             PA   \n",
      "17  G Perico            Paradise Rock Club        Boston             MA   \n",
      "18  G Perico                       Ottobar     Baltimore             MD   \n",
      "\n",
      "   Country  Longitude   Latitude           t  \\\n",
      "9       US   47.61381 -122.31967  2018-12-15   \n",
      "10      US   37.80775 -122.27270  2018-12-11   \n",
      "11      US   29.44865  -98.48757  2018-12-07   \n",
      "12      US   30.24029  -97.72853  2018-12-05   \n",
      "13      US   29.75212  -95.35467  2018-12-04   \n",
      "14      US   32.78461  -96.78442  2018-12-03   \n",
      "15      US   38.91720  -77.02776  2018-11-27   \n",
      "16      US   39.95898  -75.15026  2018-11-24   \n",
      "17      US   42.35211  -71.11942  2018-11-23   \n",
      "18      US   39.31884  -76.61950  2018-11-20   \n",
      "\n",
      "                               geometry  \n",
      "9           POINT (-122.31967 47.61381)  \n",
      "10           POINT (-122.2727 37.80775)  \n",
      "11  POINT (-98.48757000000001 29.44865)  \n",
      "12  POINT (-97.72853000000001 30.24029)  \n",
      "13           POINT (-95.35467 29.75212)  \n",
      "14           POINT (-96.78442 32.78461)  \n",
      "15            POINT (-77.02776 38.9172)  \n",
      "16           POINT (-75.15026 39.95898)  \n",
      "17  POINT (-71.11942000000001 42.35211)  \n",
      "18            POINT (-76.6195 39.31884)  ,            Artist      Venue               City State/Province Country  \\\n",
      "0  Quentin Miller  Grog Shop  Cleveland Heights             OH      US   \n",
      "\n",
      "   Longitude  Latitude           t                             geometry  \n",
      "0   41.50832  -81.5803  2018-12-30  POINT (-81.58029999999999 41.50832)  ,   Artist   Venue    City State/Province Country  Longitude   Latitude  \\\n",
      "0    Le$  Mohawk  Austin             TX      US   30.27013 -97.735905   \n",
      "\n",
      "            t                        geometry  \n",
      "0  2009-10-28  POINT (-97.7359046 30.2701302)  ,     Artist          Venue       City State/Province Country  Longitude  \\\n",
      "0  K Deezy  Unknown venue  Centralia             WA      US    46.7289   \n",
      "\n",
      "   Latitude           t                  geometry  \n",
      "0  -122.953  2013-08-30  POINT (-122.953 46.7289)  ,          Artist          Venue      City State/Province Country  Longitude  \\\n",
      "3  Black Cobain  The Paper Box  Brooklyn             NY      US  40.710678   \n",
      "4  Black Cobain  The Paper Box  Brooklyn             NY      US  40.710678   \n",
      "5  Black Cobain  The Paper Box  Brooklyn             NY      US  40.710678   \n",
      "\n",
      "    Latitude           t                       geometry  \n",
      "3 -73.936494  2014-07-13  POINT (-73.936494 40.7106783)  \n",
      "4 -73.936494  2014-07-13  POINT (-73.936494 40.7106783)  \n",
      "5 -73.936494  2014-07-13  POINT (-73.936494 40.7106783)  ,     Artist             Venue            City State/Province Country  \\\n",
      "0  Niko G4  The Roxy Theatre  West Hollywood             CA      US   \n",
      "\n",
      "   Longitude    Latitude           t                       geometry  \n",
      "0  34.090712 -118.387966  2017-09-25  POINT (-118.387966 34.090712)  ,     Artist                 Venue     City State/Province Country  Longitude  \\\n",
      "2  Cashout  The Crofoot Ballroom  Pontiac             MI      US  42.636741   \n",
      "3  Cashout    The Garden Theater  Detroit             MI      US  42.349888   \n",
      "\n",
      "    Latitude           t                        geometry  \n",
      "2 -83.291705  2014-05-09  POINT (-83.2917046 42.6367415)  \n",
      "3 -83.059922  2014-05-02  POINT (-83.0599224 42.3498882)  ,       Artist         Venue     City State/Province Country  Longitude  \\\n",
      "0  Flee Lord  Subterranean  Chicago             IL      US   41.91041   \n",
      "\n",
      "   Latitude           t                  geometry  \n",
      "0   -87.678  2019-04-16  POINT (-87.678 41.91041)  ,             Artist         Venue              City State/Province Country  \\\n",
      "0  Nolan The Ninja  Busby's East  Los Angeles (LA)             CA      US   \n",
      "\n",
      "   Longitude  Latitude           t                    geometry  \n",
      "0   34.06212 -118.3458  2019-01-30  POINT (-118.3458 34.06212)  ,        Artist              Venue     City State/Province Country  Longitude  \\\n",
      "0  CRIMEAPPLE  Firewater Cantina  Ontario             CA      US   34.06359   \n",
      "1  CRIMEAPPLE      Unknown venue  Ontario             CA      US   34.05280   \n",
      "\n",
      "    Latitude           t                     geometry  \n",
      "0 -117.67981  2019-10-05  POINT (-117.67981 34.06359)  \n",
      "1 -117.62800  2019-10-05     POINT (-117.628 34.0528)  ,            Artist              Venue     City State/Province Country  \\\n",
      "0  Willie The Kid      Unknown venue  Chicago             IL      US   \n",
      "1  Willie The Kid  The Chicago Place  Chicago             IL      US   \n",
      "\n",
      "   Longitude  Latitude           t                    geometry  \n",
      "0   41.87811 -87.62980  2019-03-02   POINT (-87.6298 41.87811)  \n",
      "1   41.92344 -87.72637  2019-03-02  POINT (-87.72637 41.92344)  , -1,              Artist        Venue     City State/Province Country  Longitude  \\\n",
      "0  Payroll Giovanni  Thalia Hall  Chicago             IL      US   41.85773   \n",
      "\n",
      "   Latitude           t                    geometry  \n",
      "0 -87.65733  2016-12-14  POINT (-87.65733 41.85773)  ,      Artist                     Venue       City State/Province Country  \\\n",
      "11  Jay 305               The Showbox    Seattle             WA      US   \n",
      "12  Jay 305  Hawthorne Theater Lounge   Portland             OR      US   \n",
      "13  Jay 305    Observatory North Park  San Diego             CA      US   \n",
      "14  Jay 305                 191 Toole     Tucson             AZ      US   \n",
      "15  Jay 305                  Club Red       Mesa             AZ      US   \n",
      "16  Jay 305               Fox Theatre    Boulder             CO      US   \n",
      "17  Jay 305                     Trees     Dallas             TX      US   \n",
      "\n",
      "    Longitude    Latitude           t                         geometry  \n",
      "11  47.608790 -122.339990  2017-11-05      POINT (-122.33999 47.60879)  \n",
      "12  45.511910 -122.622838  2017-11-02  POINT (-122.6228375 45.5119105)  \n",
      "13  32.748180 -117.131380  2017-10-29      POINT (-117.13138 32.74818)  \n",
      "14  32.224940 -110.968980  2017-10-27      POINT (-110.96898 32.22494)  \n",
      "15  33.423483 -111.859024  2017-10-26  POINT (-111.8590237 33.4234826)  \n",
      "16  40.008000 -105.276290  2017-10-23        POINT (-105.27629 40.008)  \n",
      "17  32.784610  -96.784420  2017-10-21       POINT (-96.78442 32.78461)  ,                Artist                         Venue          City  \\\n",
      "6  Conway the Machine                Voltage Lounge  Philadelphia   \n",
      "7  Conway the Machine                Howard Theatre    Washington   \n",
      "8  Conway the Machine                     Sony Hall      New York   \n",
      "9  Conway the Machine  The Middle East - Downstairs     Cambridge   \n",
      "\n",
      "  State/Province Country  Longitude  Latitude           t  \\\n",
      "6             PA      US   39.95898 -75.15026  2019-06-14   \n",
      "7             DC      US   38.91527 -77.02110  2019-06-13   \n",
      "8             NY      US   40.75959 -73.98700  2019-06-12   \n",
      "9             MA      US   42.36370 -71.10131  2019-06-08   \n",
      "\n",
      "                              geometry  \n",
      "6           POINT (-75.15026 39.95898)  \n",
      "7            POINT (-77.0211 38.91527)  \n",
      "8  POINT (-73.98699999999999 40.75959)  \n",
      "9            POINT (-71.10131 42.3637)  ,               Artist                   Venue     City State/Province Country  \\\n",
      "0  Seven The General  Harpos Concert Theatre  Detroit             MI      US   \n",
      "\n",
      "   Longitude   Latitude           t                        geometry  \n",
      "0  42.403887 -82.966296  2018-03-30  POINT (-82.9662956 42.4038868)  ,   Artist          Venue     City State/Province Country  Longitude   Latitude  \\\n",
      "0   Sino  Unknown venue  Detroit             MI      US  42.331427 -83.045754   \n",
      "\n",
      "            t                       geometry  \n",
      "0  2018-04-04  POINT (-83.0457538 42.331427)  ,      Artist            Venue      City State/Province Country  Longitude  \\\n",
      "0  Dot Demo  Sound Of Brazil  New York             NY      US   40.72845   \n",
      "\n",
      "   Latitude           t                             geometry  \n",
      "0 -74.00512  2019-03-28  POINT (-74.00512000000001 40.72845)  ,                 Artist          Venue              City State/Province  \\\n",
      "0  Polyester the Saint  Unknown venue         Echo Park             CA   \n",
      "1  Polyester the Saint       Echoplex  Los Angeles (LA)             CA   \n",
      "\n",
      "  Country  Longitude   Latitude           t                     geometry  \n",
      "0      US   34.07816 -118.26056  2019-08-15  POINT (-118.26056 34.07816)  \n",
      "1      US   34.07759 -118.26061  2019-08-15  POINT (-118.26061 34.07759)  ,             Artist                                              Venue  \\\n",
      "3   Childish Major                          Brick & Mortar Music Hall   \n",
      "4   Childish Major                                    Momo Sacramento   \n",
      "5   Childish Major                                         Los Globos   \n",
      "6   Childish Major                                       Velvet Jones   \n",
      "7   Childish Major                                 CONSTELLATION ROOM   \n",
      "8   Childish Major                                      The Van Buren   \n",
      "9   Childish Major                                    Granada Theater   \n",
      "10  Childish Major                                  Variety Playhouse   \n",
      "11  Childish Major                                          9:30 Club   \n",
      "12  Childish Major                                           S.O.B.'s   \n",
      "13  Childish Major                                       Irving Plaza   \n",
      "14  Childish Major  House of Blues Boston presented by Cricket Wir...   \n",
      "\n",
      "             City State/Province Country  Longitude   Latitude           t  \\\n",
      "3   San Francisco             CA      US   37.76969 -122.42016  2018-11-27   \n",
      "4      Sacramento             CA      US   38.57385 -121.47021  2018-11-25   \n",
      "5     Los Angeles             CA      US   34.08401 -118.27419  2018-11-24   \n",
      "6   Santa Barbara             CA      US   34.41628 -119.69509  2018-11-19   \n",
      "7       Santa Ana             CA      US   33.69984 -117.91945  2018-11-18   \n",
      "8         Phoenix             AZ      US   33.45141 -112.07819  2018-11-16   \n",
      "9          Dallas             TX      US   32.79950  -96.78720  2018-11-13   \n",
      "10        Atlanta             GA      US   33.76362  -84.35096  2018-11-09   \n",
      "11     Washington             DC      US   38.91787  -77.02372  2018-11-07   \n",
      "12      Manhattan             NY      US   40.72845  -74.00512  2018-11-06   \n",
      "13       New York             NY      US   40.73492  -73.98845  2018-11-03   \n",
      "14         Boston             MA      US   42.34735  -71.09567  2018-11-02   \n",
      "\n",
      "                               geometry  \n",
      "3           POINT (-122.42016 37.76969)  \n",
      "4           POINT (-121.47021 38.57385)  \n",
      "5           POINT (-118.27419 34.08401)  \n",
      "6           POINT (-119.69509 34.41628)  \n",
      "7           POINT (-117.91945 33.69984)  \n",
      "8           POINT (-112.07819 33.45141)  \n",
      "9              POINT (-96.7872 32.7995)  \n",
      "10           POINT (-84.35096 33.76362)  \n",
      "11           POINT (-77.02372 38.91787)  \n",
      "12  POINT (-74.00512000000001 40.72845)  \n",
      "13           POINT (-73.98845 40.73492)  \n",
      "14           POINT (-71.09567 42.34735)  ,         Artist                           Venue              City  \\\n",
      "3   Joey Fatts                  85 W Newton St            Boston   \n",
      "4   Joey Fatts                       191 Toole            Tucson   \n",
      "5   Joey Fatts                       191 Toole            Tucson   \n",
      "6   Joey Fatts                  Regent Theater  Los Angeles (LA)   \n",
      "7   Joey Fatts                 Complex Oakland           Oakland   \n",
      "8   Joey Fatts                        Funhouse           Seattle   \n",
      "9   Joey Fatts         Jub Jub's Thirst Parlor              Reno   \n",
      "10  Joey Fatts                     Kilby Court    Salt Lake City   \n",
      "11  Joey Fatts                   The Riot Room       Kansas City   \n",
      "12  Joey Fatts      Maple Tavern Bar and Grill       Maple Grove   \n",
      "13  Joey Fatts                 Portage Theater           Chicago   \n",
      "14  Joey Fatts                 Kung Fu Necktie      Philadelphia   \n",
      "15  Joey Fatts   The Ballroom at Harmony House           Webster   \n",
      "16  Joey Fatts  Basement Transmissions Theatre              Erie   \n",
      "17  Joey Fatts     Knitting Factory - Brooklyn          Brooklyn   \n",
      "18  Joey Fatts           Amityville Music Hall        Amityville   \n",
      "\n",
      "   State/Province Country  Longitude    Latitude           t  \\\n",
      "3              MA      US  42.340969  -71.075792  2017-03-31   \n",
      "4              AZ      US  32.224942 -110.968984  2017-03-25   \n",
      "5              AZ      US  32.224942 -110.968984  2017-03-25   \n",
      "6              CA      US  34.046980 -118.247800  2017-03-24   \n",
      "7              CA      US  37.804235 -122.270307  2017-03-23   \n",
      "8              WA      US  47.618690 -122.329390  2017-03-21   \n",
      "9              NV      US  39.526478 -119.803415  2017-03-18   \n",
      "10             UT      US  40.753014 -111.900797  2017-03-17   \n",
      "11             MO      US  39.054209  -94.590906  2017-03-15   \n",
      "12             MN      US  45.124832  -93.426635  2017-03-11   \n",
      "13             IL      US  41.954352  -87.749032  2017-03-10   \n",
      "14             PA      US  39.970274  -75.135923  2017-03-09   \n",
      "15             NY      US  43.212776  -77.428164  2017-03-08   \n",
      "16             PA      US  42.123621  -80.084649  2017-03-07   \n",
      "17             NY      US  40.714300  -73.955870  2017-03-06   \n",
      "18             NY      US  40.678940  -73.417377  2017-03-05   \n",
      "\n",
      "                                 geometry  \n",
      "3    POINT (-71.07579200000001 42.340969)  \n",
      "4         POINT (-110.9689836 32.2249416)  \n",
      "5         POINT (-110.9689836 32.2249416)  \n",
      "6              POINT (-118.2478 34.04698)  \n",
      "7         POINT (-122.2703069 37.8042354)  \n",
      "8             POINT (-122.32939 47.61869)  \n",
      "9         POINT (-119.8034153 39.5264776)  \n",
      "10        POINT (-111.9007966 40.7530136)  \n",
      "11  POINT (-94.59090550000001 39.0542088)  \n",
      "12         POINT (-93.4266348 45.1248319)  \n",
      "13          POINT (-87.749032 41.9543517)  \n",
      "14         POINT (-75.1359229 39.9702741)  \n",
      "15         POINT (-77.4281641 43.2127759)  \n",
      "16          POINT (-80.084649 42.1236213)  \n",
      "17              POINT (-73.95587 40.7143)  \n",
      "18  POINT (-73.41737670000001 40.6789401)  ,          Artist                         Venue        City State/Province  \\\n",
      "6  Corner Boy P  The Middle East - Downstairs   Cambridge             MA   \n",
      "7  Corner Boy P         Amityville Music Hall  Amityville             NY   \n",
      "8  Corner Boy P                 Town Ballroom     Buffalo             NY   \n",
      "9  Corner Boy P     St. Andrew's Hall Detroit     Detroit             MI   \n",
      "\n",
      "  Country  Longitude   Latitude           t  \\\n",
      "6      US  42.363697 -71.101309  2017-10-17   \n",
      "7      US  40.678940 -73.417377  2017-10-15   \n",
      "8      US  42.893094 -78.871579  2017-10-13   \n",
      "9      US  42.332210 -83.041440  2017-10-08   \n",
      "\n",
      "                                geometry  \n",
      "6          POINT (-71.1013086 42.363697)  \n",
      "7  POINT (-73.41737670000001 40.6789401)  \n",
      "8           POINT (-78.871579 42.893094)  \n",
      "9    POINT (-83.04143999999999 42.33221)  ,                Artist                      Venue         City State/Province  \\\n",
      "3   Sir Michael Rocks                    BluEnvy     Gulfport             MS   \n",
      "4   Sir Michael Rocks              Xo Night Club  Baton Rouge             LA   \n",
      "5   Sir Michael Rocks                   The Door       Dallas             TX   \n",
      "6   Sir Michael Rocks                   The Rock       Tucson             AZ   \n",
      "7   Sir Michael Rocks                      Union  Los Angeles             CA   \n",
      "8   Sir Michael Rocks  WorldBeat Cultural Center    San Diego             CA   \n",
      "9   Sir Michael Rocks        Jerry's Pizza & Pub  Bakersfield             CA   \n",
      "10  Sir Michael Rocks                   Harlow's   Sacramento             CA   \n",
      "\n",
      "   Country  Longitude    Latitude           t  \\\n",
      "3       US  30.386294  -89.094936  2016-05-06   \n",
      "4       US  30.440696  -91.189527  2016-05-05   \n",
      "5       US  32.799500  -96.787200  2016-04-29   \n",
      "6       US  32.223603 -110.956245  2016-04-27   \n",
      "7       US  34.047775 -118.324113  2016-04-24   \n",
      "8       US  32.727209 -117.149599  2016-04-22   \n",
      "9       US  35.375877 -119.019005  2016-04-20   \n",
      "10      US  38.573983 -121.470175  2016-04-14   \n",
      "\n",
      "                                 geometry  \n",
      "3   POINT (-89.09493620000001 30.3862942)  \n",
      "4          POINT (-91.1895268 30.4406961)  \n",
      "5                POINT (-96.7872 32.7995)  \n",
      "6         POINT (-110.9562453 32.2236033)  \n",
      "7          POINT (-118.3241134 34.047775)  \n",
      "8         POINT (-117.1495994 32.7272088)  \n",
      "9          POINT (-119.019005 35.3758768)  \n",
      "10        POINT (-121.4701755 38.5739832)  ,           Artist             Venue     City State/Province Country  Longitude  \\\n",
      "0  Team Eastside  Majestic Theatre  Detroit             MI      US    42.3871   \n",
      "\n",
      "   Latitude           t                  geometry  \n",
      "0  -83.1026  2014-04-26  POINT (-83.1026 42.3871)  , -1,            Artist             Venue         City State/Province Country  \\\n",
      "0  Jameel Na'im X  Nola Mix Records  New Orleans             LA      US   \n",
      "\n",
      "   Longitude  Latitude           t                             geometry  \n",
      "0   29.93386  -90.0725  2019-04-06  POINT (-90.07250000000001 29.93386)  ,           Artist    Venue     City State/Province Country  Longitude  \\\n",
      "0  Icewear Vezzo  El Club  Detroit             MI      US    42.3214   \n",
      "\n",
      "   Latitude           t                   geometry  \n",
      "0 -83.09366  2019-06-14  POINT (-83.09366 42.3214)  ,     Artist      Venue              City State/Province Country  Longitude  \\\n",
      "0  Big Gov  Catch One  Los Angeles (LA)             CA      US   34.04759   \n",
      "\n",
      "    Latitude           t                     geometry  \n",
      "0 -118.32415  2019-06-21  POINT (-118.32415 34.04759)  , -1]\n"
     ]
    }
   ],
   "source": [
    "print(ts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a5f463a90>"
      ]
     },
     "execution_count": 342,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "colors = ['blue', 'purple', 'orange', 'darkred', 'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue', 'darkpurple', 'white', 'pink', 'lightblue', 'lightgreen']\n",
    "\n",
    "cc = -1\n",
    "\n",
    "for x in ts:\n",
    "    if not isinstance(x, int) and len(x) != 0:\n",
    "        if (cc!=len(colors)-1):\n",
    "            cc += 1\n",
    "        else:\n",
    "            cc = 0\n",
    "    \n",
    "        points = []\n",
    "\n",
    "        for i, row in x.iterrows():\n",
    "            tooltip = str(row[0]) + str(row[1]) + str(row[2])\n",
    "#             print(tooltip)\n",
    "        \n",
    "            points.append((row[5], row[6]))\n",
    "    \n",
    "#         if (i==0):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'green',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i==len(gdf)-1):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'red',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i!=0):\n",
    "            folium.Circle([row[5], row[6]], radius = 8, color = colors[cc], fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "#         print(points)\n",
    "        folium.PolyLine(points, color=colors[cc], weight=2.5, opacity=1).add_to(m)\n",
    "\n",
    "\n",
    "# fig, ax = plt.subplots(figsize=(15,15))\n",
    "# ax = ws.plot(color='white', edgecolor='black')\n",
    "toy_traj = mpd.Trajectory(1, gdf)\n",
    "# toy_traj.df\n",
    "# toy_traj.plot(ax = ax, linewidth=1, capstyle='round', legend=True)\n",
    "\n",
    "# print(se)\n",
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 386,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(41.9104085, -87.677996), (42.3871, -83.1026), (32.78533, -96.80809)]\n",
      "[(32.237116, -110.867374), (37.804256, -122.270302), (40.73492, -73.98845), (34.04759, -118.32415), (40.6780885, -73.9484003), (30.2701302, -97.7359046), (47.66128, -122.31365), (32.753815, -117.209272), (39.95898, -75.15028), (29.75393, -95.36406), (42.35211, -71.11942), (38.9172, -77.02776), (29.4293856, -98.4929842), (38.56998, -121.49069), (33.4514114, -112.0781884), (34.04494, -118.2655), (35.2473898, -80.8062281), (42.3635, -71.10162)]\n",
      "[(45.5120081, -122.6581769), (42.6367415, -83.2917046), (34.06359, -117.67981), (40.7177, -74.00153), (39.0542088, -94.5909055), (33.79209, -84.388), (42.280221, -83.7512377), (40.6789401, -73.4173767)]\n",
      "[(34.238382, -77.949208), (34.090712, -118.387966), (43.2127759, -77.4281641), (27.771666, -82.636035), (33.4577445, -111.9081615), (36.972, -122.026), (34.41628, -119.69509), (33.69984, -117.91945), (37.76969, -122.42016), (40.7530136, -111.9007966), (39.5264776, -119.8034153), (35.4935, -97.52016), (29.93386, -90.0725), (41.31157, -72.92936), (44.97827, -93.27608), (25.780664, -80.193623), (33.4234826, -111.8590237), (45.1248319, -93.4266348), (34.1020506, -118.3361384), (30.3862942, -89.0949362), (36.7351821, -119.7930528), (42.1236213, -80.084649), (34.07816, -118.26056), (39.75449, -104.97854), (38.98144, -76.93828), (41.50832, -81.5803), (46.7289, -122.953), (42.893094, -78.871579), (40.008, -105.27629), (26.350098, -80.100436), (30.4406961, -91.1895268), (39.31884, -76.6195), (35.3758768, -119.019005)]\n",
      "((42.3871, -83.1026), (41.9104085, -87.677996), (32.78533, -96.80809)) 17.508517983777192\n",
      "[(42.3871, -83.1026), (41.9104085, -87.677996), (32.78533, -96.80809)]\n",
      "(30.2701302, -97.7359046)\n",
      "(29.75393, -95.36406)\n",
      "(29.4293856, -98.4929842)\n",
      "(42.6367415, -83.2917046)\n",
      "(39.0542088, -94.5909055)\n",
      "(42.280221, -83.7512377)\n",
      "(35.4935, -97.52016)\n",
      "[(42.3871, -83.1026), (42.6367415, -83.2917046), (42.280221, -83.7512377), (41.9104085, -87.677996), (39.0542088, -94.5909055), (35.4935, -97.52016), (29.4293856, -98.4929842), (29.75393, -95.36406), (30.2701302, -97.7359046), (32.78533, -96.80809)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a6451acd0>"
      ]
     },
     "execution_count": 386,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import statistics\n",
    "import itertools as it\n",
    "import math\n",
    "import numpy\n",
    "\n",
    "# def optimal_path(list):\n",
    "avg = 0\n",
    "maxm = 0\n",
    "cities = {}\n",
    "#     print(len(list))\n",
    "for t in ts:\n",
    "\n",
    "    if not isinstance(t, int):\n",
    "        for i,row in t.iterrows():\n",
    "            city = str(row[2]) + ', ' + str(row[3]) + ', ' + str(row[4])\n",
    "            if city not in cities.keys():\n",
    "                cities[city] = [(row[5], row[6]), 1]\n",
    "            else:\n",
    "                cities[city][1] += 1\n",
    "\n",
    "lst = sorted(cities.items(), key = \n",
    "         lambda kv:(kv[1][1], kv[0]), reverse=True)\n",
    "\n",
    "maxm = lst[0][1][1]\n",
    "sl = []\n",
    "for i in lst:\n",
    "    avg += i[1][1]\n",
    "    sl.append(i[1][1])\n",
    "\n",
    "sd = statistics.stdev(sl)\n",
    "\n",
    "avg = avg/len(lst)\n",
    "\n",
    "green = []\n",
    "lg = []\n",
    "yellow = []\n",
    "red = []\n",
    "\n",
    "for i in lst:\n",
    "    count = i[1][1]\n",
    "    if (count >= avg + sd*1.5):\n",
    "        green.append(i[1][0])\n",
    "    elif (count >= avg):\n",
    "        lg.append(i[1][0])\n",
    "    elif (count >= avg - sd/2):\n",
    "        yellow.append(i[1][0])\n",
    "    else:\n",
    "        red.append(i[1][0])\n",
    "\n",
    "print(green)\n",
    "print(lg)\n",
    "print(yellow)\n",
    "print(red)\n",
    "\n",
    "final_points = green\n",
    "\n",
    "\n",
    "def dist(x,y):\n",
    "    return math.hypot(y[0]-x[0],y[1]-x[1])\n",
    "\n",
    "paths = [ p for p in it.permutations(final_points) ]\n",
    "path_distances = [ sum(map(lambda x: dist(x[0],x[1]),zip(p[:-1],p[1:]))) for p in paths ]\n",
    "min_index = numpy.argmin(path_distances)\n",
    "\n",
    "print(str(paths[min_index]) + ' ' + str(path_distances[min_index]))\n",
    "\n",
    "final_path = []\n",
    "\n",
    "for i in paths[min_index]:\n",
    "    final_path.append(i)\n",
    "    \n",
    "print(final_path)\n",
    "\n",
    "def add_fp(fp, l, std):\n",
    "    i = 0\n",
    "    while (i < len(l)):\n",
    "#         print(fp)\n",
    "#         print(l[i] not in fp)\n",
    "    \n",
    "        if (l[i] not in fp):\n",
    "            for j in range(len(fp)-1):\n",
    "#             print('-')\n",
    "#             print(dist(final_path[j], lg[i]) + dist(lg[i], final_path[j+1]))\n",
    "#             print(2*dist(final_path[j], final_path[j+1]))\n",
    "#             print(dist(final_path[j], lg[i]) + dist(lg[i], final_path[j+1])) < (2*dist(final_path[j], final_path[j+1])))\n",
    "\n",
    "                if ((dist(fp[j], l[i]) + dist(l[i], fp[j+1])) < (std*dist(fp[j], fp[j+1]))):\n",
    "                    if (l[i] not in fp):\n",
    "                        fp.insert(j+1, l[i])\n",
    "                        print(l[i])\n",
    "                        i = -1\n",
    "                    continue\n",
    "        i+=1\n",
    "        \n",
    "    return fp\n",
    "\n",
    "final_path = add_fp(final_path, lg, 1.5)\n",
    "final_path = add_fp(final_path, yellow, 1.2)\n",
    "final_path = add_fp(final_path, red, 1.05)\n",
    "\n",
    "print(final_path)\n",
    "\n",
    "m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "for x in ts:\n",
    "    if not isinstance(x, int) and len(x) != 0:\n",
    "        points = []\n",
    "\n",
    "        for i, row in x.iterrows():\n",
    "            tooltip = str(row[0]) + str(row[1]) + str(row[2])        \n",
    "            points.append((row[5], row[6]))\n",
    "            folium.Circle([row[5], row[6]], radius = 8, color = 'lightgrey', fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "#         folium.PolyLine(points, color='lightgrey', weight=2.5, opacity=1).add_to(m)\n",
    "        \n",
    "for x in green:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'green', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "for x in lg:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'lightgreen', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "for x in yellow:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'yellow', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "for x in red:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'red', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "\n",
    "folium.PolyLine(final_path, color='blue', weight=1.5, opacity=1).add_to(m)\n",
    "\n",
    "\n",
    "\n",
    "# fig, ax = plt.subplots(figsize=(15,15))\n",
    "# ax = ws.plot(color='white', edgecolor='black')\n",
    "toy_traj = mpd.Trajectory(1, gdf)\n",
    "# toy_traj.df\n",
    "# toy_traj.plot(ax = ax, linewidth=1, capstyle='round', legend=True)\n",
    "\n",
    "# print(se)\n",
    "m\n",
    "\n",
    "\n",
    "# ld = 0\n",
    "# dist_arr = [len(green)][len(green)]\n",
    "# for i in range(len(green)):\n",
    "#     dist_arr[i][i] = 0\n",
    "#     for j in range(i+1, len(green)):\n",
    "#         dist_arr[i][j] = math.sqrt((green[i][1][0][0]-green[j][1][0][0])**2 + (green[i][1][0][1]-green[i][1][0][1])**2 )\n",
    "# for i in range(len(green)):\n",
    "#     for j in range(len(green):\n",
    "#         for k in range(len(green)):\n",
    "#             if dist[i][j] > dist[i][k] + dist[k][j]:\n",
    "#                    dist[i][j]\n",
    "                   \n",
    "\n",
    "# for each edge (u,v)\n",
    "# 3    dist[u][v] ← w(u,v)  // the weight of the edge (u,v)\n",
    "# 4 for each vertex v\n",
    "# 5    dist[v][v] ← 0\n",
    "# 6 for k from 1 to |V|\n",
    "# 7    for i from 1 to |V|\n",
    "# 8       for j from 1 to |V|\n",
    "# 9          if dist[i][j] > dist[i][k] + dist[k][j] \n",
    "# 10             dist[i][j] ← dist[i][k] + dist[k][j]\n",
    "# 11         end if\n",
    "\n",
    "# print(optimal_path(ts)) \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a52bcb590>"
      ]
     },
     "execution_count": 290,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# gdfs = compile_points('aster aweke')\n",
    "\n",
    "# gdf = find_tour(requests.get(r).json(), \"Travis Scott\")\n",
    "\n",
    "m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "colors = ['blue', 'purple', 'orange', 'darkred', 'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue', 'darkpurple', 'white', 'pink', 'lightblue', 'lightgreen']\n",
    "\n",
    "cc = -1\n",
    "\n",
    "# print(tours)\n",
    "\n",
    "for x in tours:\n",
    "    \n",
    "    if (cc!=len(colors)-1):\n",
    "        cc += 1\n",
    "    else:\n",
    "        cc = 0\n",
    "    \n",
    "    points = []\n",
    "\n",
    "    for i, row in gdf.iterrows():\n",
    "#     print(row[1][2])\n",
    "#         tooltip = str(row[0]) + str(row[1]) + str(row[2])\n",
    "#         print(tooltip)\n",
    "        \n",
    "        points.append((row[5], row[6]))\n",
    "    \n",
    "#         if (i==0):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'green',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i==len(gdf)-1):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'red',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i!=0):\n",
    "        folium.Circle([row[5], row[6]], radius = 8, color = colors[cc], fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "    print(points)\n",
    "#     folium.PolyLine(points, color=\"grey\", weight=2.5, opacity=1).add_to(m)\n",
    "\n",
    "\n",
    "# fig, ax = plt.subplots(figsize=(15,15))\n",
    "# ax = ws.plot(color='white', edgecolor='black')\n",
    "toy_traj = mpd.Trajectory(1, gdf)\n",
    "# toy_traj.df\n",
    "# toy_traj.plot(ax = ax, linewidth=1, capstyle='round', legend=True)\n",
    "\n",
    "# print(se)\n",
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
