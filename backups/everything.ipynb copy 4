{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Table of Contents\n",
    "\n",
    "[Imports](#Imports)\n",
    "\n",
    "[Playground](#Playground)\n",
    "\n",
    "[Spotify Functions](#Spotify-Functions)\n",
    "\n",
    "[Songkick Functions](#Songkick-Functions)\n",
    "\n",
    "[Analysis Functions](#Analysis-Functions)\n",
    "\n",
    "[Analysis](#Analysis)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Imports\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages/pysal/explore/segregation/network/network.py:16: UserWarning: You need pandana and urbanaccess to work with segregation's network module\n",
      "You can install them with  `pip install urbanaccess pandana` or `conda install -c udst pandana urbanaccess`\n",
      "  \"You need pandana and urbanaccess to work with segregation's network module\\n\"\n",
      "/Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages/pysal/model/spvcm/abstracts.py:10: UserWarning: The `dill` module is required to use the sqlite backend fully.\n",
      "  from .sqlite import head_to_sql, start_sql\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             geometry                 name\n",
      "0   POLYGON ((-69.8822326660156 12.4111099243165, ...                Aruba\n",
      "1   (POLYGON ((-61.7388916015625 17.5405540466309,...  Antigua and Barbuda\n",
      "2   POLYGON ((61.2765579223633 35.6072463989258, 6...          Afghanistan\n",
      "3   POLYGON ((-5.15213489532459 30.1804695129396, ...              Algeria\n",
      "4   (POLYGON ((45.0258293151855 41.0305480957031, ...           Azerbaijan\n",
      "..                                                ...                  ...\n",
      "46  POLYGON ((-94.46169128436209 34.19676535931296...                   AR\n",
      "47  (POLYGON ((-93.70752428365972 30.2395783556275...                   LA\n",
      "48  (POLYGON ((-80.7856622716253 28.78519435427305...                   FL\n",
      "49  (POLYGON ((-88.49752727880752 48.1737953723300...                   MI\n",
      "50  (POLYGON ((-161.3337853466416 58.7332483821643...                   AK\n",
      "\n",
      "[302 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "#import necessary libraries\n",
    "import requests\n",
    "import json\n",
    "import pandas as pd\n",
    "import geopandas as gpd\n",
    "from shapely.geometry import Point, LineString\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.pyplot import figure\n",
    "import re\n",
    "import spotipy\n",
    "import base64\n",
    "import teetool as tt\n",
    "from collections import Counter\n",
    "import libpysal\n",
    "from pysal.model import spreg\n",
    "from libpysal.weights import Queen, Rook, KNN, Kernel\n",
    "import pysal\n",
    "from pysal.explore import esda\n",
    "from pysal.viz.splot import esda as esdaplot\n",
    "import cenpy\n",
    "# import movingpandas as mpd\n",
    "import datetime\n",
    "from datetime import date\n",
    "from spotipy.oauth2 import SpotifyClientCredentials\n",
    "from census import Census\n",
    "import censusgeocode\n",
    "import us\n",
    "import folium\n",
    "import statsmodels.formula.api as sm\n",
    "import numpy\n",
    "import statistics\n",
    "import itertools as it\n",
    "import math\n",
    "\n",
    "api_key = \"fCnCRQ1S6LDAS7zQ\"\n",
    "client_id = 'f5a0fe76389c42c0b85c832f1de66cf7'\n",
    "client_secret = 'e9d4fc0874f345b2b636a6e307384bb7'\n",
    "census_key = '684a12c6b65d2fe14bdf6d8354da8fe3aff08d70'\n",
    "client_credentials_manager = SpotifyClientCredentials(client_id, client_secret)\n",
    "sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)\n",
    "\n",
    "cen = Census(census_key)\n",
    "\n",
    "\n",
    "world = gpd.read_file('Countries_WGS84/Countries_WGS84.shp') #open file\n",
    "states_shp = gpd.read_file('states_21basic/states.shp') #open file\n",
    "\n",
    "s2 = states_shp[['geometry', 'STATE_ABBR']]\n",
    "s2.columns = ['geometry', 'name']\n",
    "\n",
    "w2 = world[['geometry', 'CNTRY_NAME']]\n",
    "w2.columns = ['geometry', 'name']\n",
    "\n",
    "ws = w2.append(s2)\n",
    "\n",
    "print(ws)\n",
    "\n",
    "\n",
    "#maybe remove festivals - songkick\n",
    "# maybe market - spotify"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Playground\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Spotify Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# spotify function definitions\n",
    "\n",
    "# given a name/id or genre, will provide a list of \n",
    "# artists that exist in relation and also are within the follower limit\n",
    "\n",
    "# custom function used to sort by num of shared genres\n",
    "def custom_sort(x):\n",
    "    return x[2]\n",
    "\n",
    "query_count = 0\n",
    "\n",
    "# handles counting the genres for related artists\n",
    "def ra_help(artid, genres, followers, lessthan):\n",
    "    global query_count\n",
    "#     print(followers)\n",
    "    alist = []\n",
    "    if query_count < 10:\n",
    "        query_count += 1\n",
    "        for a in sp.artist_related_artists(artid)['artists']:\n",
    "#             print(a)\n",
    "            gc = 0\n",
    "            if (followers == -1):\n",
    "                for g in a['genres']:    \n",
    "                    if g in genres:\n",
    "                        gc += 1\n",
    "                if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                    alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "            else:\n",
    "                if (lessthan == True):\n",
    "#                     print(a)\n",
    "                    if (a['followers']['total'] < followers):\n",
    "                        for g in a['genres']:    \n",
    "                            if g in genres:\n",
    "                                gc += 1\n",
    "                        if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                            alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "                elif (lessthan == False):\n",
    "                    if (a['followers']['total'] >= followers):\n",
    "                        for g in a['genres']:    \n",
    "                            if g in genres:\n",
    "                                gc += 1\n",
    "                        if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                            alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "                \n",
    "        return sorted(alist, key = custom_sort, reverse = True)\n",
    "                    \n",
    "# used to faciliate recursive calls - \n",
    "# allows me to find the related artists in each level of separation from the root\n",
    "# before moving on to the root artist\n",
    "def ra_rec(lst, genres, followers, lessthan):\n",
    "    global query_count\n",
    "    lst2 = []\n",
    "    query_count += 1\n",
    "    for a in lst:\n",
    "        if query_count < 10:\n",
    "            lst2+=(ra_help(a[1], genres, followers, lessthan))\n",
    "#         print(\"ra_rec ra_help\" + str(query_count))\n",
    "    if query_count < 10:\n",
    "        lst2 += (ra_rec((sorted(lst2, key = custom_sort)), genres, followers, lessthan))    \n",
    "    \n",
    "    return sorted(lst2, key = custom_sort, reverse = True)\n",
    "\n",
    "def related_artists(artname='', artid='', genre='', followers=-1, lessthan = True, llen = -1):\n",
    "    if (artname == '' and artid == '' and genre == ''):\n",
    "        print('please include name, id, or genre')\n",
    "        return\n",
    "    else:\n",
    "        global query_count\n",
    "        query_count = 0\n",
    "        alist = []\n",
    "        if (artname != ''):\n",
    "            se = sp.search(q = artname, limit = 1, type = 'artist')\n",
    "            query_count += 1\n",
    "            print(\"related_artists search \" + str(query_count))\n",
    "            if (se['artists']['total'] > 0):\n",
    "                artist = se['artists']['items'][0]\n",
    "                artid = artist['id']\n",
    "                genres = artist['genres']\n",
    "        elif (artid != ''):\n",
    "            artist = sp.artist(artid)\n",
    "            genres = artist['genres']\n",
    "            \n",
    "#         print(artist)\n",
    "        \n",
    "        for a in sp.artist_related_artists(artid)['artists']:\n",
    "            genres+=a['genres']\n",
    "            \n",
    "#         print(genres)\n",
    "\n",
    "        lst = ra_help(artid, genres, followers, lessthan)\n",
    "#         print(lst)\n",
    "        query_count += 1\n",
    "        print(\"related_artists ra_help \" + str(query_count))\n",
    "                \n",
    "        if query_count < 10:\n",
    "            lst+=(ra_rec(lst, genres, followers, lessthan))\n",
    "          \n",
    "        print(len(lst))\n",
    "        \n",
    "        print(len(sorted(list(set(lst)), key = custom_sort)))\n",
    "    \n",
    "    if llen > 0:\n",
    "        return sorted(list(set(lst)), key = custom_sort, reverse = True)[0:llen]\n",
    "    else:\n",
    "        return sorted(list(set(lst)), key = custom_sort, reverse = True)\n",
    "\n",
    "\n",
    "# related_artists(artname = 'berhana', followers = 75000)    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Songkick Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# function definitions\n",
    "\n",
    "# takes json string from songkick for an artist and makes points based on the results\n",
    "def make_points(json_str, artist):\n",
    "    df = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': []})\n",
    "\n",
    "    i = 0\n",
    "    \n",
    "    if (json_str['resultsPage']['totalEntries'] != 0):\n",
    "        for p in json_str['resultsPage']['results']['event']:\n",
    "            #     print(p['popularity'])\n",
    "            venue = p['venue']['displayName']\n",
    "            lng = p['location']['lng']\n",
    "            lat = p['location']['lat']\n",
    "            city = p['location']['city']\n",
    "            state = 'N/A'\n",
    "            csplit = city.split(',')\n",
    "            country = csplit[1]\n",
    "        \n",
    "            if (len(csplit) == 3):\n",
    "                if not ('Washington' == csplit[0] and 'DC' == csplit[1]):\n",
    "                    city = csplit[0]\n",
    "                    state = csplit[1]\n",
    "                    country = csplit[2]\n",
    "                else:\n",
    "                    city = csplit[0] + ', ' + csplit[1]\n",
    "                    state = 'N/A'\n",
    "                    country = csplit[2].replace(' ', '')\n",
    "        \n",
    "            df.loc[i] = [artist] + [venue] + [city] + [state] + [country] + [lat] +[lng]\n",
    "\n",
    "            i+=1\n",
    "        #convert to gdf to plot\n",
    "        gdf = gpd.GeoDataFrame(\n",
    "            df, geometry=[Point(x, y) for y, x in zip(df['Longitude'], df['Latitude'])])\n",
    "\n",
    "        gdf2 = gdf\n",
    "        gdf2 = gdf2.drop(list(range(1, len(gdf))))\n",
    "        gdf3 = gdf\n",
    "        gdf3 = gdf3.drop(list(range(0, len(gdf)-1)))\n",
    "    \n",
    "        return(gdf, gdf2, gdf3)\n",
    "    else:\n",
    "        return -1\n",
    "    \n",
    "def find_tour(json_str, artist, tr = 7, cutoff_yr = 2):\n",
    "    df = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': [],\n",
    "     't': []})\n",
    "\n",
    "    i = 0\n",
    "    \n",
    "    arr = []\n",
    "    \n",
    "    if (json_str['resultsPage']['totalEntries'] != 0):\n",
    "        for p in json_str['resultsPage']['results']['event']:\n",
    "            if 'US' in p['location']['city']:\n",
    "                venue = p['venue']['displayName']\n",
    "                lng = p['location']['lng']\n",
    "                lat = p['location']['lat']\n",
    "                city = p['location']['city']\n",
    "                state = 'N/A'\n",
    "                csplit = city.split(',')\n",
    "                country = csplit[1]\n",
    "        \n",
    "                if (len(csplit) == 3):\n",
    "                    if not ('Washington' == csplit[0] and 'DC' == csplit[1]):\n",
    "                        city = csplit[0]\n",
    "                        state = csplit[1]\n",
    "                        country = csplit[2]\n",
    "                    else:\n",
    "                        city = csplit[0] + ', ' + csplit[1]\n",
    "                        state = city\n",
    "                        country = csplit[2].replace(' ', '')\n",
    "                    df.loc[i] = [artist] + [venue] + [city] + [state] + [country] + [lat] + [lng] + [p['start']['date']]\n",
    "            \n",
    "                i+=1\n",
    "            \n",
    "                if (len(p['location']['city'].split(',')) == 3):\n",
    "                    d = p['start']['date'].split('-')\n",
    "                    arr.append(date(int(d[0]), int(d[1]), int(d[2])))\n",
    "    else:\n",
    "        return -1\n",
    "    \n",
    "    l = [0,0]\n",
    "    first = 0\n",
    "    last = 0\n",
    "    for i in range(len(arr)-1):\n",
    "        if (arr[i] != -1 and arr[i+1] != -1):\n",
    "            if (((arr[i] - arr[i+1]).days > tr) or (i == len(arr)-2)):\n",
    "                last = i\n",
    "                if (last-first > l[1] - l[0]):\n",
    "                    l = [first, last]\n",
    "                first = i+1\n",
    "        else:\n",
    "            last = i\n",
    "            if (last-first > l[1] - l[0]):\n",
    "                l = [first, last]\n",
    "            first = i+1\n",
    "            \n",
    "#     print(l)\n",
    "    \n",
    "    df2 = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': [],\n",
    "     't': []})\n",
    "    \n",
    "    if (len(df) > 0):\n",
    "        for i in range(l[0], l[1]+1):\n",
    "            df2.loc[i] = df.loc[i]\n",
    "        \n",
    "        #convert to gdf to plot\n",
    "        gdf = gpd.GeoDataFrame(\n",
    "                df2, geometry=[Point(x, y) for y, x in zip(df2['Longitude'], df2['Latitude'])])\n",
    "\n",
    "        return gdf\n",
    "    else:\n",
    "        return -1\n",
    "\n",
    "# plots singular tour path for artist\n",
    "def run_plot(req, aname):\n",
    "    gdfs = make_points(req.json(), aname)\n",
    "\n",
    "    points_gdf = gdfs[0]\n",
    "    print(points_gdf)\n",
    "    start_gdf = gdfs[1]\n",
    "    stop_gdf = gdfs[2]\n",
    "\n",
    "    #current us basemap\n",
    "    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n",
    "\n",
    "    # fig, ax = plt.subplots(figsize=(15,15))\n",
    "    ax = world[world.continent == 'North America'].plot(\n",
    "#     ax = world.plot(\n",
    "        color='white', edgecolor='black')\n",
    "\n",
    "    ax.set_xlim(-130, -65)\n",
    "    ax.set_ylim(24, 50)\n",
    "\n",
    "    # We can now plot our ``GeoDataFrame``.\n",
    "    points_gdf.plot(ax=ax, color='blue')\n",
    "\n",
    "    start_gdf.plot(ax=ax, color='green')\n",
    "    stop_gdf.plot(ax=ax, color='red')\n",
    "\n",
    "    points = []\n",
    "\n",
    "    linedf = pd.DataFrame(\n",
    "        {'Line': []})\n",
    "\n",
    "    for i in range(len(points_gdf)):\n",
    "        points.append(points_gdf.iloc[i].loc[\"geometry\"])\n",
    "\n",
    "    line = LineString(points)\n",
    "\n",
    "    def plot_line(ax, ob):\n",
    "        x, y = ob.xy\n",
    "        ax.plot(x, y, color='grey', alpha=0.7, linewidth=1, solid_capstyle='round', zorder=2)\n",
    "\n",
    "    plot_line(ax, line)\n",
    "\n",
    "    plt.tight_layout()\n",
    "\n",
    "    plt.show()\n",
    "    \n",
    "# used to find the artist id on songkick\n",
    "def get_artist_id(artist_name):\n",
    "    json_str = requests.get(\"https://api.songkick.com/api/3.0/search/artists.json?apikey=\" + api_key + \"&query=\" + artist_name).json()\n",
    "    return (str(json_str['resultsPage']['results']['artist'][0]['id']) if json_str['resultsPage']['totalEntries'] != 0 else -1)\n",
    "\n",
    "# function for interface for taking input\n",
    "def req_input():\n",
    "    print(\"Welcome\")\n",
    "    while (True):\n",
    "        past = True\n",
    "        is_venue = True\n",
    "        \n",
    "        cmd = input(\"Venue search (0) or event search (1)?\")\n",
    "        \n",
    "        if (cmd == 1):\n",
    "            is_venue = False\n",
    "            \n",
    "        if (is_venue == False):\n",
    "            cmd = input(\"Past events (0), upcoming events (1): \")\n",
    "        \n",
    "            if (cmd == 1):\n",
    "                past = False\n",
    "            \n",
    "            cmd = input(\"Please type the parameters: [artist_name, min_date, max_date.] Separate with commas.\"\n",
    "                       + \"\\nIf no input, just add a comma and skip.\\n\")\n",
    "        \n",
    "            if (cmd == 'quit'):\n",
    "                return\n",
    "        \n",
    "            cs = cmd.split(',')\n",
    "            an = get_artist_id(cs[0].replace(' ', '+')) if not (cs[0]+' ').isspace() else print('need artist!')\n",
    "            if (cs[0]+' ').isspace():\n",
    "                continue\n",
    "            mind = \"&min_date=\" + cs[1].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[1])) else ''\n",
    "            maxd = \"&max_date=\" + cs[2].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[2])) else ''\n",
    "            \n",
    "            if (past == True):\n",
    "                r = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key \n",
    "                              + mind + maxd)\n",
    "                run_plot(r, cs[0])\n",
    "            else:\n",
    "                r = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=\"+ api_key \n",
    "                    + an + loc + mind + maxd)\n",
    "                print(r.json())\n",
    "                run_plot(r, cs[0])\n",
    "        else:\n",
    "            cmd = input(\"Past venues (0), upcoming venues (1): \")\n",
    "        \n",
    "            if (cmd == 1):\n",
    "                past = False\n",
    "            \n",
    "        cmd = input(\"Please type the parameters: [artist_name, min_date, max_date.] Separate with commas.\"\n",
    "                   + \"\\nIf no input, just add a comma and skip.\\n\")\n",
    "        \n",
    "        if (cmd == 'quit'):\n",
    "            return\n",
    "        \n",
    "        cs = cmd.split(',')\n",
    "        an = get_artist_id(cs[0].replace(' ', '+')) if not (cs[0]+' ').isspace() else print('need artist!')\n",
    "        if (cs[0]+' ').isspace():\n",
    "            continue\n",
    "        mind = \"&min_date=\" + cs[1].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[1])) else ''\n",
    "        maxd = \"&max_date=\" + cs[2].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[2])) else ''\n",
    "        \n",
    "        if (past == True):\n",
    "            r = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key \n",
    "                              + mind + maxd)\n",
    "            run_plot(r, cs[0])\n",
    "        else:\n",
    "            r = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=\"+ api_key \n",
    "                + an + loc + mind + maxd)\n",
    "            print(r.json())\n",
    "            run_plot(r, cs[0])\n",
    "              \n",
    "\n",
    "    \n",
    "# req = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=fCnCRQ1S6LDAS7zQ&artist_name=young+thug&min_date=2019-10-01&max_date=2019-11-01\")\n",
    "\n",
    "# req = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=fCnCRQ1S6LDAS7zQ&artist_name=travis+scott&min_date=2018-01-01&max_date=2022-11-01\")\n",
    "\n",
    "# print(get_artist_id('travis+scott'))\n",
    "\n",
    "# print(\"https://api.songkick.com/api/3.0/artists/\"+ get_artist_id('travis+scott') + \"/gigography.json?apikey=fCnCRQ1S6LDAS7zQ\")\n",
    "\n",
    "# print(req.text)\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# this function generates many related artists, returns most recent events for each one, \n",
    "def compile_points(names = [], followers = -1, event_num=8):\n",
    "    if not (names == []):\n",
    "            print('yo')\n",
    "            artists = []\n",
    "            if followers == -1:   \n",
    "                for n in names:\n",
    "                    artists += related_artists(artname = n, llen = 10)\n",
    "            else:\n",
    "                for n in names:\n",
    "                    artists += related_artists(artname = n, llen = 10, followers = followers)\n",
    "\n",
    "#             print('llen')\n",
    "#             print(artists)\n",
    "            nl = []\n",
    "            for a in artists:\n",
    "                nl.append(a[0])\n",
    "            \n",
    "            nl = list(set(nl))\n",
    "            \n",
    "            gl = []\n",
    "            \n",
    "            for a in nl:\n",
    "                an = get_artist_id(a.replace(' ', '+')) if not (a[0]+' ').isspace() else print('need artist!')\n",
    "    \n",
    "                if an != -1:\n",
    "                    req = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page='+str(event_num)+'&order=desc')\n",
    "#             print(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "                    gdfs = make_points(req.json(), a)\n",
    "                    if gdfs != -1:\n",
    "                        gl.append(gdfs[0])\n",
    "                \n",
    "            return gl\n",
    "    else:\n",
    "        return -1\n",
    "\n",
    "# gdfs = compile_points(names = ['pat app', 'supakaine'], followers = 50000)\n",
    "# gdf = compile_points(['pat app'])\n",
    "# gdf2 = compile_points(['supakaine'])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "def basic_stats(gdfs, state = ''):    \n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    \n",
    "    # basic stats\n",
    "    venues = {}\n",
    "    cities = {}\n",
    "    countries_states = {}\n",
    "    \n",
    "    for index, row in rdf.iterrows():\n",
    "        if row[1] != 'Unknown venue':\n",
    "            print(row)\n",
    "            if row[1] not in venues:\n",
    "                venues[row[1]] = 1\n",
    "            else:\n",
    "                venues[row[1]] += 1\n",
    "          \n",
    "        if row[3] != 'N/A':\n",
    "            if (row[2] + ', ' + row[3][1:]) not in cities:\n",
    "                cities[(row[2] + ', ' + row[3][1:])] = 1\n",
    "            else:\n",
    "                cities[(row[2] + ', ' + row[3][1:])] += 1\n",
    "        else:\n",
    "            if (row[2] + ', ' + row[4]) not in cities:\n",
    "                cities[(row[2] + ', ' + row[4][1:])] = 1\n",
    "            else:\n",
    "                cities[(row[2] + ', ' + row[4][1:])] += 1\n",
    "            \n",
    "        if row[3] != 'N/A':\n",
    "            if (row[3][1:]) not in countries_states:\n",
    "                countries_states[row[3][1:]] = 1\n",
    "            else:\n",
    "                countries_states[row[3][1:]] += 1\n",
    "\n",
    "        \n",
    "        if (row[4][1:]) not in countries_states:\n",
    "            countries_states[row[4][1:]] = 1\n",
    "        else:\n",
    "            countries_states[row[4][1:]] += 1\n",
    "            \n",
    "    print('Top 5 venues:')\n",
    "    top = Counter(venues)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    print('\\nTop 5 cities:')\n",
    "    top = Counter(cities)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    print('\\nTop 5 countries:')\n",
    "    top = Counter(countries_states)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    return(venues)\n",
    "        \n",
    "    # end basic stats    \n",
    "\n",
    "def autocorr(gdfs, state = ''):\n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "\n",
    "    plt.figure(figsize=(10, 12))\n",
    "\n",
    "    world = ws\n",
    "    \n",
    "    showcount = []\n",
    "    \n",
    "    for index, row in world.iterrows():\n",
    "        if row[1] == 'United States':\n",
    "            c = 'US'            \n",
    "        elif row[1] == 'United Kingdom':\n",
    "            c = 'UK'\n",
    "        else:\n",
    "            c = row[1]\n",
    "#             print(c)\n",
    "        \n",
    "        if c in countries_states:\n",
    "            showcount.append(countries_states[c])\n",
    "        else:\n",
    "            showcount.append(0)\n",
    "        \n",
    "    world[\"ShowCount\"] = showcount #make new column\n",
    "\n",
    "    for index, row in ws.iterrows():\n",
    "        if row[1] == 'United States':\n",
    "            world.drop(index, inplace=True)\n",
    "    \n",
    "    fig, ax = plt.subplots(figsize=(15,15)) #plot\n",
    "    world.plot(\"ShowCount\", ax=ax)\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    \n",
    "    # morans i\n",
    "\n",
    "    qW = Queen.from_dataframe(world)\n",
    "    \n",
    "    qW.silent_island_warning = True\n",
    "\n",
    "    qW.transform = 'r'\n",
    "\n",
    "    #moran\n",
    "    moran_sc = esda.moran.Moran(world[['ShowCount']], qW)\n",
    "\n",
    "    #lisa\n",
    "    lisa_sc = esda.Moran_Local(world[\"ShowCount\"], qW)\n",
    "\n",
    "    print(str(moran_sc.I) + \", \" + str(moran_sc.p_sim))\n",
    "    \n",
    "    from pysal.viz.splot import esda as esdaplot\n",
    "    esdaplot.plot_local_autocorrelation(lisa_sc, world, \"ShowCount\")\n",
    "\n",
    "    plt.show()    \n",
    "    \n",
    "def analyze(gdfs, state = ''):\n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    basic_stats(gdfs)\n",
    "    autocorr(gdfs)\n",
    "    \n",
    "def venue_count(gdfs, usonly = True):    \n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    \n",
    "    venues = {}\n",
    "    \n",
    "    if (usonly == True):\n",
    "        for index, row in rdf.iterrows():\n",
    "            if row[1] != 'Unknown venue':\n",
    "                if (row[4].replace(' ', '') == 'US'): \n",
    "                    if row[1] not in venues.keys():\n",
    "                        venues[row[1]] = [(row[5],row[6], row[2], row[3].replace(' ', '')), 1]\n",
    "                    else:\n",
    "                        venues[row[1]][1] += 1\n",
    "        \n",
    "    return(venues)\n",
    "\n",
    "\n",
    "def get_tracts(vens):\n",
    "    tracts = {}\n",
    "    \n",
    "    for k,v in vens.items():\n",
    "#         print(v)\n",
    "        x = float(v[0][1])\n",
    "        y = float(v[0][0])\n",
    "        r = ''\n",
    "        try:\n",
    "            r = censusgeocode.coordinates(x=x, y=y)\n",
    "        except:\n",
    "            print('censusgeocode error')\n",
    "            continue\n",
    "        \n",
    "        try:\n",
    "            r = r['2010 Census Blocks']\n",
    "            st = r[0]['STATE']\n",
    "            co = r[0]['COUNTY']\n",
    "            tr = r[0]['TRACT']\n",
    "            print(st + co + tr)\n",
    "            b = cen.acs5.state_county_tract('B02001_002E,B02001_001E,B01002_001E,B19013_001E', st, co, tr)\n",
    "            b2 = cen.acs5.state_county_tract('B02001_003E', st, co, tr)\n",
    "\n",
    "            ftr = st + co + tr\n",
    "            if (ftr not in tracts.keys()):\n",
    "                tracts[ftr] = {'Non-white population percentage': -1,\n",
    "                'Black population percentage': -1,\n",
    "                'Median age': -1,\n",
    "                'Median household income': -1,\n",
    "#                 'Nonfamily households percentage': -1,\n",
    "                'Count': -1}\n",
    "                tracts[ftr]['Non-white population percentage'] = (1 - b[0]['B02001_002E']/b[0]['B02001_001E'])\n",
    "                tracts[ftr]['Black population percentage'] = b2[0]['B02001_003E']/b[0]['B02001_001E']\n",
    "                tracts[ftr]['Median age'] = b[0]['B01002_001E']\n",
    "                tracts[ftr]['Median household income'] = b[0]['B19013_001E']\n",
    "#                 tracts[ftr]['Nonfamily households percentage'] = b2[0]['B11001_007E']/b2[0]['B11001_001E']\n",
    "                tracts[ftr]['Count'] = v[1]\n",
    "            else:\n",
    "#                 print(tracts)\n",
    "                tracts[ftr]['Count'] += v[1]\n",
    "        except KeyboardInterrupt:\n",
    "            raise\n",
    "        except:\n",
    "            print('some other error')\n",
    "            \n",
    "        # b = c.acs5.state_place('B25034_010E', states.CA.fips, 'Los Angeles')\n",
    "#         print(b)\n",
    "\n",
    "    return tracts\n",
    "\n",
    "        \n",
    "# analyze(gdfs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def tract_reg(tr, demo='non-white'):\n",
    "#     print(tr)\n",
    "    height = len(tr)\n",
    "    width = len(next(iter(tr.values())))\n",
    "    for k,vl in tr.items():\n",
    "        v = list(vl.values())\n",
    "        for i in range(width):\n",
    "            if v[i] == -1:\n",
    "#                 print(i)\n",
    "                height = height - 1\n",
    "                break\n",
    "\n",
    "    print(height)\n",
    "    print(width)\n",
    "\n",
    "    arrr = [[0 for x in range(width-1)] for y in range(height)] \n",
    "\n",
    "    c = []\n",
    "\n",
    "    i = 0\n",
    "    for k,vl in tr.items():\n",
    "        v = list(vl.values())\n",
    "\n",
    "        br = False\n",
    "        for j in range(width-1):\n",
    "            if v[j] == -1:\n",
    "#                 print(j)\n",
    "                br = True\n",
    "\n",
    "        if (br==True):\n",
    "#             print('yo')\n",
    "            continue\n",
    "\n",
    "        c.append(v[width-1])\n",
    "        for j in range(width-1):\n",
    "            arrr[i][j] = v[j]\n",
    "        i+=1\n",
    "    \n",
    "    if (demo == 'black'):\n",
    "        for row in arrr:\n",
    "            del row[0]\n",
    "    else:\n",
    "        for row in arrr:\n",
    "            del row[1]\n",
    "        \n",
    "#     print(arrr)\n",
    "    return statsmodels.regression.linear_model.OLS(c, arrr).fit().summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'sp' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-8-20210e8a2e22>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mtract_stats\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnames\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'pat app'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'supakaine'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfollowers\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m50000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdemo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'black'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-8-20210e8a2e22>\u001b[0m in \u001b[0;36mtract_stats\u001b[0;34m(names, followers, demo)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mtract_stats\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfollowers\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdemo\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mpoints\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcompile_points\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfollowers\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfollowers\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m     \u001b[0mtracts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_tracts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvenue_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpoints\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtract_reg\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtracts\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdemo\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdemo\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-5-5fb4932d26d7>\u001b[0m in \u001b[0;36mcompile_points\u001b[0;34m(names, followers, event_num)\u001b[0m\n\u001b[1;32m      9\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m                 \u001b[0;32mfor\u001b[0m \u001b[0mn\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m                     \u001b[0martists\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mrelated_artists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0martname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mllen\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfollowers\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfollowers\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;31m#             print('llen')\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-3-3bfab1871d9f>\u001b[0m in \u001b[0;36mrelated_artists\u001b[0;34m(artname, artid, genre, followers, lessthan, llen)\u001b[0m\n\u001b[1;32m     70\u001b[0m         \u001b[0malist\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0martname\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 72\u001b[0;31m             \u001b[0mse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msearch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mq\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0martname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlimit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'artist'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     73\u001b[0m             \u001b[0mquery_count\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m             \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"related_artists search \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mquery_count\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'sp' is not defined"
     ]
    }
   ],
   "source": [
    "def tract_stats(names, followers, demo):\n",
    "    points = compile_points(names, followers = followers)\n",
    "    tracts = get_tracts(venue_count(points))\n",
    "    print(tract_reg(tracts, demo=demo))\n",
    "    \n",
    "    \n",
    "# tract_stats(names = ['pat app', 'supakaine'], followers = 50000, demo = 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 807,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'53033009300': {'Non-white population percentage': 0.45928705440900564, 'Black population percentage': 0.12120075046904315, 'Median age': 40.1, 'Median household income': 74696.0, 'Count': 1}, '53033008600': {'Non-white population percentage': 0.4122641509433962, 'Black population percentage': 0.0709433962264151, 'Median age': 23.8, 'Median household income': 50774.0, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.4995003944254536, 'Black population percentage': 0.22571653957402052, 'Median age': 34.6, 'Median household income': 97897.0, 'Count': 1}, '27053104400': {'Non-white population percentage': 0.32489645651173493, 'Black population percentage': 0.19926369075011505, 'Median age': 33.9, 'Median household income': 59500.0, 'Count': 1}, '17031833000': {'Non-white population percentage': 0.2405382674516401, 'Black population percentage': 0.1118587047939445, 'Median age': 33.7, 'Median household income': 133571.0, 'Count': 1}, '06073006500': {'Non-white population percentage': 0.253180266832144, 'Black population percentage': 0.1132485262178095, 'Median age': 44.2, 'Median household income': 55273.0, 'Count': 1}, '08031003701': {'Non-white population percentage': 0.14222222222222225, 'Black population percentage': 0.09333333333333334, 'Median age': 34.4, 'Median household income': 54861.0, 'Count': 1}, '25017353101': {'Non-white population percentage': 0.36980556614563476, 'Black population percentage': 0.19939001143728555, 'Median age': 27.7, 'Median household income': 99375.0, 'Count': 1}, '24033807200': {'Non-white population percentage': 0.3677632524062635, 'Black population percentage': 0.14351386295072546, 'Median age': 19.9, 'Median household income': 32045.0, 'Count': 1}, '36061006800': {'Non-white population percentage': 0.2536439354502863, 'Black population percentage': 0.06715252472670484, 'Median age': 28.3, 'Median household income': 124070.0, 'Count': 1}, '37119004900': {'Non-white population percentage': 0.9711191335740073, 'Black population percentage': 0.9350180505415162, 'Median age': 52.9, 'Median household income': 31944.0, 'Count': 2}, '48113020400': {'Non-white population percentage': 0.3522121535181236, 'Black population percentage': 0.2838486140724947, 'Median age': 35.8, 'Median household income': 66858.0, 'Count': 3}, '48453001100': {'Non-white population percentage': 0.13547742042992839, 'Black population percentage': 0.052157973671054826, 'Median age': 37.8, 'Median household income': 131944.0, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.5089605734767024, 'Black population percentage': 0.3255675029868578, 'Median age': 34.0, 'Median household income': 52145.0, 'Count': 2}, '13121000500': {'Non-white population percentage': 0.3094041636755205, 'Black population percentage': 0.2038765254845657, 'Median age': 31.2, 'Median household income': 85750.0, 'Count': 1}, '17031061100': {'Non-white population percentage': 0.07318789584799434, 'Black population percentage': 0.02040816326530612, 'Median age': 26.9, 'Median household income': 107250.0, 'Count': 1}, '09003500100': {'Non-white population percentage': 0.6816976127320955, 'Black population percentage': 0.19459850494333253, 'Median age': 26.4, 'Median household income': 28616.0, 'Count': 1}, '06037207302': {'Non-white population percentage': 0.552368245496998, 'Black population percentage': 0.1867911941294196, 'Median age': 34.8, 'Median household income': 40254.0, 'Count': 1}, '53033010300': {'Non-white population percentage': 0.564935064935065, 'Black population percentage': 0.29785431959345005, 'Median age': 37.3, 'Median household income': 60444.0, 'Count': 1}, '08031001701': {'Non-white population percentage': 0.09458999659748213, 'Black population percentage': 0.011738686628104797, 'Median age': 38.3, 'Median household income': 95921.0, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.13424264178033019, 'Black population percentage': 0.05599425699928212, 'Median age': 45.8, 'Median household income': 37361.0, 'Count': 1}, '06067001300': {'Non-white population percentage': 0.30459200528576147, 'Black population percentage': 0.07994714238519987, 'Median age': 31.4, 'Median household income': 50268.0, 'Count': 2}, '06001402800': {'Non-white population percentage': 0.6850763807285547, 'Black population percentage': 0.4115158636897767, 'Median age': 38.5, 'Median household income': 37250.0, 'Count': 1}, '13121011900': {'Non-white population percentage': 0.6260261477652782, 'Black population percentage': 0.5688659166920037, 'Median age': 32.5, 'Median household income': 26032.0, 'Count': 1}, '39035141100': {'Non-white population percentage': 0.34014699127239323, 'Black population percentage': 0.09554432705558108, 'Median age': 28.6, 'Median household income': 42366.0, 'Count': 1}, '13121003000': {'Non-white population percentage': 0.1780451127819549, 'Black population percentage': 0.08571428571428572, 'Median age': 34.9, 'Median household income': 94079.0, 'Count': 1}, '13121003500': {'Non-white population percentage': 0.6436781609195402, 'Black population percentage': 0.5770114942528736, 'Median age': 42.2, 'Median household income': 55585.0, 'Count': 1}, '06037199000': {'Non-white population percentage': 0.5248588599526498, 'Black population percentage': 0.0054634857038790745, 'Median age': 34.6, 'Median household income': 47250.0, 'Count': 1}, '36047030500': {'Non-white population percentage': 0.5653422690282432, 'Black population percentage': 0.4067336843784905, 'Median age': 33.1, 'Median household income': 70125.0, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.10481406745459787, 'Black population percentage': 0.0037474776592678004, 'Median age': 31.1, 'Median household income': 54216.0, 'Count': 1}, '26163531900': {'Non-white population percentage': 0.7286476868327403, 'Black population percentage': 0.6441281138790036, 'Median age': 22.2, 'Median household income': 30583.0, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.6789506558401, 'Black population percentage': 0.5246720799500312, 'Median age': 45.2, 'Median household income': 68100.0, 'Count': 1}, '11001010200': {'Non-white population percentage': 0.5347905282331512, 'Black population percentage': 0.41384335154826957, 'Median age': 36.2, 'Median household income': 104215.0, 'Count': 1}, '48201100000': {'Non-white population percentage': 0.291383701188455, 'Black population percentage': 0.16553480475382004, 'Median age': 43.5, 'Median household income': 98508.0, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.11010903217122092, 'Black population percentage': 0.0025575447570332483, 'Median age': 30.6, 'Median household income': 77075.0, 'Count': 2}}\n",
      "35\n",
      "5\n",
      "[[0.12120075046904315, 40.1, 74696.0], [0.0709433962264151, 23.8, 50774.0], [0.22571653957402052, 34.6, 97897.0], [0.19926369075011505, 33.9, 59500.0], [0.1118587047939445, 33.7, 133571.0], [0.1132485262178095, 44.2, 55273.0], [0.09333333333333334, 34.4, 54861.0], [0.19939001143728555, 27.7, 99375.0], [0.14351386295072546, 19.9, 32045.0], [0.06715252472670484, 28.3, 124070.0], [0.9350180505415162, 52.9, 31944.0], [0.2838486140724947, 35.8, 66858.0], [0.052157973671054826, 37.8, 131944.0], [0.3255675029868578, 34.0, 52145.0], [0.2038765254845657, 31.2, 85750.0], [0.02040816326530612, 26.9, 107250.0], [0.19459850494333253, 26.4, 28616.0], [0.1867911941294196, 34.8, 40254.0], [0.29785431959345005, 37.3, 60444.0], [0.011738686628104797, 38.3, 95921.0], [0.05599425699928212, 45.8, 37361.0], [0.07994714238519987, 31.4, 50268.0], [0.4115158636897767, 38.5, 37250.0], [0.5688659166920037, 32.5, 26032.0], [0.09554432705558108, 28.6, 42366.0], [0.08571428571428572, 34.9, 94079.0], [0.5770114942528736, 42.2, 55585.0], [0.0054634857038790745, 34.6, 47250.0], [0.4067336843784905, 33.1, 70125.0], [0.0037474776592678004, 31.1, 54216.0], [0.6441281138790036, 22.2, 30583.0], [0.5246720799500312, 45.2, 68100.0], [0.41384335154826957, 36.2, 104215.0], [0.16553480475382004, 43.5, 98508.0], [0.0025575447570332483, 30.6, 77075.0]]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>            <td>y</td>        <th>  R-squared (uncentered):</th>      <td>   0.857</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared (uncentered):</th> <td>   0.844</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>          <td>   64.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 10 Dec 2019</td> <th>  Prob (F-statistic):</th>          <td>1.29e-13</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>11:54:39</td>     <th>  Log-Likelihood:    </th>          <td> -23.520</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>    35</td>      <th>  AIC:               </th>          <td>   53.04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>    32</td>      <th>  BIC:               </th>          <td>   57.71</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     3</td>      <th>                     </th>              <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>              <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "   <td></td>     <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1</th> <td>    0.2426</td> <td>    0.452</td> <td>    0.537</td> <td> 0.595</td> <td>   -0.677</td> <td>    1.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2</th> <td>    0.0294</td> <td>    0.007</td> <td>    3.930</td> <td> 0.000</td> <td>    0.014</td> <td>    0.045</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3</th> <td> 1.007e-06</td> <td>  2.8e-06</td> <td>    0.359</td> <td> 0.722</td> <td> -4.7e-06</td> <td> 6.71e-06</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>27.258</td> <th>  Durbin-Watson:     </th> <td>   2.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  49.247</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 2.001</td> <th>  Prob(JB):          </th> <td>2.02e-11</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 7.214</td> <th>  Cond. No.          </th> <td>4.01e+05</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 4.01e+05. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                                 OLS Regression Results                                \n",
       "=======================================================================================\n",
       "Dep. Variable:                      y   R-squared (uncentered):                   0.857\n",
       "Model:                            OLS   Adj. R-squared (uncentered):              0.844\n",
       "Method:                 Least Squares   F-statistic:                              64.00\n",
       "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    1.29e-13\n",
       "Time:                        11:54:39   Log-Likelihood:                         -23.520\n",
       "No. Observations:                  35   AIC:                                      53.04\n",
       "Df Residuals:                      32   BIC:                                      57.71\n",
       "Df Model:                           3                                                  \n",
       "Covariance Type:            nonrobust                                                  \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "x1             0.2426      0.452      0.537      0.595      -0.677       1.163\n",
       "x2             0.0294      0.007      3.930      0.000       0.014       0.045\n",
       "x3          1.007e-06    2.8e-06      0.359      0.722    -4.7e-06    6.71e-06\n",
       "==============================================================================\n",
       "Omnibus:                       27.258   Durbin-Watson:                   2.117\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               49.247\n",
       "Skew:                           2.001   Prob(JB):                     2.02e-11\n",
       "Kurtosis:                       7.214   Cond. No.                     4.01e+05\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 4.01e+05. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 807,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# def tract_stats(names, followers):\n",
    "\n",
    "# tract_reg(tracts, demo='black')\n",
    "    \n",
    "    \n",
    "# tract_stats(names = ['pat app', 'supakaine'], followers = 50000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "# # print(arrr)\n",
    "# print(len(c))\n",
    "# statsmodels.regression.linear_model.OLS(c, arrr).fit().summary()\n",
    "# # print(statsmodels.)\n",
    "# X = numpy.array(arrr)\n",
    "# # print(X)\n",
    "# vif = [variance_inflation_factor(X, i) for i in range(X.shape[1])]\n",
    "# print(vif)\n",
    "# # statsmodels.regression.linear_model.OLS(c, arrr).fit().summary()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 754,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    884\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 885\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    886\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    474\u001b[0m         \"\"\"\n\u001b[0;32m--> 475\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    476\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: ",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-754-dfed8d2dc3b9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mreq_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#travis scott, 2018-10-31, 2018-12-01\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-433-553c22772f9b>\u001b[0m in \u001b[0;36mreq_input\u001b[0;34m()\u001b[0m\n\u001b[1;32m    194\u001b[0m         \u001b[0mis_venue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    195\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 196\u001b[0;31m         \u001b[0mcmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Venue search (0) or event search (1)?\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    197\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcmd\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    858\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    859\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 860\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    861\u001b[0m         )\n\u001b[1;32m    862\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    888\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    889\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 890\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    891\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    892\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "# req_input()\n",
    "\n",
    "#travis scott, 2018-10-31, 2018-12-01"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 919,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "110\n",
      "78\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "56\n",
      "28\n",
      "[('LNDN DRGS', '65d2Cw70rLuVwEZwQpHtFW', 3, 9808), ('Larry June', '1grN0519h2zYqpRtYbDZAl', 3, 30935), ('G-Worthy', '2mj0i1GD7RAKRs48paljmU', 2, 4933), ('Benny The Butcher', '5Matrg5du62bXwer29cU5T', 2, 36362), ('Kook the Kashcow', '5xLMcFqj6VUv6BQguguL0o', 2, 774), ('Streetlordz', '3bo1dDhj5zc2dvlD9HfmEa', 2, 2291), ('Street Lord Juan', '5MUg1llyqJS5NwnFURpWKI', 2, 884), ('Quentin Miller', '6po19E0R9xffrgzrg84TC9', 2, 24159), ('G Perico', '4Q2hTDZYFCohf17D5GvkIb', 2, 38651), ('Vdon', '2uzaOMszD2lvSWPKjaYaTq', 2, 5156), ('svrite', '7ySZXevcgRfQ8OBL76GMSz', 1, 33255), ('SavageRealm', '45FttOQCrPL5VgbEL0ZLr4', 1, 30231), ('Cheap Sober', '6TKh8NPpURP4w3olT22ZsF', 1, 21176), ('Huskii', '7uXoqYYwYwTUMF2zSF9Fwl', 1, 14133), ('Lil Satan', '27Xh7VTUnXXdQi5KrBG2H3', 1, 7069), ('TKO', '30yNK6ul4uCxHnK36GD1fg', 1, 21386), ('Tommy Ice', '3AUIYVmhwrsw8UOPHEv91Z', 1, 6088), ('Fortay', '1Uq8qjEeUUatM8X0hhNrOS', 1, 18810), ('Exl', '6j5lxsz5UsEHXTgkwVC4ie', 1, 1925), ('Mitchos Da Menace', '4N9eOW77jpcMTy4qt2smkg', 1, 8766)]\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "# se = sp.search(q = 'genre:%22southern%20hip%20hop%22', type = 'album', market = 'US')\n",
    "\n",
    "#         for a in sp.artist_related_artists(artid)['artists']:\n",
    "\n",
    "# this function generates many related artists, returns most recent events for each one, \n",
    "def compile_tours(names = [], followers = -1, lessthan = True):\n",
    "    if (names != [] and isinstance(names, list)):\n",
    "            print('yo')\n",
    "            artists = []\n",
    "            if followers == -1:   \n",
    "                for n in names:\n",
    "                    artists += related_artists(artname = n, llen = 10)\n",
    "            else:\n",
    "                for n in names:\n",
    "                    artists += related_artists(artname = n, llen = 10, followers = followers)\n",
    "\n",
    "#             print('llen')\n",
    "            print(artists)\n",
    "            nl = []\n",
    "            for a in artists:\n",
    "                nl.append(a[0])\n",
    "            \n",
    "            nl = list(set(nl))\n",
    "            \n",
    "            print(len(nl))\n",
    "            \n",
    "            gl = []\n",
    "            \n",
    "            for a in nl:\n",
    "                an = get_artist_id(a.replace(' ', '+')) if not (a[0]+' ').isspace() else print('need artist!')\n",
    "    \n",
    "                if an != -1:\n",
    "                    req = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=50&order=desc')\n",
    "#             print(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "                    g = find_tour(req.json(), a)\n",
    "                    if g is not int:\n",
    "                        gl.append(g)\n",
    "            \n",
    "            return gl\n",
    "    else:\n",
    "        return -1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 914,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def plot_all_tours(ts):\n",
    "    m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "    colors = ['blue', 'purple', 'orange', 'darkred', 'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue', 'darkpurple', 'white', 'pink', 'lightblue', 'lightgreen']\n",
    "\n",
    "    cc = -1\n",
    "\n",
    "    for x in ts:\n",
    "        if not isinstance(x, int) and len(x) != 0:\n",
    "            if (cc!=len(colors)-1):\n",
    "                cc += 1\n",
    "            else:\n",
    "                cc = 0\n",
    "    \n",
    "            points = []\n",
    "\n",
    "            for i, row in x.iterrows():\n",
    "                tooltip = 'Artist: '+ str(row[0]) + '- City: ' + str(row[2]) + ', ' + str(row[3])\n",
    "\n",
    "                points.append((row[5], row[6]))\n",
    "\n",
    "                folium.Circle([row[5], row[6]], radius = 8, color = colors[cc], fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "            folium.PolyLine(points, color=colors[cc], weight=2.5, opacity=1).add_to(m)\n",
    "            \n",
    "    return m\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 913,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "((29.75212, -95.35467), (30.26749, -97.73605), (32.78461, -96.78442), (42.3214, -83.09366)) 21.812452855332943\n",
      "[(29.75212, -95.35467), (30.26749, -97.73605), (32.78461, -96.78442), (42.3214, -83.09366)]\n",
      "(33.79209, -84.388)\n",
      "(41.50337, -81.65417)\n",
      "(41.50832, -81.5803)\n",
      "(33.4971932, -86.7932486)\n",
      "[(29.75212, -95.35467), (30.26749, -97.73605), (32.78461, -96.78442), (33.4971932, -86.7932486), (33.79209, -84.388), (41.50832, -81.5803), (41.50337, -81.65417), (42.3214, -83.09366)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgCiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgTF9OT19UT1VDSCA9IGZhbHNlOwogICAgICAgICAgICBMX0RJU0FCTEVfM0QgPSBmYWxzZTsKICAgICAgICA8L3NjcmlwdD4KICAgIAogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS0xLjEyLjQubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5qcyI+PC9zY3JpcHQ+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzMuMi4wL2Nzcy9ib290c3RyYXAubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLXRoZW1lLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC42LjMvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL0xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLzIuMC4yL2xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3Jhd2Nkbi5naXRoYWNrLmNvbS9weXRob24tdmlzdWFsaXphdGlvbi9mb2xpdW0vbWFzdGVyL2ZvbGl1bS90ZW1wbGF0ZXMvbGVhZmxldC5hd2Vzb21lLnJvdGF0ZS5jc3MiLz4KICAgIDxzdHlsZT5odG1sLCBib2R5IHt3aWR0aDogMTAwJTtoZWlnaHQ6IDEwMCU7bWFyZ2luOiAwO3BhZGRpbmc6IDA7fTwvc3R5bGU+CiAgICA8c3R5bGU+I21hcCB7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7cmlnaHQ6MDtsZWZ0OjA7fTwvc3R5bGU+CiAgICAKICAgICAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwKICAgICAgICAgICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgICAgICAgICAgPHN0eWxlPgogICAgICAgICAgICAgICAgI21hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyB7CiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgbGVmdDogMC4wJTsKICAgICAgICAgICAgICAgICAgICB0b3A6IDAuMCU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIDwvc3R5bGU+CiAgICAgICAgCjwvaGVhZD4KPGJvZHk+ICAgIAogICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbGl1bS1tYXAiIGlkPSJtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMiID48L2Rpdj4KICAgICAgICAKPC9ib2R5Pgo8c2NyaXB0PiAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzID0gTC5tYXAoCiAgICAgICAgICAgICAgICAibWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IFs0MC4wLCAtOTUuMF0sCiAgICAgICAgICAgICAgICAgICAgY3JzOiBMLkNSUy5FUFNHMzg1NywKICAgICAgICAgICAgICAgICAgICB6b29tOiA0LAogICAgICAgICAgICAgICAgICAgIHpvb21Db250cm9sOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIHByZWZlckNhbnZhczogZmFsc2UsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CgogICAgICAgICAgICAKCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHRpbGVfbGF5ZXJfYTJmM2QyYjRjODEzNDc2ZmJhMjc4ZjUyNTgyYzllNDUgPSBMLnRpbGVMYXllcigKICAgICAgICAgICAgICAgICJodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZyIsCiAgICAgICAgICAgICAgICB7ImF0dHJpYnV0aW9uIjogIkRhdGEgYnkgXHUwMDI2Y29weTsgXHUwMDNjYSBocmVmPVwiaHR0cDovL29wZW5zdHJlZXRtYXAub3JnXCJcdTAwM2VPcGVuU3RyZWV0TWFwXHUwMDNjL2FcdTAwM2UsIHVuZGVyIFx1MDAzY2EgaHJlZj1cImh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCJcdTAwM2VPRGJMXHUwMDNjL2FcdTAwM2UuIiwgImRldGVjdFJldGluYSI6IGZhbHNlLCAibWF4TmF0aXZlWm9vbSI6IDE4LCAibWF4Wm9vbSI6IDE4LCAibWluWm9vbSI6IDAsICJub1dyYXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic3ViZG9tYWlucyI6ICJhYmMiLCAidG1zIjogZmFsc2V9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzg3OWRjNmQ1ZWY3ODQzNDFhN2Q0ZDQ3M2ZkYTZkY2UzID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjkuNzUyMTIsIC05NS4zNTQ2N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZ3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZ3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzJkZjAxNWE0ZTRkZTQzMzA4MjI4ZjI1ZmM2NzBlOTBkID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF80N2M3ODAzMTc0YzA0YjZmYWIyNDg1N2ZiOTQ4NDQ2ZSA9ICQoYDxkaXYgaWQ9Imh0bWxfNDdjNzgwMzE3NGMwNGI2ZmFiMjQ4NTdmYjk0ODQ0NmUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMmRmMDE1YTRlNGRlNDMzMDgyMjhmMjVmYzY3MGU5MGQuc2V0Q29udGVudChodG1sXzQ3Yzc4MDMxNzRjMDRiNmZhYjI0ODU3ZmI5NDg0NDZlKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzg3OWRjNmQ1ZWY3ODQzNDFhN2Q0ZDQ3M2ZkYTZkY2UzLmJpbmRQb3B1cChwb3B1cF8yZGYwMTVhNGU0ZGU0MzMwODIyOGYyNWZjNjcwZTkwZCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzg3OWRjNmQ1ZWY3ODQzNDFhN2Q0ZDQ3M2ZkYTZkY2UzLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IEhvdXN0b24sICBUWCwgIFVTIC0gQ291bnQ6IDMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZDY2Y2JmN2Q4ZWExNGNhNzkxYTc4YjU4OTMzZTMwMDYgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi4zMjE0LCAtODMuMDkzNjZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yMjZmZTJjMDcxZGQ0MzM5YTkxMTk5Mjk3NGNkZDBkMCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMGYxYTBlNDA2M2FiNDI2NTljOWI2Y2M0YjlhNzhhYmYgPSAkKGA8ZGl2IGlkPSJodG1sXzBmMWEwZTQwNjNhYjQyNjU5YzliNmNjNGI5YTc4YWJmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzIyNmZlMmMwNzFkZDQzMzlhOTExOTkyOTc0Y2RkMGQwLnNldENvbnRlbnQoaHRtbF8wZjFhMGU0MDYzYWI0MjY1OWM5YjZjYzRiOWE3OGFiZik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9kNjZjYmY3ZDhlYTE0Y2E3OTFhNzhiNTg5MzNlMzAwNi5iaW5kUG9wdXAocG9wdXBfMjI2ZmUyYzA3MWRkNDMzOWE5MTE5OTI5NzRjZGQwZDApCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9kNjZjYmY3ZDhlYTE0Y2E3OTFhNzhiNTg5MzNlMzAwNi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBEZXRyb2l0LCAgTUksICBVUyAtIENvdW50OiAzCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2RlZmRlMTQ4YzVjMDQzYjk5OGQzMGMxNGY3NDgwM2JiID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzIuNzg0NjEsIC05Ni43ODQ0Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZ3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZ3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzhlODU1NjU4ZjNlNjQxYjJhNDFjODE3MDIxMmViNDJhID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9hODFhYzIzN2MxZDc0ZTZjOTViOGVkZTlhZDYzOTQxNyA9ICQoYDxkaXYgaWQ9Imh0bWxfYTgxYWMyMzdjMWQ3NGU2Yzk1YjhlZGU5YWQ2Mzk0MTciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfOGU4NTU2NThmM2U2NDFiMmE0MWM4MTcwMjEyZWI0MmEuc2V0Q29udGVudChodG1sX2E4MWFjMjM3YzFkNzRlNmM5NWI4ZWRlOWFkNjM5NDE3KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2RlZmRlMTQ4YzVjMDQzYjk5OGQzMGMxNGY3NDgwM2JiLmJpbmRQb3B1cChwb3B1cF84ZTg1NTY1OGYzZTY0MWIyYTQxYzgxNzAyMTJlYjQyYSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2RlZmRlMTQ4YzVjMDQzYjk5OGQzMGMxNGY3NDgwM2JiLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IERhbGxhcywgIFRYLCAgVVMgLSBDb3VudDogMwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV83NmY1YThjZDYwNTA0OGRmOTRkZmNiM2Y4YjkyN2VhNCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMwLjI2NzQ5LCAtOTcuNzM2MDVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9mYmQ4Yzk5OTFhYTQ0YzEzOWQ4NzdhNTVhMjc5NTIxNCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMDhiZjdiZTQwM2U3NGUzYTg4MmJjNmRjNjA1YjdiYmQgPSAkKGA8ZGl2IGlkPSJodG1sXzA4YmY3YmU0MDNlNzRlM2E4ODJiYzZkYzYwNWI3YmJkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2ZiZDhjOTk5MWFhNDRjMTM5ZDg3N2E1NWEyNzk1MjE0LnNldENvbnRlbnQoaHRtbF8wOGJmN2JlNDAzZTc0ZTNhODgyYmM2ZGM2MDViN2JiZCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV83NmY1YThjZDYwNTA0OGRmOTRkZmNiM2Y4YjkyN2VhNC5iaW5kUG9wdXAocG9wdXBfZmJkOGM5OTkxYWE0NGMxMzlkODc3YTU1YTI3OTUyMTQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV83NmY1YThjZDYwNTA0OGRmOTRkZmNiM2Y4YjkyN2VhNC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBBdXN0aW4sICBUWCwgIFVTIC0gQ291bnQ6IDMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMjUwZThjZjk3N2Q4NGZjZWIxOWFkY2YxMWUwOTdkODcgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOS45NTg5OCwgLTc1LjE1MDI2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzc3MzA1YWZkNTQ3OTQ1MWZhZTlkYzE4MGFkYzI1ZDBkID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8yNTU2NTRkODA4ZTg0M2MyYTBiN2FlMDA4ODQ1OTNiNiA9ICQoYDxkaXYgaWQ9Imh0bWxfMjU1NjU0ZDgwOGU4NDNjMmEwYjdhZTAwODg0NTkzYjYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNzczMDVhZmQ1NDc5NDUxZmFlOWRjMTgwYWRjMjVkMGQuc2V0Q29udGVudChodG1sXzI1NTY1NGQ4MDhlODQzYzJhMGI3YWUwMDg4NDU5M2I2KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzI1MGU4Y2Y5NzdkODRmY2ViMTlhZGNmMTFlMDk3ZDg3LmJpbmRQb3B1cChwb3B1cF83NzMwNWFmZDU0Nzk0NTFmYWU5ZGMxODBhZGMyNWQwZCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzI1MGU4Y2Y5NzdkODRmY2ViMTlhZGNmMTFlMDk3ZDg3LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IFBoaWxhZGVscGhpYSwgIFBBLCAgVVMgLSBDb3VudDogMgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9hM2Y5M2JkMTM1NDM0MTgxYWEwNGI0NTdkNTkyYzJjMyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzI4LjU1OTg3MiwgLTgxLjM2NDczOF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yYjMwMWUyNGQ2ZTM0OTMzYTI4YjdlZjQ2M2NiMzhlMiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZTAzNGUyYWJkMGE5NDVjZjk0ZmNjNjliZmRiMjViMmIgPSAkKGA8ZGl2IGlkPSJodG1sX2UwMzRlMmFiZDBhOTQ1Y2Y5NGZjYzY5YmZkYjI1YjJiIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzJiMzAxZTI0ZDZlMzQ5MzNhMjhiN2VmNDYzY2IzOGUyLnNldENvbnRlbnQoaHRtbF9lMDM0ZTJhYmQwYTk0NWNmOTRmY2M2OWJmZGIyNWIyYik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9hM2Y5M2JkMTM1NDM0MTgxYWEwNGI0NTdkNTkyYzJjMy5iaW5kUG9wdXAocG9wdXBfMmIzMDFlMjRkNmUzNDkzM2EyOGI3ZWY0NjNjYjM4ZTIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9hM2Y5M2JkMTM1NDM0MTgxYWEwNGI0NTdkNTkyYzJjMy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBPcmxhbmRvLCAgRkwsICBVUyAtIENvdW50OiAyCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzY2NWIzYjgwMDgxOTRjN2FhMmYyNTRjZjUzYjI3Y2IzID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzUyMTEsIC03MS4xMTk0Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9hODY0ZWVkM2VkZjQ0NTUzOTY3YWZjYmVmZWFkOWE3YSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZjBiMTZkNmM4NjcxNDJmNGFiYjJjNzBjYjQxNjBmYmYgPSAkKGA8ZGl2IGlkPSJodG1sX2YwYjE2ZDZjODY3MTQyZjRhYmIyYzcwY2I0MTYwZmJmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2E4NjRlZWQzZWRmNDQ1NTM5NjdhZmNiZWZlYWQ5YTdhLnNldENvbnRlbnQoaHRtbF9mMGIxNmQ2Yzg2NzE0MmY0YWJiMmM3MGNiNDE2MGZiZik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82NjViM2I4MDA4MTk0YzdhYTJmMjU0Y2Y1M2IyN2NiMy5iaW5kUG9wdXAocG9wdXBfYTg2NGVlZDNlZGY0NDU1Mzk2N2FmY2JlZmVhZDlhN2EpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82NjViM2I4MDA4MTk0YzdhYTJmMjU0Y2Y1M2IyN2NiMy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBCb3N0b24sICBNQSwgIFVTIC0gQ291bnQ6IDIKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNjFiOTQwYmY1NGJhNDg5ZWIxYmZhZTM5MDI4ZTM5ZmMgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMy43OTIwOSwgLTg0LjM4OF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yY2VjMjZlMWIzYTY0NzlmYTMyMjMxOTRmMzlmNGI4MSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfOGZkMDk0MDI1MTlmNGVjNmIzYjA4NmY5ODM2NGY0ZWIgPSAkKGA8ZGl2IGlkPSJodG1sXzhmZDA5NDAyNTE5ZjRlYzZiM2IwODZmOTgzNjRmNGViIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzJjZWMyNmUxYjNhNjQ3OWZhMzIyMzE5NGYzOWY0YjgxLnNldENvbnRlbnQoaHRtbF84ZmQwOTQwMjUxOWY0ZWM2YjNiMDg2Zjk4MzY0ZjRlYik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82MWI5NDBiZjU0YmE0ODllYjFiZmFlMzkwMjhlMzlmYy5iaW5kUG9wdXAocG9wdXBfMmNlYzI2ZTFiM2E2NDc5ZmEzMjIzMTk0ZjM5ZjRiODEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82MWI5NDBiZjU0YmE0ODllYjFiZmFlMzkwMjhlMzlmYy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBBdGxhbnRhLCAgR0EsICBVUyAtIENvdW50OiAyCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2E4NGE1OTRmNjhhYzRlOTRhZWFlM2ZlODJiYWIyMjMyID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzguOTE3MiwgLTc3LjAyNzc2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yMjMzNmY1MjUzYjE0NWZiYmViZjg0YTJmNDQ4MDkwNCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMzg1YTg2MGYxNTQwNDM3NGE4OGIwM2U1N2Y5NzNmODkgPSAkKGA8ZGl2IGlkPSJodG1sXzM4NWE4NjBmMTU0MDQzNzRhODhiMDNlNTdmOTczZjg5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzIyMzM2ZjUyNTNiMTQ1ZmJiZWJmODRhMmY0NDgwOTA0LnNldENvbnRlbnQoaHRtbF8zODVhODYwZjE1NDA0Mzc0YTg4YjAzZTU3Zjk3M2Y4OSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9hODRhNTk0ZjY4YWM0ZTk0YWVhZTNmZTgyYmFiMjIzMi5iaW5kUG9wdXAocG9wdXBfMjIzMzZmNTI1M2IxNDVmYmJlYmY4NGEyZjQ0ODA5MDQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9hODRhNTk0ZjY4YWM0ZTk0YWVhZTNmZTgyYmFiMjIzMi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBXYXNoaW5ndG9uLCAgREMsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzMyMjIyZDZjNDQ1MDQyMjk5OWE4YjE2Zjk2NTEwZTZmID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzguNjE1MzUsIC05MC4xOTY0N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfN2JjNDYzZjNhYWNjNGExYTg3MzM4YmY1YjE1M2FlMzkgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2JkZTM5ZTUyMDkyZjRhMWY5Y2VmYTQ0OGQzNzBjNjBkID0gJChgPGRpdiBpZD0iaHRtbF9iZGUzOWU1MjA5MmY0YTFmOWNlZmE0NDhkMzcwYzYwZCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF83YmM0NjNmM2FhY2M0YTFhODczMzhiZjViMTUzYWUzOS5zZXRDb250ZW50KGh0bWxfYmRlMzllNTIwOTJmNGExZjljZWZhNDQ4ZDM3MGM2MGQpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMzIyMjJkNmM0NDUwNDIyOTk5YThiMTZmOTY1MTBlNmYuYmluZFBvcHVwKHBvcHVwXzdiYzQ2M2YzYWFjYzRhMWE4NzMzOGJmNWIxNTNhZTM5KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMzIyMjJkNmM0NDUwNDIyOTk5YThiMTZmOTY1MTBlNmYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogU3QgTG91aXMsICBNTywgIFVTIC0gQ291bnQ6IDEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNzlmYzA1ODNjYWZmNGI1ZDk3Y2VkODliNzVhYjU4MDIgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOC45OTc0ODIsIC03Ny4wMjc5MjhdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInllbGxvdyIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJ5ZWxsb3ciLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2U4ODg1NmM0YjhiNjQxZjZhN2Y4OGY1NzAxYmM0ZjU0ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF81YTg2MDBjYzYyNTk0N2YzYWY1MTUwYzc5OTI0Zjg0OCA9ICQoYDxkaXYgaWQ9Imh0bWxfNWE4NjAwY2M2MjU5NDdmM2FmNTE1MGM3OTkyNGY4NDgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZTg4ODU2YzRiOGI2NDFmNmE3Zjg4ZjU3MDFiYzRmNTQuc2V0Q29udGVudChodG1sXzVhODYwMGNjNjI1OTQ3ZjNhZjUxNTBjNzk5MjRmODQ4KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzc5ZmMwNTgzY2FmZjRiNWQ5N2NlZDg5Yjc1YWI1ODAyLmJpbmRQb3B1cChwb3B1cF9lODg4NTZjNGI4YjY0MWY2YTdmODhmNTcwMWJjNGY1NCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzc5ZmMwNTgzY2FmZjRiNWQ5N2NlZDg5Yjc1YWI1ODAyLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IFNpbHZlciBTcHJpbmcsICBNRCwgIFVTIC0gQ291bnQ6IDEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZjMxNGQ0ZTg1Y2FjNDU2MWE0N2MyZGNiMTIzYzNkZGUgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Ny42MTM4MSwgLTEyMi4zMTk2N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfY2Y3OWI1ZTk1NTllNDRhZDg3NmM4MTIyYTM3ZWFiZTAgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzE4M2RhMDcwYWEzNDQ3NjY4YTlkNjAyYWRkNDYzNGQxID0gJChgPGRpdiBpZD0iaHRtbF8xODNkYTA3MGFhMzQ0NzY2OGE5ZDYwMmFkZDQ2MzRkMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9jZjc5YjVlOTU1OWU0NGFkODc2YzgxMjJhMzdlYWJlMC5zZXRDb250ZW50KGh0bWxfMTgzZGEwNzBhYTM0NDc2NjhhOWQ2MDJhZGQ0NjM0ZDEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZjMxNGQ0ZTg1Y2FjNDU2MWE0N2MyZGNiMTIzYzNkZGUuYmluZFBvcHVwKHBvcHVwX2NmNzliNWU5NTU5ZTQ0YWQ4NzZjODEyMmEzN2VhYmUwKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZjMxNGQ0ZTg1Y2FjNDU2MWE0N2MyZGNiMTIzYzNkZGUuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogU2VhdHRsZSwgIFdBLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8yZmI0Mzk1YTU2YTE0ZWI4Yjg1YWM4ZTlhMjNlY2JhNiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM3Ljc4NzkxLCAtMTIyLjQyMTUxXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yYTAxNTYwYzJiN2M0ZTAzODA1NmY0MjAyOGIwYWEyYSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZGUyY2IxMWQyZDE3NDAwMjg3NTY2NzE0OTYzMjcwZDAgPSAkKGA8ZGl2IGlkPSJodG1sX2RlMmNiMTFkMmQxNzQwMDI4NzU2NjcxNDk2MzI3MGQwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzJhMDE1NjBjMmI3YzRlMDM4MDU2ZjQyMDI4YjBhYTJhLnNldENvbnRlbnQoaHRtbF9kZTJjYjExZDJkMTc0MDAyODc1NjY3MTQ5NjMyNzBkMCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8yZmI0Mzk1YTU2YTE0ZWI4Yjg1YWM4ZTlhMjNlY2JhNi5iaW5kUG9wdXAocG9wdXBfMmEwMTU2MGMyYjdjNGUwMzgwNTZmNDIwMjhiMGFhMmEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8yZmI0Mzk1YTU2YTE0ZWI4Yjg1YWM4ZTlhMjNlY2JhNi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBTYW4gRnJhbmNpc2NvLCAgQ0EsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2Q4YTBhNjFmMTdiMTRmNzY5ZDgyMGE4YzY1NDBiNDZmID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzIuNzUzODE1LCAtMTE3LjIwOTI3Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMzgzYmU5YWRjNDY3NDUzNWEzZmZkMzkyYTY1MGY0NWEgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2VlYTIwMDJhMzk5YTQyOTViZDVlNWMxOGY5MzM4NThmID0gJChgPGRpdiBpZD0iaHRtbF9lZWEyMDAyYTM5OWE0Mjk1YmQ1ZTVjMThmOTMzODU4ZiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8zODNiZTlhZGM0Njc0NTM1YTNmZmQzOTJhNjUwZjQ1YS5zZXRDb250ZW50KGh0bWxfZWVhMjAwMmEzOTlhNDI5NWJkNWU1YzE4ZjkzMzg1OGYpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZDhhMGE2MWYxN2IxNGY3NjlkODIwYThjNjU0MGI0NmYuYmluZFBvcHVwKHBvcHVwXzM4M2JlOWFkYzQ2NzQ1MzVhM2ZmZDM5MmE2NTBmNDVhKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZDhhMGE2MWYxN2IxNGY3NjlkODIwYThjNjU0MGI0NmYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogU2FuIERpZWdvLCAgQ0EsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2QwNjRjOWFmMjY5NDRjNmNiMWNjNjE2NDk3Y2Y5Zjg5ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjkuNDQ4NjUsIC05OC40ODc1N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNzk5NjI0ZDg2ZjQ2NDg5NzgzYjQxNDEwZmRkMDgyOGUgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzBmYzhkYTg0NmJkYjQwYTFhY2FmYzQ4OTg0NTQ4OTcwID0gJChgPGRpdiBpZD0iaHRtbF8wZmM4ZGE4NDZiZGI0MGExYWNhZmM0ODk4NDU0ODk3MCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF83OTk2MjRkODZmNDY0ODk3ODNiNDE0MTBmZGQwODI4ZS5zZXRDb250ZW50KGh0bWxfMGZjOGRhODQ2YmRiNDBhMWFjYWZjNDg5ODQ1NDg5NzApOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZDA2NGM5YWYyNjk0NGM2Y2IxY2M2MTY0OTdjZjlmODkuYmluZFBvcHVwKHBvcHVwXzc5OTYyNGQ4NmY0NjQ4OTc4M2I0MTQxMGZkZDA4MjhlKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZDA2NGM5YWYyNjk0NGM2Y2IxY2M2MTY0OTdjZjlmODkuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogU2FuIEFudG9uaW8sICBUWCwgIFVTIC0gQ291bnQ6IDEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZGM4NDY5Y2U3MDk4NGNjOGI2OGM4MGZlZmQ0M2IwNzMgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOC41Njk5OCwgLTEyMS40OTA2OV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMTNkZGFmODBiYmJlNDgwMGE1ODc1OGY5N2I4ZjhkNjggPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2E0OWMwMjE3ODcyNDRhZTRiOGIyNjJlYjExMjA2YjEzID0gJChgPGRpdiBpZD0iaHRtbF9hNDljMDIxNzg3MjQ0YWU0YjhiMjYyZWIxMTIwNmIxMyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8xM2RkYWY4MGJiYmU0ODAwYTU4NzU4Zjk3YjhmOGQ2OC5zZXRDb250ZW50KGh0bWxfYTQ5YzAyMTc4NzI0NGFlNGI4YjI2MmViMTEyMDZiMTMpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZGM4NDY5Y2U3MDk4NGNjOGI2OGM4MGZlZmQ0M2IwNzMuYmluZFBvcHVwKHBvcHVwXzEzZGRhZjgwYmJiZTQ4MDBhNTg3NThmOTdiOGY4ZDY4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZGM4NDY5Y2U3MDk4NGNjOGI2OGM4MGZlZmQ0M2IwNzMuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogU2FjcmFtZW50bywgIENBLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9kM2ZhNjhkNzczYjc0MTRlOGEyODhiZmM0MjY1ZTU3NSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMzLjQ1MTQxMTQsIC0xMTIuMDc4MTg4NF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZDEyZjZmZmEyNTYxNDU3NjkzNTI5MWY2MWE4MjU3NmIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2M4NjVlNTFlYjMyNjQ3ZTg5ODdhYmQ4ODZlZWNkNzBhID0gJChgPGRpdiBpZD0iaHRtbF9jODY1ZTUxZWIzMjY0N2U4OTg3YWJkODg2ZWVjZDcwYSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9kMTJmNmZmYTI1NjE0NTc2OTM1MjkxZjYxYTgyNTc2Yi5zZXRDb250ZW50KGh0bWxfYzg2NWU1MWViMzI2NDdlODk4N2FiZDg4NmVlY2Q3MGEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZDNmYTY4ZDc3M2I3NDE0ZThhMjg4YmZjNDI2NWU1NzUuYmluZFBvcHVwKHBvcHVwX2QxMmY2ZmZhMjU2MTQ1NzY5MzUyOTFmNjFhODI1NzZiKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZDNmYTY4ZDc3M2I3NDE0ZThhMjg4YmZjNDI2NWU1NzUuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogUGhvZW5peCwgIEFaLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV85ZTRmY2QxNDQ4YTA0YTYxOWFkMmMwZGM4ZmUyYzdkMSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQxLjg2MjY4LCAtNzEuMzk5MzddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInllbGxvdyIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJ5ZWxsb3ciLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzQ2MjZkYTdkMTEwZjQyNjg5OWI5YmQzZmMzZTU1OGUzID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF80YmZjMDEzMDIxZjA0NThiYmZjNDZmYzgwZWY4ODgzNiA9ICQoYDxkaXYgaWQ9Imh0bWxfNGJmYzAxMzAyMWYwNDU4YmJmYzQ2ZmM4MGVmODg4MzYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNDYyNmRhN2QxMTBmNDI2ODk5YjliZDNmYzNlNTU4ZTMuc2V0Q29udGVudChodG1sXzRiZmMwMTMwMjFmMDQ1OGJiZmM0NmZjODBlZjg4ODM2KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzllNGZjZDE0NDhhMDRhNjE5YWQyYzBkYzhmZTJjN2QxLmJpbmRQb3B1cChwb3B1cF80NjI2ZGE3ZDExMGY0MjY4OTliOWJkM2ZjM2U1NThlMykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzllNGZjZDE0NDhhMDRhNjE5YWQyYzBkYzhmZTJjN2QxLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IFBhd3R1Y2tldCwgIFJJLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9jMGJjMTU2Yjk0NTE0NDA1OGIxNDc0NzE5NWVjYjc3ZSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQxLjI4NTAwNzUsIC05Ni4wMDg0NDAzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8wM2Y3ZDliNjZjYTU0Yzg4YjkzZjNiOTc3MzdkMzg0OCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZTJiZTVlOTZjYWYyNDU4NTg1ODI5MzQ3YThiMzkwZWMgPSAkKGA8ZGl2IGlkPSJodG1sX2UyYmU1ZTk2Y2FmMjQ1ODU4NTgyOTM0N2E4YjM5MGVjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzAzZjdkOWI2NmNhNTRjODhiOTNmM2I5NzczN2QzODQ4LnNldENvbnRlbnQoaHRtbF9lMmJlNWU5NmNhZjI0NTg1ODU4MjkzNDdhOGIzOTBlYyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9jMGJjMTU2Yjk0NTE0NDA1OGIxNDc0NzE5NWVjYjc3ZS5iaW5kUG9wdXAocG9wdXBfMDNmN2Q5YjY2Y2E1NGM4OGI5M2YzYjk3NzM3ZDM4NDgpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9jMGJjMTU2Yjk0NTE0NDA1OGIxNDc0NzE5NWVjYjc3ZS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBPbWFoYSwgIE5FLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV81ZjdmOTQzYmExM2I0Yzk3YmFiMTQwODBlNDMwZjQ2NiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM1LjQ5MzUsIC05Ny41MjAxNl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYzUyYjJiNjg2MTkwNDNmY2JmZDc2OWQ1ZDc4OWZmNzYgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzExM2E1YzA3NWM5ZDQzMTRhYzQ3YmUzOWI0YTY0N2ExID0gJChgPGRpdiBpZD0iaHRtbF8xMTNhNWMwNzVjOWQ0MzE0YWM0N2JlMzliNGE2NDdhMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9jNTJiMmI2ODYxOTA0M2ZjYmZkNzY5ZDVkNzg5ZmY3Ni5zZXRDb250ZW50KGh0bWxfMTEzYTVjMDc1YzlkNDMxNGFjNDdiZTM5YjRhNjQ3YTEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNWY3Zjk0M2JhMTNiNGM5N2JhYjE0MDgwZTQzMGY0NjYuYmluZFBvcHVwKHBvcHVwX2M1MmIyYjY4NjE5MDQzZmNiZmQ3NjlkNWQ3ODlmZjc2KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNWY3Zjk0M2JhMTNiNGM5N2JhYjE0MDgwZTQzMGY0NjYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogT2tsYWhvbWEgQ2l0eSwgIE9LLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9jYmQyNmNiYzdmNWY0NWFjOWE5ZTQzMzEzNjU0ZDYzMCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM3LjgwNzc1LCAtMTIyLjI3MjddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInllbGxvdyIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJ5ZWxsb3ciLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzdkZGQ4ZWIwYjRlNDQ5Y2M4NWVhNmE2YjE2ZjcwNWM5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8yNTk4YjE5NzM4ZDg0M2ZiOGVlOGUzNWQ2YTExZDU3ZiA9ICQoYDxkaXYgaWQ9Imh0bWxfMjU5OGIxOTczOGQ4NDNmYjhlZThlMzVkNmExMWQ1N2YiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfN2RkZDhlYjBiNGU0NDljYzg1ZWE2YTZiMTZmNzA1Yzkuc2V0Q29udGVudChodG1sXzI1OThiMTk3MzhkODQzZmI4ZWU4ZTM1ZDZhMTFkNTdmKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2NiZDI2Y2JjN2Y1ZjQ1YWM5YTllNDMzMTM2NTRkNjMwLmJpbmRQb3B1cChwb3B1cF83ZGRkOGViMGI0ZTQ0OWNjODVlYTZhNmIxNmY3MDVjOSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2NiZDI2Y2JjN2Y1ZjQ1YWM5YTllNDMzMTM2NTRkNjMwLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IE9ha2xhbmQsICBDQSwgIFVTIC0gQ291bnQ6IDEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZTYxZDZkMDFkM2E0NDAwNGI4NDU1ODMzZGU2MjgzZGUgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MC43MzQ5MTcsIC03My45ODg0NDY5XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81MmM2ZjdlZDE2NjE0MzVhOWM5MmMyMmRkYzZhOTUxYSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNDBiNTE3ZjkyMDNkNGU0YWEzMDhlMjMyY2Q3M2JhYWEgPSAkKGA8ZGl2IGlkPSJodG1sXzQwYjUxN2Y5MjAzZDRlNGFhMzA4ZTIzMmNkNzNiYWFhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzUyYzZmN2VkMTY2MTQzNWE5YzkyYzIyZGRjNmE5NTFhLnNldENvbnRlbnQoaHRtbF80MGI1MTdmOTIwM2Q0ZTRhYTMwOGUyMzJjZDczYmFhYSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9lNjFkNmQwMWQzYTQ0MDA0Yjg0NTU4MzNkZTYyODNkZS5iaW5kUG9wdXAocG9wdXBfNTJjNmY3ZWQxNjYxNDM1YTljOTJjMjJkZGM2YTk1MWEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9lNjFkNmQwMWQzYTQ0MDA0Yjg0NTU4MzNkZTYyODNkZS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBOZXcgWW9yaywgIE5ZLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9mMjRiOGY1ZWY1OTU0ODNiOWEyZTJlNzYyOTI0ZDYwMCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQzLjYwODM0LCAtMTE2LjUwOTQ2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81ZGVhODQ4OTMzM2M0OWZmYWVlMTJiZDA1Zjg2Njg2YiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNDc1MmMxNzk2NzZkNDlkZWI5MDBiN2ZhNmQ2NGQzNGMgPSAkKGA8ZGl2IGlkPSJodG1sXzQ3NTJjMTc5Njc2ZDQ5ZGViOTAwYjdmYTZkNjRkMzRjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzVkZWE4NDg5MzMzYzQ5ZmZhZWUxMmJkMDVmODY2ODZiLnNldENvbnRlbnQoaHRtbF80NzUyYzE3OTY3NmQ0OWRlYjkwMGI3ZmE2ZDY0ZDM0Yyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9mMjRiOGY1ZWY1OTU0ODNiOWEyZTJlNzYyOTI0ZDYwMC5iaW5kUG9wdXAocG9wdXBfNWRlYTg0ODkzMzNjNDlmZmFlZTEyYmQwNWY4NjY4NmIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9mMjRiOGY1ZWY1OTU0ODNiOWEyZTJlNzYyOTI0ZDYwMC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBOYW1wYSwgIElELCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9jYmY3ZjM5ZTEzNzM0YzAwOTg3MjQ3ZWVmYzNkZWZhOCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzI1LjY4NzAxLCAtODAuMzUxNTldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInllbGxvdyIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJ5ZWxsb3ciLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzAzOWQ1YzMxMzVjOTQ3N2E5MjY0ZDAyZTA0YWUyM2U4ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9hYTc5YmIyMmVjNzQ0ZTI2YTQ4N2I2YjQ1Mzg5NTA0NCA9ICQoYDxkaXYgaWQ9Imh0bWxfYWE3OWJiMjJlYzc0NGUyNmE0ODdiNmI0NTM4OTUwNDQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMDM5ZDVjMzEzNWM5NDc3YTkyNjRkMDJlMDRhZTIzZTguc2V0Q29udGVudChodG1sX2FhNzliYjIyZWM3NDRlMjZhNDg3YjZiNDUzODk1MDQ0KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2NiZjdmMzllMTM3MzRjMDA5ODcyNDdlZWZjM2RlZmE4LmJpbmRQb3B1cChwb3B1cF8wMzlkNWMzMTM1Yzk0NzdhOTI2NGQwMmUwNGFlMjNlOCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2NiZjdmMzllMTM3MzRjMDA5ODcyNDdlZWZjM2RlZmE4LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IE1pYW1pLCAgRkwsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzM2Mzk5NDRjN2ZlNzRmODI4M2Y2ZGFhMzFiNmNkMmUxID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMDQwMjU1NiwgLTExOC4yNTkyNTE5XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9mZTMyNmI4NWFkOWU0YWNlOTYyZjNmY2NkMTIyMTdiYSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZWE2NGY4Mzg0ZjU0NDU5ZWJhYWQ3YTQ5OTkyOTk5M2YgPSAkKGA8ZGl2IGlkPSJodG1sX2VhNjRmODM4NGY1NDQ1OWViYWFkN2E0OTk5Mjk5OTNmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2ZlMzI2Yjg1YWQ5ZTRhY2U5NjJmM2ZjY2QxMjIxN2JhLnNldENvbnRlbnQoaHRtbF9lYTY0ZjgzODRmNTQ0NTllYmFhZDdhNDk5OTI5OTkzZik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8zNjM5OTQ0YzdmZTc0ZjgyODNmNmRhYTMxYjZjZDJlMS5iaW5kUG9wdXAocG9wdXBfZmUzMjZiODVhZDllNGFjZTk2MmYzZmNjZDEyMjE3YmEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8zNjM5OTQ0YzdmZTc0ZjgyODNmNmRhYTMxYjZjZDJlMS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBMb3MgQW5nZWxlcywgIENBLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8zOWRkNzY3MWIwMWI0NmE0OTg0YzA2N2EzM2JiN2Q2NSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQwLjgxMzI0OSwgLTk2LjcwMDYxN10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYTMyNGZkNzA5OWRlNDI2MjhmZjEzYzViZGViMDIzNzAgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzA4OTlmN2I0MDFjNDQ3YzhiMGVmMzVmZjlhZDQ0MTE3ID0gJChgPGRpdiBpZD0iaHRtbF8wODk5ZjdiNDAxYzQ0N2M4YjBlZjM1ZmY5YWQ0NDExNyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9hMzI0ZmQ3MDk5ZGU0MjYyOGZmMTNjNWJkZWIwMjM3MC5zZXRDb250ZW50KGh0bWxfMDg5OWY3YjQwMWM0NDdjOGIwZWYzNWZmOWFkNDQxMTcpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMzlkZDc2NzFiMDFiNDZhNDk4NGMwNjdhMzNiYjdkNjUuYmluZFBvcHVwKHBvcHVwX2EzMjRmZDcwOTlkZTQyNjI4ZmYxM2M1YmRlYjAyMzcwKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMzlkZDc2NzFiMDFiNDZhNDk4NGMwNjdhMzNiYjdkNjUuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogTGluY29sbiwgIE5FLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9lZWQxMDE4ODhiOGQ0YmRkYWIzMTU4MjhkYjNjZWIwMCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM4Ljk2NDc5NTcsIC05NS4yMzU4NTMyXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9kOTRjMTU4Y2Y2Mjc0ZjllYTYzNjFjN2M2ZjNlMzVjYyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfODRiMGZjNWQxYTJlNDI3NDgwNmYzMjdmOTczOTRkZmEgPSAkKGA8ZGl2IGlkPSJodG1sXzg0YjBmYzVkMWEyZTQyNzQ4MDZmMzI3Zjk3Mzk0ZGZhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2Q5NGMxNThjZjYyNzRmOWVhNjM2MWM3YzZmM2UzNWNjLnNldENvbnRlbnQoaHRtbF84NGIwZmM1ZDFhMmU0Mjc0ODA2ZjMyN2Y5NzM5NGRmYSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9lZWQxMDE4ODhiOGQ0YmRkYWIzMTU4MjhkYjNjZWIwMC5iaW5kUG9wdXAocG9wdXBfZDk0YzE1OGNmNjI3NGY5ZWE2MzYxYzdjNmYzZTM1Y2MpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9lZWQxMDE4ODhiOGQ0YmRkYWIzMTU4MjhkYjNjZWIwMC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBMYXdyZW5jZSwgIEtTLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV84ZWU3NDQ5NjA3Mjc0NDRjYmQzOGZkMzBhOTY0MjJjNCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM2LjA3OTksIC03OS44MTk0XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83YmRlZWVhODZhYTI0OTM5OTQyODY3YTU2ZjQwYjkyZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNWE1ZTlmOWViYTkzNGM3ZDk2MjM5NWZjYzg2Njg3YWMgPSAkKGA8ZGl2IGlkPSJodG1sXzVhNWU5ZjllYmE5MzRjN2Q5NjIzOTVmY2M4NjY4N2FjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzdiZGVlZWE4NmFhMjQ5Mzk5NDI4NjdhNTZmNDBiOTJmLnNldENvbnRlbnQoaHRtbF81YTVlOWY5ZWJhOTM0YzdkOTYyMzk1ZmNjODY2ODdhYyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV84ZWU3NDQ5NjA3Mjc0NDRjYmQzOGZkMzBhOTY0MjJjNC5iaW5kUG9wdXAocG9wdXBfN2JkZWVlYTg2YWEyNDkzOTk0Mjg2N2E1NmY0MGI5MmYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV84ZWU3NDQ5NjA3Mjc0NDRjYmQzOGZkMzBhOTY0MjJjNC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBHcmVlbnNib3JvLCAgTkMsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzk3OGEzYzkzMjBlMzQ4ZDI4ZjYxMTljMGFhNzFkYzFlID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzYuNzU4ODQ0MSwgLTExOS44MDAxODA1XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9kZmE1N2U1MjViYTA0NWU1YTI2YjJjMGUyNTRkYTRkYiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfM2E2NDJjYmM0OTUzNDdmZTkxYzE1MjgxNTFlYWY1Y2QgPSAkKGA8ZGl2IGlkPSJodG1sXzNhNjQyY2JjNDk1MzQ3ZmU5MWMxNTI4MTUxZWFmNWNkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2RmYTU3ZTUyNWJhMDQ1ZTVhMjZiMmMwZTI1NGRhNGRiLnNldENvbnRlbnQoaHRtbF8zYTY0MmNiYzQ5NTM0N2ZlOTFjMTUyODE1MWVhZjVjZCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV85NzhhM2M5MzIwZTM0OGQyOGY2MTE5YzBhYTcxZGMxZS5iaW5kUG9wdXAocG9wdXBfZGZhNTdlNTI1YmEwNDVlNWEyNmIyYzBlMjU0ZGE0ZGIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV85NzhhM2M5MzIwZTM0OGQyOGY2MTE5YzBhYTcxZGMxZS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBGcmVzbm8sICBDQSwgIFVTIC0gQ291bnQ6IDEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNjhlNmM2M2IyMzEzNDEyODllNWIwMGNlZTMxZDQxMDUgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MS41MDMzNywgLTgxLjY1NDE3XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ5ZWxsb3ciLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAieWVsbG93IiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzE0ZTUzZTRjOTBiOTQ5MGE5MTA3MTQwYzgxOTY3NWUzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83MmI3MjQ3ZWY5Mzk0NWIzYTVjNTg2ZmM3YWUwYWM4OSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMDQ0Zjc3N2IzYzM1NDU5MTkwMWVkYWNlZDhiN2QxMzkgPSAkKGA8ZGl2IGlkPSJodG1sXzA0NGY3NzdiM2MzNTQ1OTE5MDFlZGFjZWQ4YjdkMTM5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzcyYjcyNDdlZjkzOTQ1YjNhNWM1ODZmYzdhZTBhYzg5LnNldENvbnRlbnQoaHRtbF8wNDRmNzc3YjNjMzU0NTkxOTAxZWRhY2VkOGI3ZDEzOSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82OGU2YzYzYjIzMTM0MTI4OWU1YjAwY2VlMzFkNDEwNS5iaW5kUG9wdXAocG9wdXBfNzJiNzI0N2VmOTM5NDViM2E1YzU4NmZjN2FlMGFjODkpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82OGU2YzYzYjIzMTM0MTI4OWU1YjAwY2VlMzFkNDEwNS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaXR5OiBDbGV2ZWxhbmQsICBPSCwgIFVTIC0gQ291bnQ6IDEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNjNlNzliODRlZGE5NDFhNWFjYWZlZjk1YWUzNDQyNTAgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MS41MDgzMiwgLTgxLjU4MDNdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInllbGxvdyIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJ5ZWxsb3ciLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2U3MDkwNzc5MzljODQwZWJhZjI3NTA3YTI0ZGY1MDQ3ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8zYWQ3ZDBhMWQzYWQ0NmNhODQzNjQ0MDQxMzE5ZDFkYSA9ICQoYDxkaXYgaWQ9Imh0bWxfM2FkN2QwYTFkM2FkNDZjYTg0MzY0NDA0MTMxOWQxZGEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZTcwOTA3NzkzOWM4NDBlYmFmMjc1MDdhMjRkZjUwNDcuc2V0Q29udGVudChodG1sXzNhZDdkMGExZDNhZDQ2Y2E4NDM2NDQwNDEzMTlkMWRhKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzYzZTc5Yjg0ZWRhOTQxYTVhY2FmZWY5NWFlMzQ0MjUwLmJpbmRQb3B1cChwb3B1cF9lNzA5MDc3OTM5Yzg0MGViYWYyNzUwN2EyNGRmNTA0NykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzYzZTc5Yjg0ZWRhOTQxYTVhY2FmZWY5NWFlMzQ0MjUwLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IENsZXZlbGFuZCBIZWlnaHRzLCAgT0gsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzg3ZmMwNmQyMDI4NjRkZmFiY2JkOTBlZDI4ZTA0N2NkID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDEuOTUzNDQsIC04Ny43NzcxOF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMWYzZDk2ZDkwNWQyNDVmZmJjYWIwODdhNjBiZmUyMjIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzcxMmM0MjFhODYzZDRkYmE4NWNhYmM4ZWE0OTRjNWQ2ID0gJChgPGRpdiBpZD0iaHRtbF83MTJjNDIxYTg2M2Q0ZGJhODVjYWJjOGVhNDk0YzVkNiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8xZjNkOTZkOTA1ZDI0NWZmYmNhYjA4N2E2MGJmZTIyMi5zZXRDb250ZW50KGh0bWxfNzEyYzQyMWE4NjNkNGRiYTg1Y2FiYzhlYTQ5NGM1ZDYpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfODdmYzA2ZDIwMjg2NGRmYWJjYmQ5MGVkMjhlMDQ3Y2QuYmluZFBvcHVwKHBvcHVwXzFmM2Q5NmQ5MDVkMjQ1ZmZiY2FiMDg3YTYwYmZlMjIyKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfODdmYzA2ZDIwMjg2NGRmYWJjYmQ5MGVkMjhlMDQ3Y2QuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogQ2hpY2FnbywgIElMLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9jZmRlNzM2NDZhZjM0NWY5YmI5MjRmNjJhYTNkM2EwZiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM1LjI0MDMsIC04MC44NDUzMV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNzRkYTIwZjYyN2YwNDI5ZmIwNGYzMzFiMGEyMDhjZjcgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzgxY2NjM2E3OTQ2YzRiZmVhYTkwOTVhYzI5OWI2MTcxID0gJChgPGRpdiBpZD0iaHRtbF84MWNjYzNhNzk0NmM0YmZlYWE5MDk1YWMyOTliNjE3MSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF83NGRhMjBmNjI3ZjA0MjlmYjA0ZjMzMWIwYTIwOGNmNy5zZXRDb250ZW50KGh0bWxfODFjY2MzYTc5NDZjNGJmZWFhOTA5NWFjMjk5YjYxNzEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfY2ZkZTczNjQ2YWYzNDVmOWJiOTI0ZjYyYWEzZDNhMGYuYmluZFBvcHVwKHBvcHVwXzc0ZGEyMGY2MjdmMDQyOWZiMDRmMzMxYjBhMjA4Y2Y3KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfY2ZkZTczNjQ2YWYzNDVmOWJiOTI0ZjYyYWEzZDNhMGYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogQ2hhcmxvdHRlLCAgTkMsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzljMTZlNDA0MjM1YzRjODdiZjEzYjJiNzQ3OWQzYzQ3ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuODkyMzY5OSwgLTc4Ljg3MTYwMzldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInllbGxvdyIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJ5ZWxsb3ciLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzRkZDhkNzUxMjRjMDQ4NzZiYWRkYjNiYjJjNTU0YzcwID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF81NzMzYTMyNDgyZjg0MThjYjkwYWM4ZDJhNDdhNzA4OCA9ICQoYDxkaXYgaWQ9Imh0bWxfNTczM2EzMjQ4MmY4NDE4Y2I5MGFjOGQyYTQ3YTcwODgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNGRkOGQ3NTEyNGMwNDg3NmJhZGRiM2JiMmM1NTRjNzAuc2V0Q29udGVudChodG1sXzU3MzNhMzI0ODJmODQxOGNiOTBhYzhkMmE0N2E3MDg4KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzljMTZlNDA0MjM1YzRjODdiZjEzYjJiNzQ3OWQzYzQ3LmJpbmRQb3B1cChwb3B1cF80ZGQ4ZDc1MTI0YzA0ODc2YmFkZGIzYmIyYzU1NGM3MCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzljMTZlNDA0MjM1YzRjODdiZjEzYjJiNzQ3OWQzYzQ3LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENpdHk6IEJ1ZmZhbG8sICBOWSwgIFVTIC0gQ291bnQ6IDEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNDU2MTIxZDMxM2UyNDU2M2IwMWZkNTA0MWQ3NDQ1ZjYgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMy40OTcxOTMyLCAtODYuNzkzMjQ4Nl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfODU4MGVhNzQ2ZmNhNDNkNGFmZmE0Njc2YTFiNGRkNmMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2JmZjA2OTc2ZThiNDQxMDRiMjEzMGRlNGJhMmFlMjk3ID0gJChgPGRpdiBpZD0iaHRtbF9iZmYwNjk3NmU4YjQ0MTA0YjIxMzBkZTRiYTJhZTI5NyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF84NTgwZWE3NDZmY2E0M2Q0YWZmYTQ2NzZhMWI0ZGQ2Yy5zZXRDb250ZW50KGh0bWxfYmZmMDY5NzZlOGI0NDEwNGIyMTMwZGU0YmEyYWUyOTcpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNDU2MTIxZDMxM2UyNDU2M2IwMWZkNTA0MWQ3NDQ1ZjYuYmluZFBvcHVwKHBvcHVwXzg1ODBlYTc0NmZjYTQzZDRhZmZhNDY3NmExYjRkZDZjKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNDU2MTIxZDMxM2UyNDU2M2IwMWZkNTA0MWQ3NDQ1ZjYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogQmlybWluZ2hhbSwgIEFMLCAgVVMgLSBDb3VudDogMQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV80MGM2NTlmNzE0ODE0MDNiODI0MzFkZmI1MGQ0Y2QwZCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM5LjMxODg0LCAtNzYuNjE5NV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAieWVsbG93IiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInllbGxvdyIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF8xNGU1M2U0YzkwYjk0OTBhOTEwNzE0MGM4MTk2NzVlMyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZTdjMzlhZDkyZjUxNDMwMmEyZTE2MWVkZjlkMzZmM2QgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2M2ZWQxMmE3NGQzYjQ1MGNiYWNkZmYwZDNhZjdkNzlkID0gJChgPGRpdiBpZD0iaHRtbF9jNmVkMTJhNzRkM2I0NTBjYmFjZGZmMGQzYWY3ZDc5ZCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9lN2MzOWFkOTJmNTE0MzAyYTJlMTYxZWRmOWQzNmYzZC5zZXRDb250ZW50KGh0bWxfYzZlZDEyYTc0ZDNiNDUwY2JhY2RmZjBkM2FmN2Q3OWQpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNDBjNjU5ZjcxNDgxNDAzYjgyNDMxZGZiNTBkNGNkMGQuYmluZFBvcHVwKHBvcHVwX2U3YzM5YWQ5MmY1MTQzMDJhMmUxNjFlZGY5ZDM2ZjNkKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNDBjNjU5ZjcxNDgxNDAzYjgyNDMxZGZiNTBkNGNkMGQuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2l0eTogQmFsdGltb3JlLCAgTUQsICBVUyAtIENvdW50OiAxCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lX2UyNTM3MDAzODc2YjQzNThiYzZjYTE5ODEyZGVmMDM3ID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbMjkuNzUyMTIsIC05NS4zNTQ2N10sIFszMC4yNjc0OSwgLTk3LjczNjA1XSwgWzMyLjc4NDYxLCAtOTYuNzg0NDJdLCBbMzMuNDk3MTkzMiwgLTg2Ljc5MzI0ODZdLCBbMzMuNzkyMDksIC04NC4zODhdLCBbNDEuNTA4MzIsIC04MS41ODAzXSwgWzQxLjUwMzM3LCAtODEuNjU0MTddLCBbNDIuMzIxNCwgLTgzLjA5MzY2XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiYmx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLjUsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfMTRlNTNlNGM5MGI5NDkwYTkxMDcxNDBjODE5Njc1ZTMpOwogICAgICAgIAo8L3NjcmlwdD4=\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a65932f90>"
      ]
     },
     "execution_count": 913,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def optimal_path(ts):\n",
    "    avg = 0\n",
    "    maxm = 0\n",
    "    cities = {}\n",
    "    #     print(len(list))\n",
    "    for t in ts:\n",
    "\n",
    "        if not isinstance(t, int):\n",
    "            for i,row in t.iterrows():\n",
    "                city = str(row[2]) + ', ' + str(row[3]) + ', ' + str(row[4])\n",
    "                if city not in cities.keys():\n",
    "                    cities[city] = [(row[5], row[6]), 1]\n",
    "                else:\n",
    "                    cities[city][1] += 1\n",
    "\n",
    "    lst = sorted(cities.items(), key = \n",
    "             lambda kv:(kv[1][1], kv[0]), reverse=True)\n",
    "\n",
    "    maxm = lst[0][1][1]\n",
    "    sl = []\n",
    "    for i in lst:\n",
    "        avg += i[1][1]\n",
    "        sl.append(i[1][1])\n",
    "\n",
    "    sd = statistics.stdev(sl)\n",
    "\n",
    "    avg = avg/len(lst)\n",
    "\n",
    "    green = []\n",
    "    lg = []\n",
    "    yellow = []\n",
    "    red = []\n",
    "\n",
    "    for i in lst:\n",
    "        count = i[1][1]\n",
    "        if (count >= avg + sd*1.5):\n",
    "            green.append(i[1][0])\n",
    "        elif (count >= avg):\n",
    "            lg.append(i[1][0])\n",
    "        elif (count >= avg - sd/2):\n",
    "            yellow.append(i[1][0])\n",
    "        else:\n",
    "            red.append(i[1][0])\n",
    "\n",
    "    final_points = green\n",
    "\n",
    "\n",
    "    def dist(x,y):\n",
    "        return math.hypot(y[0]-x[0],y[1]-x[1])\n",
    "\n",
    "    paths = [ p for p in it.permutations(final_points) ]\n",
    "    path_distances = [ sum(map(lambda x: dist(x[0],x[1]),zip(p[:-1],p[1:]))) for p in paths ]\n",
    "    min_index = numpy.argmin(path_distances)\n",
    "\n",
    "    print(str(paths[min_index]) + ' ' + str(path_distances[min_index]))\n",
    "\n",
    "    final_path = []\n",
    "\n",
    "    for i in paths[min_index]:\n",
    "        final_path.append(i)\n",
    "\n",
    "    print(final_path)\n",
    "\n",
    "    def add_fp(fp, l, std):\n",
    "        i = 0\n",
    "        while (i < len(l)):\n",
    "            if (l[i] not in fp):\n",
    "                for j in range(len(fp)-1):\n",
    "                    if ((dist(fp[j], l[i]) + dist(l[i], fp[j+1])) < (std*dist(fp[j], fp[j+1]))):\n",
    "                        if (l[i] not in fp):\n",
    "                            fp.insert(j+1, l[i])\n",
    "                            print(l[i])\n",
    "                            i = -1\n",
    "                        continue\n",
    "            i+=1\n",
    "\n",
    "        return fp\n",
    "\n",
    "    final_path = add_fp(final_path, lg, 1.5)\n",
    "    final_path = add_fp(final_path, yellow, 1.2)\n",
    "    final_path = add_fp(final_path, red, 1.05)\n",
    "\n",
    "    print(final_path)\n",
    "\n",
    "    m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "    count = 0\n",
    "    for k, v in lst:\n",
    "        color = ''\n",
    "        if (v[0] in green):\n",
    "            count+=1\n",
    "            color = 'green'\n",
    "        elif (v[0] in lg):\n",
    "            count+=1\n",
    "            color = 'lightgreen'\n",
    "        elif (v[0] in yellow):\n",
    "            count+=1\n",
    "            color = 'yellow'\n",
    "        elif (v[0] in red):\n",
    "            count+=1\n",
    "            color = 'red'\n",
    "        else:\n",
    "            print('oops')\n",
    "                \n",
    "        tooltip = 'City: ' + str(k) + ' - Count: ' + str(v[1])\n",
    "        folium.Circle([v[0][0], v[0][1]], radius = 8, color = color, fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "    folium.PolyLine(final_path, color='blue', weight=1, opacity=1.5).add_to(m)\n",
    "  \n",
    "    return m\n",
    "    \n",
    "optimal_path(ts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Three genres: Hip-hop, Rock, Country and Four regions each: Midwest, East, West, South\n",
    "\n",
    "Each pair of genre/region uses four or five artists that are from that area and under that genre.\n",
    "\n",
    "These artists are used as the root artists to find related artists to get a sample of performance data.\n",
    "\n",
    "Under each genre/region pair, there is:\n",
    "* a regression done on the tracts the venues are found in\n",
    "* plot of each artist's longest tour path from their past 50 shows\n",
    "* a plot of the optimal path an artist would take with color coded points to signify the quality of each stop\n",
    "    * Green: Shows > average + 1.5*sd\n",
    "    * light green: Shows > average\n",
    "    * Yellow: Shows > average - sd/2\n",
    "    * red: everything else "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Hip-hop"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "x1: (Black population)/(Total Population)\n",
    "\n",
    "x2: Median Age\n",
    "\n",
    "x3: Median Household Income"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Midwest (https://djbooth.net/features/2015-11-03-next-up-in-the-midwest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 922,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "56\n",
      "28\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "110\n",
      "78\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "65\n",
      "18\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "67\n",
      "23\n",
      "25017353101\n",
      "some other error\n",
      "censusgeocode error\n",
      "39049003200\n",
      "29095015800\n",
      "08031003701\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "53033008600\n",
      "17031330100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "37183052602\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "36047044900\n",
      "13121000500\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06037700501\n",
      "48113020400\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "13121000500\n",
      "censusgeocode error\n",
      "17031061100\n",
      "09003500100\n",
      "48113020400\n",
      "06073002201\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06083000900\n",
      "06037208502\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "53033010300\n",
      "08031001701\n",
      "04013218300\n",
      "censusgeocode error\n",
      "13121011900\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48201310100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "16027021100\n",
      "26163531900\n",
      "26163520800\n",
      "47157003400\n",
      "06037576001\n",
      "48453001100\n",
      "48029190200\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "25025000803\n",
      "16001000100\n",
      "censusgeocode error\n",
      "16019970501\n",
      "censusgeocode error\n",
      "30111000402\n",
      "46103010200\n",
      "38017000700\n",
      "27053106200\n",
      "censusgeocode error\n",
      "06075020100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "11001010200\n",
      "censusgeocode error\n",
      "48113020400\n",
      "53033004900\n",
      "06037212900\n",
      "55079007700\n",
      "55079014900\n",
      "06059074106\n",
      "06073005300\n",
      "13121003500\n",
      "06075022702\n",
      "censusgeocode error\n",
      "06087101000\n",
      "48201310900\n",
      "48453001100\n",
      "censusgeocode error\n",
      "32031002104\n",
      "06073005300\n",
      "35001002100\n",
      "04013421202\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "12095018900\n",
      "50\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.786\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.772\n",
      "Method:                 Least Squares   F-statistic:                              57.47\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    9.32e-16\n",
      "Time:                        18:37:20   Log-Likelihood:                         -50.004\n",
      "No. Observations:                  50   AIC:                                      106.0\n",
      "Df Residuals:                      47   BIC:                                      111.7\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1             0.0172      0.507      0.034      0.973      -1.003       1.037\n",
      "x2             0.0272      0.007      4.128      0.000       0.014       0.040\n",
      "x3          5.296e-06    3.2e-06      1.657      0.104   -1.13e-06    1.17e-05\n",
      "==============================================================================\n",
      "Omnibus:                       30.580   Durbin-Watson:                   1.252\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               59.508\n",
      "Skew:                           1.886   Prob(JB):                     1.20e-13\n",
      "Kurtosis:                       6.786   Cond. No.                     3.39e+05\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 3.39e+05. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['pat app', 'supakaine', 'Kweku Collins', 'IshDARR'], followers = 50000, demo = 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 923,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "56\n",
      "28\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "110\n",
      "78\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "65\n",
      "18\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "67\n",
      "23\n",
      "[('svrite', '7ySZXevcgRfQ8OBL76GMSz', 1, 33255), ('SavageRealm', '45FttOQCrPL5VgbEL0ZLr4', 1, 30231), ('Cheap Sober', '6TKh8NPpURP4w3olT22ZsF', 1, 21176), ('Huskii', '7uXoqYYwYwTUMF2zSF9Fwl', 1, 14133), ('Lil Satan', '27Xh7VTUnXXdQi5KrBG2H3', 1, 7069), ('TKO', '30yNK6ul4uCxHnK36GD1fg', 1, 21386), ('Tommy Ice', '3AUIYVmhwrsw8UOPHEv91Z', 1, 6088), ('Fortay', '1Uq8qjEeUUatM8X0hhNrOS', 1, 18810), ('Exl', '6j5lxsz5UsEHXTgkwVC4ie', 1, 1925), ('Mitchos Da Menace', '4N9eOW77jpcMTy4qt2smkg', 1, 8766), ('LNDN DRGS', '65d2Cw70rLuVwEZwQpHtFW', 3, 9808), ('Larry June', '1grN0519h2zYqpRtYbDZAl', 3, 30935), ('G-Worthy', '2mj0i1GD7RAKRs48paljmU', 2, 4933), ('Benny The Butcher', '5Matrg5du62bXwer29cU5T', 2, 36362), ('Kook the Kashcow', '5xLMcFqj6VUv6BQguguL0o', 2, 774), ('Streetlordz', '3bo1dDhj5zc2dvlD9HfmEa', 2, 2291), ('Street Lord Juan', '5MUg1llyqJS5NwnFURpWKI', 2, 884), ('Quentin Miller', '6po19E0R9xffrgzrg84TC9', 2, 24159), ('G Perico', '4Q2hTDZYFCohf17D5GvkIb', 2, 38651), ('Vdon', '2uzaOMszD2lvSWPKjaYaTq', 2, 5156), ('IshDARR', '1MlV4b7HGi4AiZWXholyVu', 4, 46054), ('Elujay', '1CgbNAF3Stnz1Tpipu3xdO', 4, 30981), ('ShaqIsDope', '3Is1kGaN2jmS0hB1Hn6dp4', 4, 22646), ('Childish Major', '4bMNzAopkqYTwkBLwMKsF1', 3, 43602), ('Sean Leon', '5dtbsNKCK6Q9yZzdhZpaqW', 3, 19720), ('Innanet James', '7p1KdHKrIDsXbiHnRNPOTG', 2, 17133), ('Khary', '4489Zgs4RNq2ZtSh3UnOxZ', 2, 28108), ('Dave B.', '5bfqwcEcRrMhtY9smw3IeJ', 2, 44719), ('Myke Bogan', '5BLrsIX3Uipmt9QAiZGYEl', 2, 14004), ('Lute', '75WcpJKWXBV3o3cfluWapK', 2, 41709), ('ShaqIsDope', '3Is1kGaN2jmS0hB1Hn6dp4', 5, 22646), ('Demrick', '3hEgzEeaZ0hb3UXx1U1JRR', 4, 21640), ('Sean Leon', '5dtbsNKCK6Q9yZzdhZpaqW', 4, 19720), ('IshDARR', '1MlV4b7HGi4AiZWXholyVu', 4, 46054), ('Elujay', '1CgbNAF3Stnz1Tpipu3xdO', 4, 30981), ('Anfa Rose', '6QyD04sHvKf1AjxkXrNRk1', 3, 31063), ('Childish Major', '4bMNzAopkqYTwkBLwMKsF1', 3, 43602), ('Quentin Miller', '6po19E0R9xffrgzrg84TC9', 3, 24159), ('Gyyps', '6yrnKnj4fIE0RlanJ1iFTI', 2, 18721), ('Michael Christmas', '1POk07q5vJ4NcdOgkLyPzp', 2, 38633)]\n",
      "34\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a6ed79050>"
      ]
     },
     "execution_count": 923,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tours = compile_tours(names = ['pat app', 'supakaine', 'Kweku Collins', 'IshDARR'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 924,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "((47.61401, -122.32004), (39.7404, -104.94842), (32.78461, -96.78442), (30.2402902, -97.7285281), (29.7521221, -95.3546736), (33.76423, -84.35023), (41.93966, -87.66365), (42.33781, -83.05173), (38.9223987, -77.0422671), (39.9589828, -75.1502637)) 69.16844660639471\n",
      "[(47.61401, -122.32004), (39.7404, -104.94842), (32.78461, -96.78442), (30.2402902, -97.7285281), (29.7521221, -95.3546736), (33.76423, -84.35023), (41.93966, -87.66365), (42.33781, -83.05173), (38.9223987, -77.0422671), (39.9589828, -75.1502637)]\n",
      "(33.44995, -112.07405)\n",
      "(33.69984, -117.91945)\n",
      "(34.0487, -118.2337)\n",
      "(37.76653, -122.43049)\n",
      "(29.425672, -98.4769759)\n",
      "(45.51757, -122.65533)\n",
      "(41.50832, -81.5803)\n",
      "(34.09071, -118.38797)\n",
      "(36.972, -122.026)\n",
      "(34.416277, -119.6950933)\n",
      "(38.56998, -121.49069)\n",
      "(38.99748, -77.02793)\n",
      "(32.753815, -117.209272)\n",
      "(37.80775, -122.2727)\n",
      "(37.86635, -122.26712)\n",
      "(29.93356, -90.07001)\n",
      "(41.50337, -81.65417)\n",
      "(33.42348, -111.85902)\n",
      "(34.06194, -118.30884)\n",
      "(39.75192, -86.14008)\n",
      "(44.051208, -123.097057)\n",
      "(39.31884, -76.6195)\n",
      "[(47.61401, -122.32004), (45.51757, -122.65533), (44.051208, -123.097057), (38.56998, -121.49069), (37.80775, -122.2727), (37.86635, -122.26712), (36.972, -122.026), (37.76653, -122.43049), (34.416277, -119.6950933), (34.09071, -118.38797), (34.06194, -118.30884), (33.69984, -117.91945), (34.0487, -118.2337), (32.753815, -117.209272), (33.44995, -112.07405), (33.42348, -111.85902), (39.7404, -104.94842), (29.425672, -98.4769759), (32.78461, -96.78442), (30.2402902, -97.7285281), (29.7521221, -95.3546736), (29.93356, -90.07001), (33.76423, -84.35023), (39.75192, -86.14008), (41.93966, -87.66365), (42.33781, -83.05173), (41.50337, -81.65417), (41.50832, -81.5803), (38.99748, -77.02793), (38.9223987, -77.0422671), (39.31884, -76.6195), (39.9589828, -75.1502637)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a94909d90>"
      ]
     },
     "execution_count": 924,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### West (https://djbooth.net/features/2017-08-22-west-coast-rappers-california-torch)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 819,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "79\n",
      "41\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "40\n",
      "17\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "69\n",
      "42\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "93\n",
      "55\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "76\n",
      "42\n",
      "25017353101\n",
      "17031062800\n",
      "censusgeocode error\n",
      "29095015800\n",
      "08031003701\n",
      "49035101900\n",
      "censusgeocode error\n",
      "53033007500\n",
      "06037207710\n",
      "06073005300\n",
      "06001402800\n",
      "53033005301\n",
      "08031002403\n",
      "censusgeocode error\n",
      "17031221500\n",
      "09009361402\n",
      "06067001200\n",
      "06023011500\n",
      "04013114100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "19103002100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "17031330100\n",
      "48453000902\n",
      "36047055700\n",
      "11001003800\n",
      "36047003300\n",
      "36061019800\n",
      "censusgeocode error\n",
      "06075017802\n",
      "censusgeocode error\n",
      "36047044900\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06037700501\n",
      "06075020100\n",
      "48113020400\n",
      "48201310100\n",
      "censusgeocode error\n",
      "42101037600\n",
      "51660000302\n",
      "06073002201\n",
      "04019000400\n",
      "04005001200\n",
      "06083000900\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06037190201\n",
      "06037121210\n",
      "06059074106\n",
      "06073006500\n",
      "32003002604\n",
      "06087101000\n",
      "06075012000\n",
      "06111002400\n",
      "36061003100\n",
      "censusgeocode error\n",
      "12095018900\n",
      "censusgeocode error\n",
      "08031003500\n",
      "17031070300\n",
      "39035108701\n",
      "26163522500\n",
      "42101014200\n",
      "11001010200\n",
      "censusgeocode error\n",
      "39035141100\n",
      "13121003000\n",
      "48201310100\n",
      "13121003500\n",
      "censusgeocode error\n",
      "36047030500\n",
      "48453001100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "36061003001\n",
      "24510040100\n",
      "censusgeocode error\n",
      "11001004400\n",
      "42101015800\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "36047011900\n",
      "censusgeocode error\n",
      "25025000703\n",
      "25025010701\n",
      "33015069300\n",
      "25017352700\n",
      "41039003900\n",
      "33015065008\n",
      "06073005300\n",
      "06059074106\n",
      "censusgeocode error\n",
      "36047054900\n",
      "censusgeocode error\n",
      "36081055300\n",
      "36061003602\n",
      "19103002100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "08031001600\n",
      "censusgeocode error\n",
      "47037019500\n",
      "17031220902\n",
      "censusgeocode error\n",
      "26081002000\n",
      "26065004100\n",
      "26081002600\n",
      "25017353101\n",
      "20045000200\n",
      "36061005700\n",
      "42101001600\n",
      "39035107701\n",
      "censusgeocode error\n",
      "04013113100\n",
      "48453001100\n",
      "06071001002\n",
      "06037191301\n",
      "censusgeocode error\n",
      "06059011300\n",
      "36047051900\n",
      "13121000500\n",
      "06067001400\n",
      "censusgeocode error\n",
      "06067001101\n",
      "36047055500\n",
      "36061009900\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06067001300\n",
      "13121003500\n",
      "48453001100\n",
      "06037600703\n",
      "32003002604\n",
      "06037700501\n",
      "06073008305\n",
      "06001402900\n",
      "censusgeocode error\n",
      "20173009511\n",
      "36061008300\n",
      "censusgeocode error\n",
      "36061004200\n",
      "12057002900\n",
      "29189214602\n",
      "48453000401\n",
      "48029110100\n",
      "48113015304\n",
      "48453001911\n",
      "36061003002\n",
      "06037190100\n",
      "36047055500\n",
      "06037576001\n",
      "48453001100\n",
      "48029190200\n",
      "48201210400\n",
      "27053104400\n",
      "25025000803\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "17031410900\n",
      "27123034201\n",
      "26163522400\n",
      "26081002000\n",
      "censusgeocode error\n",
      "113\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.764\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.757\n",
      "Method:                 Least Squares   F-statistic:                              118.6\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    2.50e-34\n",
      "Time:                        12:30:51   Log-Likelihood:                         -122.76\n",
      "No. Observations:                 113   AIC:                                      251.5\n",
      "Df Residuals:                     110   BIC:                                      259.7\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1            -0.2077      0.399     -0.521      0.604      -0.998       0.583\n",
      "x2             0.0325      0.005      6.890      0.000       0.023       0.042\n",
      "x3          3.488e-06   1.94e-06      1.797      0.075   -3.58e-07    7.33e-06\n",
      "==============================================================================\n",
      "Omnibus:                       71.619   Durbin-Watson:                   1.725\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              280.964\n",
      "Skew:                           2.330   Prob(JB):                     9.76e-62\n",
      "Kurtosis:                       9.161   Cond. No.                     4.18e+05\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 4.18e+05. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['Dumbfoundead', 'Duckwrth', 'Trizz', 'Ill Camille', 'Chuuwee'], followers = 50000, demo = 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 925,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "79\n",
      "41\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "40\n",
      "17\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "69\n",
      "42\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "94\n",
      "55\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "76\n",
      "42\n",
      "[('Ovan', '4FuRHFtCeoYaeeVDKyyvbS', 4, 18628), ('Crucial Star', '4vdAgNz4vrUZVvS0CaVvGJ', 4, 34009), ('2xxx!', '4cMtnnGdRvh8KIi2RA7ZeU', 3, 17175), ('Rad Museum', '6UdKtISMXYKSR8jcgtFePo', 3, 37688), ('The Quiett', '2qI1pO64eYqGUiv1XTw4cy', 3, 39270), ('DJ DOC', '3kDgt4vVKGTLmtC3FkOwWF', 2, 5132), ('NELL', '5WY88tCMFA6J6vqSN3MmDZ', 2, 31045), ('Outsider', '1i4Y4WlFFetQV14Z8UDdvr', 2, 5273), ('Jvcki Wai', '4bjcB3ZKiHgPzJvY2S2FLN', 2, 22970), ('HAON', '2krUNMgFZYm5s4Nn0g91W9', 2, 43879), ('Elujay', '1CgbNAF3Stnz1Tpipu3xdO', 4, 30981), ('Childish Major', '4bMNzAopkqYTwkBLwMKsF1', 3, 43602), ('Dave B.', '5bfqwcEcRrMhtY9smw3IeJ', 2, 44719), ('100 gecs', '6PfSUFtkMVoDkx4MQkzOi3', 2, 25356), ('Zelooperz', '5j93hwFBNo29RJMsWvtzj8', 2, 9906), ('Anonymuz', '625BWS4LmjJe3a82OCSFsm', 1, 25425), ('Kweku Collins', '2SPt3i9sJKS1qiMQQQr9LS', 1, 40836), ('Michael Christmas', '1POk07q5vJ4NcdOgkLyPzp', 1, 38633), ('Topaz Jones', '76bAuLD5jMIT1YDJ84KB8l', 1, 33033), ('Tabby', '2Yp114orhinD5W0DioIKER', 1, 12706), ('ShaqIsDope', '3Is1kGaN2jmS0hB1Hn6dp4', 5, 22646), ('Derin Falana', '5yjfk1YZOcpDKqLEgvE9WG', 5, 10096), ('Quentin Miller', '6po19E0R9xffrgzrg84TC9', 4, 24159), ('Demrick', '3hEgzEeaZ0hb3UXx1U1JRR', 4, 21640), ('Sean Leon', '5dtbsNKCK6Q9yZzdhZpaqW', 4, 19720), ('IshDARR', '1MlV4b7HGi4AiZWXholyVu', 3, 46054), ('Kyle Bent', '2c8n0uEGtZxolOWtE1dySR', 3, 12392), ('DillanPonders', '1TlmLsx42aT281z8NWrKef', 3, 6107), ('Sahtyre', '1ZHmdzn0KzjEICyi9v6oDU', 2, 4176), ('CJay', '5nJCXAh5NRTz0yAZWMJGYM', 2, 8615), ('Skyzoo', '0qHfqHyHZnxvv1lfkJraQc', 7, 38040), ('Tall Black Guy', '2bz6GlqjAN5fTFWvy0rmSP', 6, 25911), ('Illa J', '72zigmOdJbIsz0iIRhCBvp', 6, 47631), ('Taylor McFerrin', '0yLmsf6RBPYqm6hvFJCPg6', 5, 43152), ('Eric Lau', '68P6JiHWJsv5VqfLPchS1n', 5, 21682), ('Fatima', '5uNCGgWH5Id1cW8kh9Sc67', 5, 28127), ('Slakah The Beatchild', '3ecInXeVEuySk8y1AYFA74', 5, 20793), ('Georgia Anne Muldrow', '2RdnkH5txHb9c4vGwq0I31', 5, 31015), ('Damu The Fudgemunk', '7Mws36yO3takBR2WMsXOkM', 5, 35105), ('Potatohead People', '2lmWYYMM80tsoDES4aUB1m', 4, 13834), ('Willie The Kid', '0hZvVmOluFCV1ZjvvqtRB6', 4, 14259), ('IshDARR', '1MlV4b7HGi4AiZWXholyVu', 4, 46054), ('ShaqIsDope', '3Is1kGaN2jmS0hB1Hn6dp4', 3, 22646), ('Trademark Da Skydiver', '2RPgvowoS8BYurtbUjwKjt', 3, 36987), ('Skeme', '6TlLdicGl92pqnySP64n2g', 3, 34984), ('Warm Brew', '51YACffgZvQwjs8J4ZVDQF', 3, 22387), ('Roc Marciano', '5X0V59ipZnbvnubW0rQVri', 3, 46411), ('Elujay', '1CgbNAF3Stnz1Tpipu3xdO', 2, 30981), ('Le$', '7rikNLN4AV6SQn9ryQFaMw', 2, 29021), ('Wiki', '78X7quh8fqAGZ42OpLmUW0', 2, 20648)]\n",
      "47\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a6779fd90>"
      ]
     },
     "execution_count": 925,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tours = compile_tours(names = ['Dumbfoundead', 'Duckwrth', 'Trizz', 'Ill Camille', 'Chuuwee'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 926,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "((40.73492, -73.98845), (39.95898, -75.15028), (38.9223987, -77.0422671), (33.76423, -84.35023), (42.33781, -83.05173), (41.93966, -87.66365), (39.7404, -104.94842), (34.0487, -118.2337)) 57.677175181224875\n",
      "[(40.73492, -73.98845), (39.95898, -75.15028), (38.9223987, -77.0422671), (33.76423, -84.35023), (42.33781, -83.05173), (41.93966, -87.66365), (39.7404, -104.94842), (34.0487, -118.2337)]\n",
      "(33.69984, -117.91945)\n",
      "(40.7638, -111.87653)\n",
      "(33.44995, -112.07405)\n",
      "(40.72216, -73.98671)\n",
      "(35.23942, -80.84584)\n",
      "(40.70948, -73.92319)\n",
      "(32.71636, -117.15961)\n",
      "(34.06194, -118.30884)\n",
      "(39.09501, -94.58154)\n",
      "(34.09071, -118.38797)\n",
      "(40.72845, -74.00512)\n",
      "(39.96945, -83.00999)\n",
      "(37.6860826, -97.3281656)\n",
      "(38.633771, -90.2170314)\n",
      "(38.99748, -77.02793)\n",
      "(38.3009, -77.4591)\n",
      "(33.43689, -111.94373)\n",
      "(39.7995912, -89.6497955)\n",
      "(38.600789, -90.175798)\n",
      "(33.4221642, -111.859035)\n",
      "(33.74096, -84.34593)\n",
      "(35.910267, -79.068915)\n",
      "[(40.73492, -73.98845), (40.72216, -73.98671), (40.70948, -73.92319), (40.72845, -74.00512), (39.95898, -75.15028), (38.99748, -77.02793), (38.9223987, -77.0422671), (38.3009, -77.4591), (35.910267, -79.068915), (35.23942, -80.84584), (33.74096, -84.34593), (33.76423, -84.35023), (39.96945, -83.00999), (42.33781, -83.05173), (41.93966, -87.66365), (39.7995912, -89.6497955), (38.633771, -90.2170314), (38.600789, -90.175798), (39.09501, -94.58154), (37.6860826, -97.3281656), (39.7404, -104.94842), (40.7638, -111.87653), (33.4221642, -111.859035), (33.43689, -111.94373), (33.44995, -112.07405), (32.71636, -117.15961), (33.69984, -117.91945), (34.09071, -118.38797), (34.06194, -118.30884), (34.0487, -118.2337)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a4252bbd0>"
      ]
     },
     "execution_count": 926,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### East Coast (https://www.complex.com/music/2018/05/underground-rappers-you-should-know/dark-lo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 821,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "107\n",
      "54\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "130\n",
      "38\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "127\n",
      "41\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "127\n",
      "40\n",
      "censusgeocode error\n",
      "36055003300\n",
      "25017353101\n",
      "23005000100\n",
      "censusgeocode error\n",
      "50015953600\n",
      "04013106600\n",
      "06037700501\n",
      "06037207710\n",
      "censusgeocode error\n",
      "06001402800\n",
      "53033005301\n",
      "08031002403\n",
      "27053104400\n",
      "censusgeocode error\n",
      "09009361402\n",
      "13089020900\n",
      "06059075002\n",
      "06019000300\n",
      "06019000600\n",
      "06019004408\n",
      "12086002800\n",
      "06037219901\n",
      "22071007700\n",
      "censusgeocode error\n",
      "27123034201\n",
      "26163522400\n",
      "censusgeocode error\n",
      "39049001820\n",
      "36061012500\n",
      "17031061100\n",
      "27053106200\n",
      "censusgeocode error\n",
      "06037212900\n",
      "42101037600\n",
      "11001004801\n",
      "censusgeocode error\n",
      "42101014400\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06075020100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48113020400\n",
      "censusgeocode error\n",
      "48201310100\n",
      "13121000500\n",
      "37119004900\n",
      "09003500100\n",
      "48113020400\n",
      "censusgeocode error\n",
      "34021002100\n",
      "25017353101\n",
      "39153505700\n",
      "06071001002\n",
      "36061007900\n",
      "08031003001\n",
      "25027731202\n",
      "36061003001\n",
      "24510040100\n",
      "censusgeocode error\n",
      "11001004400\n",
      "censusgeocode error\n",
      "36047044900\n",
      "51760040200\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "24033807200\n",
      "51760030200\n",
      "37183050100\n",
      "37119001300\n",
      "36061008300\n",
      "32003006800\n",
      "06037195803\n",
      "27053104400\n",
      "47037016500\n",
      "censusgeocode error\n",
      "26065006600\n",
      "26081002000\n",
      "26065004100\n",
      "26081002600\n",
      "20045000200\n",
      "36061005700\n",
      "42101001600\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "62\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.803\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.793\n",
      "Method:                 Least Squares   F-statistic:                              80.27\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    8.33e-21\n",
      "Time:                        12:38:23   Log-Likelihood:                         -62.385\n",
      "No. Observations:                  62   AIC:                                      130.8\n",
      "Df Residuals:                      59   BIC:                                      137.2\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1            -0.2158      0.453     -0.477      0.635      -1.121       0.690\n",
      "x2             0.0416      0.004     10.893      0.000       0.034       0.049\n",
      "x3         -3.171e-10   1.02e-09     -0.311      0.757   -2.36e-09    1.72e-09\n",
      "==============================================================================\n",
      "Omnibus:                       14.524   Durbin-Watson:                   2.129\n",
      "Prob(Omnibus):                  0.001   Jarque-Bera (JB):               16.063\n",
      "Skew:                           1.185   Prob(JB):                     0.000325\n",
      "Kurtosis:                       3.777   Cond. No.                     4.45e+08\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 4.45e+08. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['Mach-Hommy', 'Tha God Fahim', 'Crimeapple', 'Al Divino', 'Dark Lo'], followers = 50000, demo = 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 927,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "107\n",
      "54\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "130\n",
      "38\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "127\n",
      "41\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "127\n",
      "40\n",
      "[('Planet Asia', '7dGfoIWAb0h9eGpl3vEkVo', 4, 28608), ('Skyzoo', '0qHfqHyHZnxvv1lfkJraQc', 4, 38040), ('DJ Muggs', '7pDkjftAxiFHomWsPNkapS', 4, 29831), ('Zelooperz', '5j93hwFBNo29RJMsWvtzj8', 3, 9906), ('Ras Kass', '0OiS4KHxViIFnJooFTXl7V', 3, 38770), ('Termanology', '7oF48iRjggIDjtfRcmmMvl', 3, 23662), ('Armand Hammer', '3SCI7sXHUZIeDKMWC5NT9C', 3, 9917), ('Havoc', '6UnvX7Zx85VNjOpLdaq49W', 3, 46181), ('Westside Gunn', '0ABk515kENDyATUdpCKVfW', 3, 48445), ('Elzhi', '6OwOuTjrLVrlMH1nxxIjbT', 3, 42903), ('Skyzoo', '0qHfqHyHZnxvv1lfkJraQc', 4, 38040), ('Westside Gunn', '0ABk515kENDyATUdpCKVfW', 4, 48445), ('Benny The Butcher', '5Matrg5du62bXwer29cU5T', 4, 36362), ('Conway the Machine', '67gqUXxHedeUGDTxwBzdjS', 3, 38747), (\"Mr. Muthafuckin' eXquire\", '1Sq6VkcHqHAuFvURbH3sXQ', 3, 12186), ('Roc Marciano', '5X0V59ipZnbvnubW0rQVri', 3, 46411), ('38 Spesh', '32cT1WQRSDg4xsReG7eqyT', 2, 7566), ('Fly Anakin', '5WybyjV2fRyRQcJrmmiifF', 2, 3695), ('Willie The Kid', '0hZvVmOluFCV1ZjvvqtRB6', 2, 14259), ('Wiki', '78X7quh8fqAGZ42OpLmUW0', 2, 20648), ('Skyzoo', '0qHfqHyHZnxvv1lfkJraQc', 4, 38040), ('Westside Gunn', '0ABk515kENDyATUdpCKVfW', 4, 48445), ('Benny The Butcher', '5Matrg5du62bXwer29cU5T', 4, 36362), ('Conway the Machine', '67gqUXxHedeUGDTxwBzdjS', 3, 38747), (\"Mr. Muthafuckin' eXquire\", '1Sq6VkcHqHAuFvURbH3sXQ', 3, 12186), ('Roc Marciano', '5X0V59ipZnbvnubW0rQVri', 3, 46411), ('38 Spesh', '32cT1WQRSDg4xsReG7eqyT', 2, 7566), ('Fly Anakin', '5WybyjV2fRyRQcJrmmiifF', 2, 3695), ('Willie The Kid', '0hZvVmOluFCV1ZjvvqtRB6', 2, 14259), ('Wiki', '78X7quh8fqAGZ42OpLmUW0', 2, 20648), ('Skyzoo', '0qHfqHyHZnxvv1lfkJraQc', 4, 38040), ('Westside Gunn', '0ABk515kENDyATUdpCKVfW', 4, 48445), ('Benny The Butcher', '5Matrg5du62bXwer29cU5T', 4, 36362), ('Termanology', '7oF48iRjggIDjtfRcmmMvl', 3, 23662), ('Conway the Machine', '67gqUXxHedeUGDTxwBzdjS', 3, 38747), ('Roc Marciano', '5X0V59ipZnbvnubW0rQVri', 3, 46411), ('38 Spesh', '32cT1WQRSDg4xsReG7eqyT', 2, 7566), ('Fly Anakin', '5WybyjV2fRyRQcJrmmiifF', 2, 3695), ('Willie The Kid', '0hZvVmOluFCV1ZjvvqtRB6', 2, 14259), ('Dark Lo', '6Afg12eQ1Xu2O4ugWDhDcU', 2, 6398)]\n",
      "19\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a668ea610>"
      ]
     },
     "execution_count": 927,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tours = compile_tours(names = ['Mach-Hommy', 'Tha God Fahim', 'Crimeapple', 'Al Divino', 'Dark Lo'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 928,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "((44.97827, -93.27608), (41.91856, -87.69003), (39.98588, -83.00542), (39.9589828, -75.1502637), (40.73492, -73.98845), (42.363697, -71.1013086)) 24.003945483240916\n",
      "[(44.97827, -93.27608), (41.91856, -87.69003), (39.98588, -83.00542), (39.9589828, -75.1502637), (40.73492, -73.98845), (42.363697, -71.1013086)]\n",
      "(40.4605154, -79.9252391)\n",
      "(42.991245, -71.462996)\n",
      "(38.91527, -77.0211)\n",
      "(44.94612, -93.0956)\n",
      "(40.71936, -73.93878)\n",
      "(42.35211, -71.11942)\n",
      "(41.816017, -71.443376)\n",
      "(40.73177, -73.98911)\n",
      "(41.31157, -72.92936)\n",
      "(40.7284492, -74.0051241)\n",
      "(43.0797373, -89.3764856)\n",
      "(40.71583, -74.06854)\n",
      "(38.98144, -76.93828)\n",
      "[(44.97827, -93.27608), (44.94612, -93.0956), (43.0797373, -89.3764856), (41.91856, -87.69003), (39.98588, -83.00542), (40.4605154, -79.9252391), (38.98144, -76.93828), (38.91527, -77.0211), (39.9589828, -75.1502637), (40.71583, -74.06854), (40.7284492, -74.0051241), (40.73177, -73.98911), (40.71936, -73.93878), (40.73492, -73.98845), (41.31157, -72.92936), (41.816017, -71.443376), (42.35211, -71.11942), (42.991245, -71.462996), (42.363697, -71.1013086)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a64eaab10>"
      ]
     },
     "execution_count": 928,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### South (https://www.complex.com/music/2018/05/underground-rappers-you-should-know/dark-lo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 825,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "121\n",
      "75\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "105\n",
      "75\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "42\n",
      "33\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "66\n",
      "47\n",
      "36081055900\n",
      "42101038300\n",
      "25017353101\n",
      "25017353101\n",
      "53033006600\n",
      "13121010304\n",
      "12057003600\n",
      "12095018900\n",
      "12099007759\n",
      "censusgeocode error\n",
      "13121006500\n",
      "12086000501\n",
      "48201230200\n",
      "48113020400\n",
      "censusgeocode error\n",
      "12086002004\n",
      "06037207302\n",
      "51019030103\n",
      "06073019303\n",
      "censusgeocode error\n",
      "12086002300\n",
      "06037212900\n",
      "06037700501\n",
      "48201310100\n",
      "06037195803\n",
      "11001004801\n",
      "08001009308\n",
      "32003001200\n",
      "04013421400\n",
      "censusgeocode error\n",
      "35001002100\n",
      "06037206050\n",
      "04013421400\n",
      "13121003100\n",
      "13121006500\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "13245010104\n",
      "36047022100\n",
      "12057010213\n",
      "39017014000\n",
      "censusgeocode error\n",
      "39165031904\n",
      "censusgeocode error\n",
      "39017010909\n",
      "39061023100\n",
      "13121009700\n",
      "12031002502\n",
      "censusgeocode error\n",
      "06075020700\n",
      "06073005200\n",
      "04013061020\n",
      "32003003411\n",
      "51540000401\n",
      "32031002104\n",
      "06037212900\n",
      "06037208000\n",
      "25027731500\n",
      "06037226001\n",
      "53033022500\n",
      "48113001900\n",
      "48201211400\n",
      "censusgeocode error\n",
      "22071013400\n",
      "28049000200\n",
      "01097000200\n",
      "censusgeocode error\n",
      "13121009700\n",
      "12011031001\n",
      "censusgeocode error\n",
      "48201210100\n",
      "32003006700\n",
      "censusgeocode error\n",
      "16001000100\n",
      "censusgeocode error\n",
      "04013421202\n",
      "04019000100\n",
      "06037207301\n",
      "11001003800\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "17031081600\n",
      "06075015900\n",
      "censusgeocode error\n",
      "12086004500\n",
      "06059086303\n",
      "48085030504\n",
      "12086004000\n",
      "08041002101\n",
      "censusgeocode error\n",
      "12095018900\n",
      "47065003100\n",
      "48453001100\n",
      "17031330100\n",
      "17031150200\n",
      "36081047900\n",
      "36059412100\n",
      "36047048500\n",
      "36081098100\n",
      "51660000402\n",
      "censusgeocode error\n",
      "06067001400\n",
      "06075020100\n",
      "41051010600\n",
      "08031001701\n",
      "55079007700\n",
      "55079014900\n",
      "censusgeocode error\n",
      "06073005300\n",
      "06075017802\n",
      "06067001300\n",
      "13121003500\n",
      "41039003900\n",
      "32003002302\n",
      "55079007800\n",
      "30111000402\n",
      "37119005838\n",
      "12095017017\n",
      "25025090200\n",
      "25017339100\n",
      "42133021720\n",
      "39035107802\n",
      "42049011202\n",
      "39049009740\n",
      "98\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.743\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.735\n",
      "Method:                 Least Squares   F-statistic:                              91.37\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    6.80e-28\n",
      "Time:                        13:01:18   Log-Likelihood:                         -107.75\n",
      "No. Observations:                  98   AIC:                                      221.5\n",
      "Df Residuals:                      95   BIC:                                      229.3\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1             0.4509      0.337      1.340      0.183      -0.217       1.119\n",
      "x2             0.0211      0.005      4.661      0.000       0.012       0.030\n",
      "x3          5.671e-06   2.15e-06      2.640      0.010    1.41e-06    9.93e-06\n",
      "==============================================================================\n",
      "Omnibus:                       98.767   Durbin-Watson:                   2.178\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1136.288\n",
      "Skew:                           3.316   Prob(JB):                    1.81e-247\n",
      "Kurtosis:                      18.307   Cond. No.                     3.17e+05\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 3.17e+05. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['D Flowers', 'AJ McQueen', 'Lajan Slim', 'Stunna 4 Vegas', 'Deniro Farrar'], followers = 50000, demo = 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 929,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "121\n",
      "75\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "105\n",
      "75\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "42\n",
      "33\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "66\n",
      "47\n",
      "[('Fedel', '7EWlStyJsdfPvz0xeGBgTy', 3, 7654), ('Mouthpi3ce', '5ccLg9PXtgNpXdkIzw7Pvw', 3, 3457), ('K-Drama', '1PXBwNCd6LaX8iJTDwdC30', 3, 10321), ('R-Swift', '7gZ8kNeMcOD0Fm4b9xyOLX', 3, 9473), ('Reconcile', '205ryRzLS0HTtASNep0wUm', 3, 11851), (\"Thi'sl\", '1Q45nhioxaxZTDjR0iaMWp', 3, 37748), ('Eshon Burgundy', '25VsRrXJg8wvvMSSVwmp8E', 2, 18219), ('TROSSTHEGIANT', '5HKaZWBzfZBZB11RTHL59q', 2, 2295), ('DJ Mykael V', '2WLOBjz9WOZrJcbS2w93zt', 2, 3682), ('Tragic Hero', '7gUNq0zUUogOGNmuKgdk3B', 2, 5939), ('Derin Falana', '5yjfk1YZOcpDKqLEgvE9WG', 3, 10096), ('ShaqIsDope', '3Is1kGaN2jmS0hB1Hn6dp4', 3, 22646), ('Sosamann', '3Bj81IbILbuj2uEwWXMdXI', 3, 17815), ('Shad Da God', '2z1ZZSBRCNYjOZmUcA3rSQ', 3, 15083), ('Jackboy', '2S2mt1DiA4QKdKvtqwxrbB', 3, 41870), ('Tdot illdude', '4gcBXAL1iwHPIrf1LdVsKg', 3, 9723), ('SG Tip', '6wtgjn8ZMo8Y9d0iddh35i', 3, 19253), ('Johnny Cinco', '0RGwDw7utw9jyhSf2TySBv', 3, 48541), ('Zoey Dollaz', '39Uhf21aJFjMLus1j0YGT8', 3, 36351), ('Euroz', '23qSMYgeDsJv22G2rNLVgy', 2, 11116), ('Doe Boy', '6aLoJJxz7MV2iZ423S8tJC', 5, 31060), ('Shad Da God', '2z1ZZSBRCNYjOZmUcA3rSQ', 3, 15083), ('Jackboy', '2S2mt1DiA4QKdKvtqwxrbB', 3, 41870), ('SG Tip', '6wtgjn8ZMo8Y9d0iddh35i', 3, 19253), ('Z Money', '5LXsuGg5SkeZgdrMdCH41B', 3, 22506), ('Johnny Cinco', '0RGwDw7utw9jyhSf2TySBv', 3, 48541), ('Slimesito', '1fqzcp3dzZD1YGQ2RT5pYs', 2, 10826), ('TisaKorean', '6lEhBhAv6HOopjXssi09cq', 2, 12765), ('Luh Soldier', '4FtoEJgiU9Hr5Xsn6nD1Wq', 2, 12792), ('Soldier Kidd', '7BA072InWOjB1X7MZGOloy', 2, 34692), ('ShaqIsDope', '3Is1kGaN2jmS0hB1Hn6dp4', 5, 22646), ('Sean Leon', '5dtbsNKCK6Q9yZzdhZpaqW', 4, 19720), ('Idontknowjeffery', '7Fx7ZCiOsh5eVpFuK25VD6', 4, 21650), ('Black Smurf', '0roRnStSzF1uet2JvSM6U3', 4, 37055), ('J.K. The Reaper', '2ZxCpSYvQCHvYSxwr5mMUm', 3, 35777), ('IshDARR', '1MlV4b7HGi4AiZWXholyVu', 3, 46054), ('gizmo', '0uya6QELbHSc91t24xHUr1', 3, 40422), ('Cameron Azi', '6eGuRZs8HIfjgRPPkkD0Af', 3, 30127), ('Da$H', '6xFrZbce9KH5APjBe4QVNa', 3, 19113), ('Retch', '4Jx84VBxI1tR2KGPNRFH9l', 3, 18247)]\n",
      "35\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a89c31450>"
      ]
     },
     "execution_count": 929,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tours = compile_tours(names = ['D Flowers', 'AJ McQueen', 'Lajan Slim', 'Stunna 4 Vegas', 'Deniro Farrar'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 930,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "((47.6134145, -122.3443283), (45.5118718, -122.6229791), (39.7535064, -104.9953172), (32.78607, -96.7756), (29.82511, -95.30319), (40.7315474, -73.9891966), (42.363697, -71.1013086)) 62.00609307760155\n",
      "[(47.6134145, -122.3443283), (45.5118718, -122.6229791), (39.7535064, -104.9953172), (32.78607, -96.7756), (29.82511, -95.30319), (40.7315474, -73.9891966), (42.363697, -71.1013086)]\n",
      "(32.2236033, -110.9562453)\n",
      "(40.7143, -73.95587)\n",
      "(27.96605, -82.41031)\n",
      "(39.9522059, -75.185114)\n",
      "(28.54135, -81.37992)\n",
      "(33.4221642, -111.859035)\n",
      "(30.2670974, -97.7363767)\n",
      "(33.72403, -84.41692)\n",
      "(34.0815247, -118.3891802)\n",
      "(38.9223987, -77.0422671)\n",
      "(36.7686679, -76.1019623)\n",
      "(40.9016615, -74.005009)\n",
      "(33.5891372, -112.1514437)\n",
      "(37.7952, -122.228)\n",
      "(34.04698, -118.2478)\n",
      "(41.4917338, -72.0909173)\n",
      "(33.4577445, -111.9081615)\n",
      "(36.972, -122.026)\n",
      "(34.416277, -119.6950933)\n",
      "(37.7631445, -122.4229747)\n",
      "(40.69455, -73.90231)\n",
      "(40.7154, -73.91468)\n",
      "(34.1913, -119.182)\n",
      "(29.95601, -90.07398)\n",
      "(30.69064, -88.04227)\n",
      "(34.0840136, -118.2741873)\n",
      "(33.9172, -118.012)\n",
      "(30.3239248, -81.6373228)\n",
      "(41.35325, -72.92497)\n",
      "(33.4872395, -112.3693866)\n",
      "(44.051208, -123.097057)\n",
      "(40.737233, -73.883268)\n",
      "(42.346661, -71.0895141)\n",
      "(37.86635, -122.26712)\n",
      "(39.2884951, -76.6186943)\n",
      "[(47.6134145, -122.3443283), (45.5118718, -122.6229791), (44.051208, -123.097057), (37.86635, -122.26712), (37.7631445, -122.4229747), (37.7952, -122.228), (36.972, -122.026), (34.416277, -119.6950933), (34.1913, -119.182), (34.0840136, -118.2741873), (34.04698, -118.2478), (34.0815247, -118.3891802), (33.9172, -118.012), (33.4872395, -112.3693866), (33.5891372, -112.1514437), (33.4577445, -111.9081615), (33.4221642, -111.859035), (32.2236033, -110.9562453), (39.7535064, -104.9953172), (30.2670974, -97.7363767), (32.78607, -96.7756), (29.82511, -95.30319), (29.95601, -90.07398), (30.69064, -88.04227), (33.72403, -84.41692), (30.3239248, -81.6373228), (28.54135, -81.37992), (27.96605, -82.41031), (36.7686679, -76.1019623), (38.9223987, -77.0422671), (39.2884951, -76.6186943), (39.9522059, -75.185114), (40.9016615, -74.005009), (40.7143, -73.95587), (40.7315474, -73.9891966), (40.69455, -73.90231), (40.7154, -73.91468), (40.737233, -73.883268), (41.35325, -72.92497), (41.4917338, -72.0909173), (42.346661, -71.0895141), (42.363697, -71.1013086)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a666c6190>"
      ]
     },
     "execution_count": 930,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Rock"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### West\n",
    "\n",
    "(https://www.pastemagazine.com/blogs/lists/2014/07/10-nevada-bands-you-should-listen-to-now.html)\n",
    "(https://buzzbands.la/2017/12/27/bands-watch-2018-20-artists-new-year/)\n",
    "(https://www.pastemagazine.com/blogs/lists/2012/05/1x-washington-bands-you-should-listen-to-now.html)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 827,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "128\n",
      "72\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "93\n",
      "46\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "96\n",
      "51\n",
      "47037016200\n",
      "26163507500\n",
      "18097355900\n",
      "21009950200\n",
      "25017339801\n",
      "censusgeocode error\n",
      "36067003200\n",
      "55073000100\n",
      "42071000100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "24510120600\n",
      "42101037600\n",
      "censusgeocode error\n",
      "53033006600\n",
      "21111006500\n",
      "39093060100\n",
      "censusgeocode error\n",
      "42003411000\n",
      "47031970500\n",
      "47141000600\n",
      "47035970602\n",
      "06037265301\n",
      "06037190201\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "25009217400\n",
      "08031002403\n",
      "08069000100\n",
      "22071007800\n",
      "censusgeocode error\n",
      "06073017200\n",
      "06037190510\n",
      "06037215101\n",
      "06075016200\n",
      "49035114000\n",
      "08031001600\n",
      "29095015800\n",
      "38017000700\n",
      "27137001900\n",
      "27123032100\n",
      "27103480600\n",
      "27099000410\n",
      "censusgeocode error\n",
      "24510120500\n",
      "42101036900\n",
      "39049000600\n",
      "censusgeocode error\n",
      "27123034201\n",
      "53033004700\n",
      "41051002203\n",
      "18105000100\n",
      "44005040900\n",
      "censusgeocode error\n",
      "06059063601\n",
      "06075016400\n",
      "censusgeocode error\n",
      "06037700501\n",
      "48453000902\n",
      "48029190200\n",
      "censusgeocode error\n",
      "42101000401\n",
      "36047056500\n",
      "25017353101\n",
      "censusgeocode error\n",
      "06041127000\n",
      "censusgeocode error\n",
      "22071012102\n",
      "06059042201\n",
      "32031000101\n",
      "06067008510\n",
      "censusgeocode error\n",
      "08041006700\n",
      "08031001600\n",
      "censusgeocode error\n",
      "08085966300\n",
      "41017001400\n",
      "41051003401\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "41051005200\n",
      "53033005301\n",
      "13121003000\n",
      "48453001100\n",
      "26163517200\n",
      "25025070200\n",
      "11001004400\n",
      "48453001100\n",
      "48113020400\n",
      "08031003701\n",
      "censusgeocode error\n",
      "53033007500\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06075015900\n",
      "48453002316\n",
      "censusgeocode error\n",
      "11001004400\n",
      "25017353101\n",
      "39035141100\n",
      "17031061100\n",
      "27053104400\n",
      "08031001500\n",
      "36029013800\n",
      "19163010900\n",
      "36109000700\n",
      "06037209300\n",
      "06073002201\n",
      "06075016900\n",
      "04013110702\n",
      "48453001100\n",
      "48201100000\n",
      "47037019500\n",
      "censusgeocode error\n",
      "17031031200\n",
      "35001002100\n",
      "06075016600\n",
      "53053061700\n",
      "53033009200\n",
      "27053104400\n",
      "08031002602\n",
      "49035102500\n",
      "16001000100\n",
      "56039967701\n",
      "06037700501\n",
      "06059074106\n",
      "06079011503\n",
      "06087101000\n",
      "06001422900\n",
      "41051002100\n",
      "53033010300\n",
      "06037208502\n",
      "101\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.811\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.805\n",
      "Method:                 Least Squares   F-statistic:                              139.9\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    2.72e-35\n",
      "Time:                        15:14:57   Log-Likelihood:                         -87.872\n",
      "No. Observations:                 101   AIC:                                      181.7\n",
      "Df Residuals:                      98   BIC:                                      189.6\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1             0.7195      0.280      2.565      0.012       0.163       1.276\n",
      "x2             0.0277      0.003     10.060      0.000       0.022       0.033\n",
      "x3         -1.012e-10   8.97e-10     -0.113      0.910   -1.88e-09    1.68e-09\n",
      "==============================================================================\n",
      "Omnibus:                       65.209   Durbin-Watson:                   2.062\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              300.617\n",
      "Skew:                           2.175   Prob(JB):                     5.27e-66\n",
      "Kurtosis:                      10.246   Cond. No.                     3.19e+08\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 3.19e+08. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['The Bonfire Set', 'Elephant Rifle', 'LO MOON', 'PINKY PINKY', 'My Goodness'], followers = 50000, demo='non-white')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 931,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "128\n",
      "72\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "93\n",
      "46\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "96\n",
      "51\n",
      "[('The Jesus Lizard', '6r26MaDr8bqNALjXgYPXMa', 14, 46874), ('Big Black', '5EYkvHZuGM3pwU3DZUrrZ3', 14, 41196), ('Wipers', '0sTTw3dw3EA0c7NaZnrJd2', 14, 28886), ('Mission Of Burma', '5UMQV83wwZCCvRSQCVjZw6', 13, 37738), ('Unwound', '4YjpqCSDD7zwMQgPYJMqb0', 13, 28694), ('Shellac', '6I8R5MFTlez7rHCsH4cx0u', 12, 48090), ('Brainiac', '0No2Og1pAwgw0eMmY6PPVP', 9, 8955), ('Lightning Bolt', '2og3FOCLYXT9H7IYE6QPUq', 9, 44470), ('Flipper', '20VDXslLsXlLgSF765m1Ug', 9, 22679), ('Scratch Acid', '219VCiRViG60EbPiocSWJp', 8, 16437), ('Talos', '5pdzKTGQAcRcxDOfN4mXSc', 7, 38802), ('VHS Collection', '2Nvaq4y2ygxIqfwXyz0HeH', 7, 43617), ('Mating Ritual', '4ZeB1hzT2mSZrf7wszOqHs', 6, 19291), ('courtship.', '2OK16hAFRHoJiFZKeZe8A8', 5, 30574), ('Arctic Lake', '0IEPb9ily3E5IAYMSkwtQ6', 5, 19008), ('Handsome Ghost', '3IaqL9bsZtYJkqNLiovVho', 5, 45179), ('Zola Blood', '3oxkIoEAyXXQlLTZXlffLJ', 5, 37360), ('Bay Ledges', '7FhRUp59cBzPaxobsRY1Nc', 4, 14923), ('Fractures', '7sjRnhONmeFL1tmlUvdq70', 3, 27451), ('George Ogilvie', '56NSAhpJRoeaGi5uyUdYlI', 3, 46977), ('The Parlor Mob', '1U4d20oJAq9aLa2mhDGwVV', 6, 33795), ('Goodbye June', '1l9I7G8J8AnMScWQwlNJ4M', 6, 49164), ('Dead Man Winter', '3S3wKbKQc3QdCKExlBBzxw', 6, 14019), ('Middle Brother', '5au2vhHl8DViD9PUxUZBTb', 6, 35190), ('The Felice Brothers', '4Ajgo7nAsTzjSFymIfBjZ1', 6, 44752), ('Futurebirds', '4Ait1vX2ZaWPrkua8Z664O', 5, 22649), ('The Stone Foxes', '40N10exWtaCVUtBMftQn3t', 5, 43225), ('Anders Osborne', '3WUUtA45g7X0jbeywZz888', 5, 30875), ('Patrick Sweany', '35mDUnsSVfkJpgjIXHsPC5', 4, 28289), ('Left Lane Cruiser', '2sJLswTuwPwm9Y1tMC4erf', 4, 29036)]\n",
      "30\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a64ebfb90>"
      ]
     },
     "execution_count": 931,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tours = compile_tours(names = ['The Bonfire Set', 'Elephant Rifle', 'LO MOON', 'PINKY PINKY', 'My Goodness'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'optimal_path' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-10-888dc59afb39>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0moptimal_path\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtours\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'optimal_path' is not defined"
     ]
    }
   ],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### East\n",
    "\n",
    "(https://gooddeedseats.com/45-up-and-coming-rock-bands/)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 834,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "61\n",
      "40\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "75\n",
      "24\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "42\n",
      "23\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "130\n",
      "50\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "126\n",
      "78\n",
      "42071000100\n",
      "51660000402\n",
      "37021000100\n",
      "51760040800\n",
      "34029723600\n",
      "24035810800\n",
      "42071000100\n",
      "42071000100\n",
      "06075010600\n",
      "06083000900\n",
      "06019002200\n",
      "06079011101\n",
      "06067001400\n",
      "06087101000\n",
      "06073005300\n",
      "06037207400\n",
      "06037183810\n",
      "06037191710\n",
      "27123032100\n",
      "29095016700\n",
      "08031001600\n",
      "17031062800\n",
      "05119004400\n",
      "47037016200\n",
      "censusgeocode error\n",
      "18097355900\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48309000400\n",
      "censusgeocode error\n",
      "17143002800\n",
      "17031061100\n",
      "13121000500\n",
      "49035114000\n",
      "49035114000\n",
      "49011126001\n",
      "49035114000\n",
      "49049002400\n",
      "49049002400\n",
      "censusgeocode error\n",
      "06073002201\n",
      "06037194402\n",
      "06059088602\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06075022702\n",
      "17031070300\n",
      "26081002000\n",
      "50007000800\n",
      "25017351100\n",
      "09009165400\n",
      "34017006500\n",
      "47037019500\n",
      "censusgeocode error\n",
      "37119001400\n",
      "37135010705\n",
      "51059460800\n",
      "42101002400\n",
      "36061003001\n",
      "42101000401\n",
      "11001002801\n",
      "51760040200\n",
      "39035161600\n",
      "17031062500\n",
      "06037207302\n",
      "06037183810\n",
      "09009165400\n",
      "42003981000\n",
      "some other error\n",
      "36109000700\n",
      "39035161600\n",
      "29510124300\n",
      "17031221100\n",
      "17077010800\n",
      "05119001800\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48201310900\n",
      "22071009700\n",
      "42071013501\n",
      "42101036900\n",
      "36111953800\n",
      "36061003001\n",
      "42041010300\n",
      "42071000100\n",
      "42071000100\n",
      "censusgeocode error\n",
      "06037408800\n",
      "06037226001\n",
      "41051002100\n",
      "censusgeocode error\n",
      "49035102500\n",
      "37183050100\n",
      "censusgeocode error\n",
      "33015069100\n",
      "50007000800\n",
      "42071000100\n",
      "51710002800\n",
      "25025010405\n",
      "censusgeocode error\n",
      "50007003600\n",
      "censusgeocode error\n",
      "36029016500\n",
      "11001001402\n",
      "censusgeocode error\n",
      "36047056500\n",
      "42101036900\n",
      "36047042700\n",
      "06073017200\n",
      "06037190510\n",
      "06037215101\n",
      "06075016200\n",
      "49035114000\n",
      "08031001600\n",
      "29095015800\n",
      "39009972800\n",
      "17031809900\n",
      "21037053200\n",
      "50007000200\n",
      "23005000600\n",
      "09009140100\n",
      "36111952400\n",
      "censusgeocode error\n",
      "25017354200\n",
      "25013811400\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "34025807003\n",
      "11001003800\n",
      "37135010705\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "36029016500\n",
      "censusgeocode error\n",
      "34025807003\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48453001100\n",
      "48113020400\n",
      "08031003701\n",
      "48113001900\n",
      "48453001100\n",
      "05143011300\n",
      "40143002500\n",
      "39049003200\n",
      "censusgeocode error\n",
      "36103201004\n",
      "25025000703\n",
      "11001008402\n",
      "36047051900\n",
      "42071000100\n",
      "36055009301\n",
      "29510125500\n",
      "censusgeocode error\n",
      "17031040900\n",
      "55079014400\n",
      "censusgeocode error\n",
      "55117011400\n",
      "censusgeocode error\n",
      "36055012700\n",
      "47037019500\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "08031003703\n",
      "53033007500\n",
      "41051003402\n",
      "06075060700\n",
      "47037019500\n",
      "39049000600\n",
      "36055009302\n",
      "25017353101\n",
      "25017353101\n",
      "censusgeocode error\n",
      "10005051102\n",
      "42095011300\n",
      "40109103602\n",
      "48113020400\n",
      "48453001100\n",
      "04005001200\n",
      "censusgeocode error\n",
      "36061004200\n",
      "06075016900\n",
      "06001422900\n",
      "censusgeocode error\n",
      "26081004400\n",
      "36047055500\n",
      "25017353700\n",
      "censusgeocode error\n",
      "36103123500\n",
      "51760030500\n",
      "13121001400\n",
      "51810044004\n",
      "42101015800\n",
      "26163521400\n",
      "17031831100\n",
      "27053107500\n",
      "31055003600\n",
      "08031003203\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "11001004400\n",
      "42003427000\n",
      "06075016400\n",
      "06075040100\n",
      "censusgeocode error\n",
      "06059074106\n",
      "36061003602\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "34025806000\n",
      "36061014900\n",
      "25017351100\n",
      "censusgeocode error\n",
      "41051001000\n",
      "06075012202\n",
      "censusgeocode error\n",
      "06073017304\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "36061006800\n",
      "51630000100\n",
      "censusgeocode error\n",
      "25025000802\n",
      "09003502500\n",
      "censusgeocode error\n",
      "55079008000\n",
      "25017353101\n",
      "censusgeocode error\n",
      "26163517500\n",
      "17031841300\n",
      "42003481000\n",
      "36061006500\n",
      "41051002100\n",
      "53033008100\n",
      "36047044900\n",
      "17031843100\n",
      "17031833000\n",
      "06037231220\n",
      "06037226002\n",
      "06059088701\n",
      "06037206031\n",
      "06037195500\n",
      "06037139401\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48453001100\n",
      "censusgeocode error\n",
      "53033004700\n",
      "censusgeocode error\n",
      "167\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.659\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.653\n",
      "Method:                 Least Squares   F-statistic:                              105.7\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    3.90e-38\n",
      "Time:                        15:26:50   Log-Likelihood:                         -244.30\n",
      "No. Observations:                 167   AIC:                                      494.6\n",
      "Df Residuals:                     164   BIC:                                      504.0\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1             0.7555      0.399      1.894      0.060      -0.032       1.543\n",
      "x2             0.0351      0.004      8.766      0.000       0.027       0.043\n",
      "x3          1.377e-09   1.59e-09      0.866      0.388   -1.76e-09    4.52e-09\n",
      "==============================================================================\n",
      "Omnibus:                      101.682   Durbin-Watson:                   1.842\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              484.133\n",
      "Skew:                           2.392   Prob(JB):                    7.45e-106\n",
      "Kurtosis:                       9.832   Cond. No.                     2.52e+08\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 2.52e+08. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['Air Traffic Controller', 'Big Thief', 'J and The 9s', 'Charly Bliss', 'Hop Along'], followers = 50000, demo='non-white')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "tours = compile_tours(names = ['Air Traffic Controller', 'Big Thief', 'J and The 9s', 'Charly Bliss', 'Hop Along'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Midwest\n",
    "\n",
    "(https://gooddeedseats.com/45-up-and-coming-rock-bands/)\n",
    "(https://radiomilwaukee.org/discover-music/tapd-in/wisconsin-bands-to-watch-in-2019/)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 846,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "1\n",
      "1\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "105\n",
      "55\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "108\n",
      "64\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "118\n",
      "48\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "103\n",
      "41\n",
      "34023007103\n",
      "36029016500\n",
      "25025000704\n",
      "17031081600\n",
      "34001001300\n",
      "06037208502\n",
      "06073002201\n",
      "04013113100\n",
      "04005001200\n",
      "08041006700\n",
      "08031001600\n",
      "08069000100\n",
      "49035114000\n",
      "36047049900\n",
      "17031051100\n",
      "06075022702\n",
      "06037181000\n",
      "36047055500\n",
      "25027731700\n",
      "06001431000\n",
      "48091310503\n",
      "48201411000\n",
      "48113004600\n",
      "56001963400\n",
      "censusgeocode error\n",
      "17031310600\n",
      "39035107701\n",
      "51760030500\n",
      "42101036900\n",
      "11001004400\n",
      "17031809900\n",
      "26161400100\n",
      "45045002504\n",
      "censusgeocode error\n",
      "17019011100\n",
      "27169670400\n",
      "55123960400\n",
      "19103002100\n",
      "25017353000\n",
      "25017353101\n",
      "25013813207\n",
      "25013810901\n",
      "08067971100\n",
      "55087010100\n",
      "16001000100\n",
      "41029002000\n",
      "censusgeocode error\n",
      "53063003500\n",
      "30067000200\n",
      "censusgeocode error\n",
      "55103970100\n",
      "06001402800\n",
      "06075016400\n",
      "censusgeocode error\n",
      "51760030200\n",
      "censusgeocode error\n",
      "26077000201\n",
      "39049003200\n",
      "42101000401\n",
      "36061006800\n",
      "36029016500\n",
      "26081002000\n",
      "08067971100\n",
      "26125142200\n",
      "45063020300\n",
      "45045002303\n",
      "37089930701\n",
      "37063002200\n",
      "censusgeocode error\n",
      "42017102500\n",
      "36047055700\n",
      "09005425600\n",
      "36001001100\n",
      "censusgeocode error\n",
      "36059301200\n",
      "42133000100\n",
      "51087200105\n",
      "42101037600\n",
      "06059042313\n",
      "09009165400\n",
      "25013811400\n",
      "25025010405\n",
      "42101002400\n",
      "censusgeocode error\n",
      "27137001900\n",
      "27123032100\n",
      "censusgeocode error\n",
      "27099000410\n",
      "29510105198\n",
      "48053960400\n",
      "53063003600\n",
      "53033005301\n",
      "censusgeocode error\n",
      "41017001400\n",
      "censusgeocode error\n",
      "18105000100\n",
      "censusgeocode error\n",
      "27053104400\n",
      "censusgeocode error\n",
      "29510119300\n",
      "21111004900\n",
      "06023001000\n",
      "06075018000\n",
      "06041101200\n",
      "06037195500\n",
      "censusgeocode error\n",
      "27053104800\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "13121003500\n",
      "censusgeocode error\n",
      "36061006200\n",
      "32003000700\n",
      "08031003701\n",
      "34037374600\n",
      "17031070200\n",
      "55073001500\n",
      "39049000600\n",
      "censusgeocode error\n",
      "36061003001\n",
      "11001000100\n",
      "censusgeocode error\n",
      "23009965503\n",
      "censusgeocode error\n",
      "06075015900\n",
      "06073017304\n",
      "censusgeocode error\n",
      "25019950200\n",
      "23005000500\n",
      "08031004405\n",
      "08069000100\n",
      "08101003500\n",
      "25003935300\n",
      "33013032300\n",
      "50025968600\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "04005001200\n",
      "06037215101\n",
      "06059042201\n",
      "censusgeocode error\n",
      "37063002200\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "21111008100\n",
      "censusgeocode error\n",
      "27053103900\n",
      "26081002600\n",
      "48201210100\n",
      "censusgeocode error\n",
      "40143003200\n",
      "05143011300\n",
      "28049002700\n",
      "06037212900\n",
      "36061024000\n",
      "36047038900\n",
      "17031221500\n",
      "26163517200\n",
      "42017104303\n",
      "42101021400\n",
      "censusgeocode error\n",
      "06113011300\n",
      "06029001600\n",
      "36061003700\n",
      "22033001600\n",
      "18097355900\n",
      "censusgeocode error\n",
      "55111000800\n",
      "17113001700\n",
      "37119000700\n",
      "37135010705\n",
      "51540001000\n",
      "09009165400\n",
      "censusgeocode error\n",
      "36061004200\n",
      "36109000700\n",
      "36061014900\n",
      "25017350900\n",
      "06075012000\n",
      "26125173100\n",
      "17031050600\n",
      "27053108800\n",
      "censusgeocode error\n",
      "37135010705\n",
      "37119001400\n",
      "37021000100\n",
      "08031001402\n",
      "08069000100\n",
      "41051001000\n",
      "censusgeocode error\n",
      "06037700501\n",
      "28071950202\n",
      "11001010200\n",
      "36029013800\n",
      "39035141100\n",
      "censusgeocode error\n",
      "48201510200\n",
      "39035117202\n",
      "36047051900\n",
      "34025807003\n",
      "42071000100\n",
      "37021001600\n",
      "22071007700\n",
      "28071950202\n",
      "29095015500\n",
      "21117067000\n",
      "39035117202\n",
      "36047055700\n",
      "162\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.768\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.764\n",
      "Method:                 Least Squares   F-statistic:                              175.7\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    2.91e-50\n",
      "Time:                        15:50:26   Log-Likelihood:                         -167.07\n",
      "No. Observations:                 162   AIC:                                      340.1\n",
      "Df Residuals:                     159   BIC:                                      349.4\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1             0.8378      0.243      3.446      0.001       0.358       1.318\n",
      "x2             0.0276      0.002     11.838      0.000       0.023       0.032\n",
      "x3          1.393e-09   1.04e-09      1.342      0.182   -6.57e-10    3.44e-09\n",
      "==============================================================================\n",
      "Omnibus:                       91.312   Durbin-Watson:                   2.064\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              383.242\n",
      "Skew:                           2.216   Prob(JB):                     6.03e-84\n",
      "Kurtosis:                       9.093   Cond. No.                     2.37e+08\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 2.37e+08. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['Hemmingbirds', 'The Accidentals', 'The Cactus Blossoms', 'Chicken Wire Empire', 'Rodeo Ruby Love'], followers = 50000, demo='non-white')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "tours = compile_tours(names = ['Hemmingbirds', 'The Accidentals', 'The Cactus Blossoms', 'Chicken Wire Empire', 'Rodeo Ruby Love'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## South\n",
    "\n",
    "(https://gooddeedseats.com/45-up-and-coming-rock-bands/)\n",
    "(https://www.pastemagazine.com/blogs/lists/2013/08/12-virginia-bands-you-should-listen-to-now.html)\n",
    "(https://clture.org/10-carolina-bands/)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 847,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "109\n",
      "74\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "119\n",
      "30\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "0\n",
      "0\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "108\n",
      "71\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "93\n",
      "49\n",
      "41051001101\n",
      "06001983200\n",
      "41051003402\n",
      "41051001301\n",
      "41051004200\n",
      "53033009200\n",
      "41051002100\n",
      "53067010520\n",
      "05143011300\n",
      "censusgeocode error\n",
      "39061001000\n",
      "36029016500\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "42101014200\n",
      "53033004700\n",
      "41051005100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06059074106\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "26081002000\n",
      "censusgeocode error\n",
      "26125173500\n",
      "06037209300\n",
      "censusgeocode error\n",
      "53033010300\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "17031833000\n",
      "censusgeocode error\n",
      "16001000100\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48453001100\n",
      "22071011100\n",
      "29095016800\n",
      "27053006800\n",
      "55025001900\n",
      "censusgeocode error\n",
      "36047057900\n",
      "42101002400\n",
      "34025807003\n",
      "47037019500\n",
      "47037019500\n",
      "37119001400\n",
      "37135010705\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06073002201\n",
      "06037197500\n",
      "06067001300\n",
      "36061001800\n",
      "36047054900\n",
      "42101037900\n",
      "53033007500\n",
      "41051002100\n",
      "06075022702\n",
      "06073009202\n",
      "06065044522\n",
      "06065042800\n",
      "06067001300\n",
      "53033007100\n",
      "06075060700\n",
      "censusgeocode error\n",
      "06075016200\n",
      "06037206031\n",
      "06037700300\n",
      "censusgeocode error\n",
      "48201210400\n",
      "06037191820\n",
      "42101014400\n",
      "39035161700\n",
      "17031242400\n",
      "26163517200\n",
      "41051003401\n",
      "06037195100\n",
      "01073004500\n",
      "47157001600\n",
      "04013114100\n",
      "06073005300\n",
      "06037190700\n",
      "06087101000\n",
      "06075018000\n",
      "06037224010\n",
      "06075015900\n",
      "53033008100\n",
      "41051002203\n",
      "04013113100\n",
      "censusgeocode error\n",
      "53033007500\n",
      "censusgeocode error\n",
      "06037183810\n",
      "17031310600\n",
      "26163517500\n",
      "06087101000\n",
      "06079011102\n",
      "06073017304\n",
      "censusgeocode error\n",
      "06037194402\n",
      "06071010420\n",
      "censusgeocode error\n",
      "32003000700\n",
      "29095015800\n",
      "29510124200\n",
      "47037019200\n",
      "13089020900\n",
      "11001001402\n",
      "25017352700\n",
      "32003000700\n",
      "48453001100\n",
      "48453001100\n",
      "17031831100\n",
      "36047055700\n",
      "25025000703\n",
      "24510120500\n",
      "42101037600\n",
      "37119000700\n",
      "21111005900\n",
      "47179060100\n",
      "37183050100\n",
      "censusgeocode error\n",
      "45013002107\n",
      "37149920304\n",
      "45045002303\n",
      "48453001100\n",
      "48453001100\n",
      "06037226002\n",
      "06073004400\n",
      "04019000100\n",
      "48141001700\n",
      "48453000902\n",
      "48113020400\n",
      "11001003500\n",
      "06037700400\n",
      "06075017802\n",
      "41051002000\n",
      "17031051100\n",
      "26077000201\n",
      "17031241400\n",
      "06075025300\n",
      "censusgeocode error\n",
      "26077000202\n",
      "06037207900\n",
      "36081053500\n",
      "39035160602\n",
      "26163517500\n",
      "17031220602\n",
      "06037207302\n",
      "53033008001\n",
      "34029715302\n",
      "censusgeocode error\n",
      "04019000400\n",
      "22071013500\n",
      "13089020900\n",
      "37063002200\n",
      "11001004400\n",
      "42101015800\n",
      "11001004400\n",
      "36061005700\n",
      "42101000401\n",
      "11001008402\n",
      "32003006700\n",
      "04013114100\n",
      "35049001202\n",
      "06075017601\n",
      "06037700501\n",
      "25017353101\n",
      "36061006500\n",
      "censusgeocode error\n",
      "17031070300\n",
      "censusgeocode error\n",
      "51760020500\n",
      "censusgeocode error\n",
      "11001003800\n",
      "censusgeocode error\n",
      "08031001600\n",
      "censusgeocode error\n",
      "51710002800\n",
      "25017353700\n",
      "42101037600\n",
      "36047049900\n",
      "09009165400\n",
      "24510120600\n",
      "51760041300\n",
      "37063002200\n",
      "140\n",
      "5\n",
      "                                 OLS Regression Results                                \n",
      "=======================================================================================\n",
      "Dep. Variable:                      y   R-squared (uncentered):                   0.670\n",
      "Model:                            OLS   Adj. R-squared (uncentered):              0.663\n",
      "Method:                 Least Squares   F-statistic:                              92.69\n",
      "Date:                Tue, 10 Dec 2019   Prob (F-statistic):                    8.13e-33\n",
      "Time:                        16:01:03   Log-Likelihood:                         -195.24\n",
      "No. Observations:                 140   AIC:                                      396.5\n",
      "Df Residuals:                     137   BIC:                                      405.3\n",
      "Df Model:                           3                                                  \n",
      "Covariance Type:            nonrobust                                                  \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "x1             0.6628      0.410      1.615      0.109      -0.149       1.475\n",
      "x2             0.0259      0.007      3.885      0.000       0.013       0.039\n",
      "x3          4.019e-06   2.47e-06      1.626      0.106   -8.68e-07    8.91e-06\n",
      "==============================================================================\n",
      "Omnibus:                      112.465   Durbin-Watson:                   2.267\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              916.725\n",
      "Skew:                           2.940   Prob(JB):                    8.62e-200\n",
      "Kurtosis:                      14.072   Cond. No.                     3.52e+05\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 3.52e+05. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "tract_stats(names = ['Savoy Motel', 'Ringo Deathstarr', 'Gull', 'Shadowgraphs', 'Young Mister'], followers = 50000, demo='non-white')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "tours = compile_tours(names = ['Savoy Motel', 'Ringo Deathstarr', 'Gull', 'Shadowgraphs', 'Young Mister'], followers = 50000)\n",
    "\n",
    "plot_all_tours(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "optimal_path(tours)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
