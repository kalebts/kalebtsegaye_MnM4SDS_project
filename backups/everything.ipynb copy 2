{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Table of Contents\n",
    "\n",
    "[Imports](#Imports)\n",
    "\n",
    "[Playground](#Playground)\n",
    "\n",
    "[Spotify Functions](#Spotify-Functions)\n",
    "\n",
    "[Songkick Functions](#Songkick-Functions)\n",
    "\n",
    "[Analysis Functions](#Analysis-Functions)\n",
    "\n",
    "[Analysis](#Analysis)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Imports\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 553,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             geometry                 name\n",
      "0   POLYGON ((-69.8822326660156 12.4111099243165, ...                Aruba\n",
      "1   (POLYGON ((-61.7388916015625 17.5405540466309,...  Antigua and Barbuda\n",
      "2   POLYGON ((61.2765579223633 35.6072463989258, 6...          Afghanistan\n",
      "3   POLYGON ((-5.15213489532459 30.1804695129396, ...              Algeria\n",
      "4   (POLYGON ((45.0258293151855 41.0305480957031, ...           Azerbaijan\n",
      "..                                                ...                  ...\n",
      "46  POLYGON ((-94.46169128436209 34.19676535931296...                   AR\n",
      "47  (POLYGON ((-93.70752428365972 30.2395783556275...                   LA\n",
      "48  (POLYGON ((-80.7856622716253 28.78519435427305...                   FL\n",
      "49  (POLYGON ((-88.49752727880752 48.1737953723300...                   MI\n",
      "50  (POLYGON ((-161.3337853466416 58.7332483821643...                   AK\n",
      "\n",
      "[302 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "#import necessary libraries\n",
    "import requests\n",
    "import json\n",
    "import pandas as pd\n",
    "import geopandas as gpd\n",
    "from shapely.geometry import Point, LineString\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.pyplot import figure\n",
    "import re\n",
    "import spotipy\n",
    "import base64\n",
    "import teetool as tt\n",
    "from collections import Counter\n",
    "import libpysal\n",
    "from pysal.model import spreg\n",
    "from libpysal.weights import Queen, Rook, KNN, Kernel\n",
    "import pysal\n",
    "from pysal.explore import esda\n",
    "from pysal.viz.splot import esda as esdaplot\n",
    "import cenpy\n",
    "import movingpandas as mpd\n",
    "import datetime\n",
    "from datetime import date\n",
    "from spotipy.oauth2 import SpotifyClientCredentials\n",
    "from census import Census\n",
    "import censusgeocode\n",
    "import us\n",
    "import folium\n",
    "\n",
    "api_key = \"fCnCRQ1S6LDAS7zQ\"\n",
    "client_id = 'f5a0fe76389c42c0b85c832f1de66cf7'\n",
    "client_secret = 'e9d4fc0874f345b2b636a6e307384bb7'\n",
    "census_key = '684a12c6b65d2fe14bdf6d8354da8fe3aff08d70'\n",
    "cen = Census(census_key)\n",
    "\n",
    "\n",
    "world = gpd.read_file('Countries_WGS84/Countries_WGS84.shp') #open file\n",
    "states_shp = gpd.read_file('states_21basic/states.shp') #open file\n",
    "\n",
    "s2 = states_shp[['geometry', 'STATE_ABBR']]\n",
    "s2.columns = ['geometry', 'name']\n",
    "\n",
    "w2 = world[['geometry', 'CNTRY_NAME']]\n",
    "w2.columns = ['geometry', 'name']\n",
    "\n",
    "ws = w2.append(s2)\n",
    "\n",
    "print(ws)\n",
    "\n",
    "\n",
    "#maybe remove festivals - songkick\n",
    "# maybe market - spotify"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Playground\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'artists': {'href': 'https://api.spotify.com/v1/search?query=id%3D0WjtdWS6su0f3jrW9aqEHl&type=artist&market=US&offset=0&limit=10', 'items': [], 'limit': 10, 'next': None, 'offset': 0, 'previous': None, 'total': 0}}\n"
     ]
    }
   ],
   "source": [
    "#spotipy playground\n",
    "client_credentials_manager = SpotifyClientCredentials(client_id, client_secret)\n",
    "sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)\n",
    "\n",
    "playlists = sp.user_playlists('spotify')\n",
    "\n",
    "\"https://api.spotify.com/v1/search?q=year%3A2001&type=artist&market=US\"\n",
    "\n",
    "# se = sp.search(q = 'year:0000-9999', limit = 1, offset = 9999, type = 'artist', market = 'US')\n",
    "\n",
    "se = sp.search(q = 'tag:hipster ', limit = 1, offset = 5678, type = 'album', market = 'US')\n",
    "\n",
    "se = sp.search(q = 'id=0WjtdWS6su0f3jrW9aqEHl', offset = 0, type = 'artist', market = 'US')\n",
    "\n",
    "print(se)\n",
    "\n",
    "# se = sp.search(q = 'berhana', limit = 1, type = 'artist')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Spotify Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# spotify function definitions\n",
    "\n",
    "# given a name/id or genre, will provide a list of \n",
    "# artists that exist in relation and also are within the follower limit\n",
    "\n",
    "# custom function used to sort by num of shared genres\n",
    "def custom_sort(x):\n",
    "    return x[2]\n",
    "\n",
    "query_count = 0\n",
    "\n",
    "# handles counting the genres for related artists\n",
    "def ra_help(artid, genres, followers, lessthan):\n",
    "    global query_count\n",
    "#     print(followers)\n",
    "    alist = []\n",
    "    if query_count < 10:\n",
    "        query_count += 1\n",
    "        for a in sp.artist_related_artists(artid)['artists']:\n",
    "#             print(a)\n",
    "            gc = 0\n",
    "            if (followers == -1):\n",
    "                for g in a['genres']:    \n",
    "                    if g in genres:\n",
    "                        gc += 1\n",
    "                if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                    alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "            else:\n",
    "                if (lessthan == True):\n",
    "#                     print(a)\n",
    "                    if (a['followers']['total'] < followers):\n",
    "                        for g in a['genres']:    \n",
    "                            if g in genres:\n",
    "                                gc += 1\n",
    "                        if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                            alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "                elif (lessthan == False):\n",
    "                    if (a['followers']['total'] >= followers):\n",
    "                        for g in a['genres']:    \n",
    "                            if g in genres:\n",
    "                                gc += 1\n",
    "                        if gc > 0 and ([item for item in alist if item[1] == a['id']] == []):\n",
    "                            alist.append((a['name'], a['id'], gc, a['followers']['total']))\n",
    "                \n",
    "        return sorted(alist, key = custom_sort, reverse = True)\n",
    "                    \n",
    "# used to faciliate recursive calls - \n",
    "# allows me to find the related artists in each level of separation from the root\n",
    "# before moving on to the root artist\n",
    "def ra_rec(lst, genres, followers, lessthan):\n",
    "    global query_count\n",
    "    lst2 = []\n",
    "    query_count += 1\n",
    "    for a in lst:\n",
    "        if query_count < 10:\n",
    "            lst2+=(ra_help(a[1], genres, followers, lessthan))\n",
    "#         print(\"ra_rec ra_help\" + str(query_count))\n",
    "    if query_count < 10:\n",
    "        lst2 += (ra_rec((sorted(lst2, key = custom_sort)), genres, followers, lessthan))    \n",
    "    \n",
    "    return sorted(lst2, key = custom_sort, reverse = True)\n",
    "\n",
    "def related_artists(artname='', artid='', genre='', followers=-1, lessthan = True, llen = -1):\n",
    "    if (artname == '' and artid == '' and genre == ''):\n",
    "        print('please include name, id, or genre')\n",
    "        return\n",
    "    else:\n",
    "        global query_count\n",
    "        query_count = 0\n",
    "        alist = []\n",
    "        if (artname != ''):\n",
    "            se = sp.search(q = artname, limit = 1, type = 'artist')\n",
    "            query_count += 1\n",
    "            print(\"related_artists search \" + str(query_count))\n",
    "            if (se['artists']['total'] > 0):\n",
    "                artist = se['artists']['items'][0]\n",
    "                artid = artist['id']\n",
    "                genres = artist['genres']\n",
    "        elif (artid != ''):\n",
    "            artist = sp.artist(artid)\n",
    "            genres = artist['genres']\n",
    "            \n",
    "#         print(artist)\n",
    "        \n",
    "        for a in sp.artist_related_artists(artid)['artists']:\n",
    "            genres+=a['genres']\n",
    "            \n",
    "#         print(genres)\n",
    "\n",
    "        lst = ra_help(artid, genres, followers, lessthan)\n",
    "#         print(lst)\n",
    "        query_count += 1\n",
    "        print(\"related_artists ra_help \" + str(query_count))\n",
    "                \n",
    "        if query_count < 10:\n",
    "            lst+=(ra_rec(lst, genres, followers, lessthan))\n",
    "          \n",
    "        print(len(lst))\n",
    "        \n",
    "        print(len(sorted(list(set(lst)), key = custom_sort)))\n",
    "    \n",
    "    if llen > 0:\n",
    "        return sorted(list(set(lst)), key = custom_sort, reverse = True)[0:llen]\n",
    "    else:\n",
    "        return sorted(list(set(lst)), key = custom_sort, reverse = True)\n",
    "\n",
    "\n",
    "# related_artists(artname = 'berhana', followers = 75000)    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Songkick Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 433,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# function definitions\n",
    "\n",
    "# takes json string from songkick for an artist and makes points based on the results\n",
    "def make_points(json_str, artist):\n",
    "    df = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': []})\n",
    "\n",
    "    i = 0\n",
    "    \n",
    "    if (json_str['resultsPage']['totalEntries'] != 0):\n",
    "        for p in json_str['resultsPage']['results']['event']:\n",
    "            #     print(p['popularity'])\n",
    "            venue = p['venue']['displayName']\n",
    "            lng = p['location']['lng']\n",
    "            lat = p['location']['lat']\n",
    "            city = p['location']['city']\n",
    "            state = 'N/A'\n",
    "            csplit = city.split(',')\n",
    "            country = csplit[1]\n",
    "        \n",
    "            if (len(csplit) == 3):\n",
    "                if not ('Washington' == csplit[0] and 'DC' == csplit[1]):\n",
    "                    city = csplit[0]\n",
    "                    state = csplit[1]\n",
    "                    country = csplit[2]\n",
    "                else:\n",
    "                    city = csplit[0] + ', ' + csplit[1]\n",
    "                    state = 'N/A'\n",
    "                    country = csplit[2].replace(' ', '')\n",
    "        \n",
    "            df.loc[i] = [artist] + [venue] + [city] + [state] + [country] + [lat] +[lng]\n",
    "\n",
    "            i+=1\n",
    "        #convert to gdf to plot\n",
    "        gdf = gpd.GeoDataFrame(\n",
    "            df, geometry=[Point(x, y) for y, x in zip(df['Longitude'], df['Latitude'])])\n",
    "\n",
    "        gdf2 = gdf\n",
    "        gdf2 = gdf2.drop(list(range(1, len(gdf))))\n",
    "        gdf3 = gdf\n",
    "        gdf3 = gdf3.drop(list(range(0, len(gdf)-1)))\n",
    "    \n",
    "        return(gdf, gdf2, gdf3)\n",
    "    else:\n",
    "        return -1\n",
    "    \n",
    "def find_tour(json_str, artist, tr = 7, cutoff_yr = 2):\n",
    "    df = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': [],\n",
    "     't': []})\n",
    "\n",
    "    i = 0\n",
    "    \n",
    "    arr = []\n",
    "    \n",
    "    if (json_str['resultsPage']['totalEntries'] != 0):\n",
    "        for p in json_str['resultsPage']['results']['event']:\n",
    "            if 'US' in p['location']['city']:\n",
    "                venue = p['venue']['displayName']\n",
    "                lng = p['location']['lng']\n",
    "                lat = p['location']['lat']\n",
    "                city = p['location']['city']\n",
    "                state = 'N/A'\n",
    "                csplit = city.split(',')\n",
    "                country = csplit[1]\n",
    "        \n",
    "                if (len(csplit) == 3):\n",
    "                    if not ('Washington' == csplit[0] and 'DC' == csplit[1]):\n",
    "                        city = csplit[0]\n",
    "                        state = csplit[1]\n",
    "                        country = csplit[2]\n",
    "                    else:\n",
    "                        city = csplit[0] + ', ' + csplit[1]\n",
    "                        state = city\n",
    "                        country = csplit[2].replace(' ', '')\n",
    "                    df.loc[i] = [artist] + [venue] + [city] + [state] + [country] + [lat] + [lng] + [p['start']['date']]\n",
    "            \n",
    "                i+=1\n",
    "            \n",
    "                if (len(p['location']['city'].split(',')) == 3):\n",
    "                    d = p['start']['date'].split('-')\n",
    "                    arr.append(date(int(d[0]), int(d[1]), int(d[2])))\n",
    "    else:\n",
    "        return -1\n",
    "    \n",
    "    l = [0,0]\n",
    "    first = 0\n",
    "    last = 0\n",
    "    for i in range(len(arr)-1):\n",
    "        if (arr[i] != -1 and arr[i+1] != -1):\n",
    "            if (((arr[i] - arr[i+1]).days > tr) or (i == len(arr)-2)):\n",
    "                last = i\n",
    "                if (last-first > l[1] - l[0]):\n",
    "                    l = [first, last]\n",
    "                first = i+1\n",
    "        else:\n",
    "            last = i\n",
    "            if (last-first > l[1] - l[0]):\n",
    "                l = [first, last]\n",
    "            first = i+1\n",
    "            \n",
    "#     print(l)\n",
    "    \n",
    "    df2 = pd.DataFrame(\n",
    "    {'Artist': [],\n",
    "     'Venue': [],\n",
    "     'City': [],\n",
    "     'State/Province': [],\n",
    "     'Country': [],\n",
    "     'Longitude': [],\n",
    "     'Latitude': [],\n",
    "     't': []})\n",
    "    \n",
    "    if (len(df) > 0):\n",
    "        for i in range(l[0], l[1]+1):\n",
    "            df2.loc[i] = df.loc[i]\n",
    "        \n",
    "        #convert to gdf to plot\n",
    "        gdf = gpd.GeoDataFrame(\n",
    "                df2, geometry=[Point(x, y) for y, x in zip(df2['Longitude'], df2['Latitude'])])\n",
    "\n",
    "        return gdf\n",
    "    else:\n",
    "        return -1\n",
    "\n",
    "# plots singular tour path for artist\n",
    "def run_plot(req, aname):\n",
    "    gdfs = make_points(req.json(), aname)\n",
    "\n",
    "    points_gdf = gdfs[0]\n",
    "    print(points_gdf)\n",
    "    start_gdf = gdfs[1]\n",
    "    stop_gdf = gdfs[2]\n",
    "\n",
    "    #current us basemap\n",
    "    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n",
    "\n",
    "    # fig, ax = plt.subplots(figsize=(15,15))\n",
    "    ax = world[world.continent == 'North America'].plot(\n",
    "#     ax = world.plot(\n",
    "        color='white', edgecolor='black')\n",
    "\n",
    "    ax.set_xlim(-130, -65)\n",
    "    ax.set_ylim(24, 50)\n",
    "\n",
    "    # We can now plot our ``GeoDataFrame``.\n",
    "    points_gdf.plot(ax=ax, color='blue')\n",
    "\n",
    "    start_gdf.plot(ax=ax, color='green')\n",
    "    stop_gdf.plot(ax=ax, color='red')\n",
    "\n",
    "    points = []\n",
    "\n",
    "    linedf = pd.DataFrame(\n",
    "        {'Line': []})\n",
    "\n",
    "    for i in range(len(points_gdf)):\n",
    "        points.append(points_gdf.iloc[i].loc[\"geometry\"])\n",
    "\n",
    "    line = LineString(points)\n",
    "\n",
    "    def plot_line(ax, ob):\n",
    "        x, y = ob.xy\n",
    "        ax.plot(x, y, color='grey', alpha=0.7, linewidth=1, solid_capstyle='round', zorder=2)\n",
    "\n",
    "    plot_line(ax, line)\n",
    "\n",
    "    plt.tight_layout()\n",
    "\n",
    "    plt.show()\n",
    "    \n",
    "# used to find the artist id on songkick\n",
    "def get_artist_id(artist_name):\n",
    "    json_str = requests.get(\"https://api.songkick.com/api/3.0/search/artists.json?apikey=\" + api_key + \"&query=\" + artist_name).json()\n",
    "    return (str(json_str['resultsPage']['results']['artist'][0]['id']) if json_str['resultsPage']['totalEntries'] != 0 else -1)\n",
    "\n",
    "# function for interface for taking input\n",
    "def req_input():\n",
    "    print(\"Welcome\")\n",
    "    while (True):\n",
    "        past = True\n",
    "        is_venue = True\n",
    "        \n",
    "        cmd = input(\"Venue search (0) or event search (1)?\")\n",
    "        \n",
    "        if (cmd == 1):\n",
    "            is_venue = False\n",
    "            \n",
    "        if (is_venue == False):\n",
    "            cmd = input(\"Past events (0), upcoming events (1): \")\n",
    "        \n",
    "            if (cmd == 1):\n",
    "                past = False\n",
    "            \n",
    "            cmd = input(\"Please type the parameters: [artist_name, min_date, max_date.] Separate with commas.\"\n",
    "                       + \"\\nIf no input, just add a comma and skip.\\n\")\n",
    "        \n",
    "            if (cmd == 'quit'):\n",
    "                return\n",
    "        \n",
    "            cs = cmd.split(',')\n",
    "            an = get_artist_id(cs[0].replace(' ', '+')) if not (cs[0]+' ').isspace() else print('need artist!')\n",
    "            if (cs[0]+' ').isspace():\n",
    "                continue\n",
    "            mind = \"&min_date=\" + cs[1].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[1])) else ''\n",
    "            maxd = \"&max_date=\" + cs[2].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[2])) else ''\n",
    "            \n",
    "            if (past == True):\n",
    "                r = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key \n",
    "                              + mind + maxd)\n",
    "                run_plot(r, cs[0])\n",
    "            else:\n",
    "                r = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=\"+ api_key \n",
    "                    + an + loc + mind + maxd)\n",
    "                print(r.json())\n",
    "                run_plot(r, cs[0])\n",
    "        else:\n",
    "            cmd = input(\"Past venues (0), upcoming venues (1): \")\n",
    "        \n",
    "            if (cmd == 1):\n",
    "                past = False\n",
    "            \n",
    "        cmd = input(\"Please type the parameters: [artist_name, min_date, max_date.] Separate with commas.\"\n",
    "                   + \"\\nIf no input, just add a comma and skip.\\n\")\n",
    "        \n",
    "        if (cmd == 'quit'):\n",
    "            return\n",
    "        \n",
    "        cs = cmd.split(',')\n",
    "        an = get_artist_id(cs[0].replace(' ', '+')) if not (cs[0]+' ').isspace() else print('need artist!')\n",
    "        if (cs[0]+' ').isspace():\n",
    "            continue\n",
    "        mind = \"&min_date=\" + cs[1].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[1])) else ''\n",
    "        maxd = \"&max_date=\" + cs[2].replace(' ', '') if (re.search(\"\\d{4}-\\d{2}-\\d{2}\", cs[2])) else ''\n",
    "        \n",
    "        if (past == True):\n",
    "            r = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key \n",
    "                              + mind + maxd)\n",
    "            run_plot(r, cs[0])\n",
    "        else:\n",
    "            r = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=\"+ api_key \n",
    "                + an + loc + mind + maxd)\n",
    "            print(r.json())\n",
    "            run_plot(r, cs[0])\n",
    "              \n",
    "\n",
    "    \n",
    "# req = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=fCnCRQ1S6LDAS7zQ&artist_name=young+thug&min_date=2019-10-01&max_date=2019-11-01\")\n",
    "\n",
    "# req = requests.get(\"https://api.songkick.com/api/3.0/events.json?apikey=fCnCRQ1S6LDAS7zQ&artist_name=travis+scott&min_date=2018-01-01&max_date=2022-11-01\")\n",
    "\n",
    "# print(get_artist_id('travis+scott'))\n",
    "\n",
    "# print(\"https://api.songkick.com/api/3.0/artists/\"+ get_artist_id('travis+scott') + \"/gigography.json?apikey=fCnCRQ1S6LDAS7zQ\")\n",
    "\n",
    "# print(req.text)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [],
   "source": [
    "# r = \"https://api.songkick.com/api/3.0/artists/\"+ get_artist_id('travis+scott') + \"/gigography.json?apikey=fCnCRQ1S6LDAS7zQ&order=desc\"\n",
    "\n",
    "# find_tour(requests.get(r).json(), \"Travis Scott\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis Functions\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# find the last 20 concerts for root artist and related artists - use num of genres as weights\n",
    "# cluster analysis \n",
    "# basic stats - top5 states/venues/countries\n",
    "\n",
    "# also, autocorrelation function - if us, then do using states, or cenpy for one state. otherwise, countries (in a continent)\n",
    "\n",
    "# with what i have, can do - cluster analysis, top5 states/countries; need to add venue info, "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 471,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "yo\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "49\n",
      "46\n",
      "related_artists search 1\n",
      "related_artists ra_help 3\n",
      "111\n",
      "78\n"
     ]
    }
   ],
   "source": [
    "# this function generates many related artists, returns 20 most recent events for each one, \n",
    "def compile_points(names = [], followers = -1):\n",
    "    if not (names == []):\n",
    "            print('yo')\n",
    "            artists = []\n",
    "            if followers == -1:   \n",
    "                for n in names:\n",
    "                    artists += related_artists(artname = n, llen = 10)\n",
    "            else:\n",
    "                for n in names:\n",
    "                    artists += related_artists(artname = n, llen = 10, followers = followers)\n",
    "\n",
    "#             print('llen')\n",
    "#             print(artists)\n",
    "            nl = []\n",
    "            for a in artists:\n",
    "                nl.append(a[0])\n",
    "            \n",
    "            nl = list(set(nl))\n",
    "            \n",
    "            gl = []\n",
    "            \n",
    "            for a in nl:\n",
    "                an = get_artist_id(a.replace(' ', '+')) if not (a[0]+' ').isspace() else print('need artist!')\n",
    "    \n",
    "                if an != -1:\n",
    "                    req = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "#             print(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "                    gdfs = make_points(req.json(), a)\n",
    "                    if gdfs != -1:\n",
    "                        gl.append(gdfs[0])\n",
    "                \n",
    "            return gl\n",
    "    else:\n",
    "        return -1\n",
    "\n",
    "gdfs = compile_points(names = ['pat app', 'supakaine'], followers = 50000)\n",
    "# gdf = compile_points(['pat app'])\n",
    "# gdf2 = compile_points(['supakaine'])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 472,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15\n",
      "9\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "print(len(gdfs))\n",
    "print(len(gdf))\n",
    "print(len(gdf2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 610,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "def basic_stats(gdfs, state = ''):    \n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    \n",
    "    # basic stats\n",
    "    venues = {}\n",
    "    cities = {}\n",
    "    countries_states = {}\n",
    "    \n",
    "    for index, row in rdf.iterrows():\n",
    "        if row[1] != 'Unknown venue':\n",
    "            print(row)\n",
    "            if row[1] not in venues:\n",
    "                venues[row[1]] = 1\n",
    "            else:\n",
    "                venues[row[1]] += 1\n",
    "          \n",
    "        if row[3] != 'N/A':\n",
    "            if (row[2] + ', ' + row[3][1:]) not in cities:\n",
    "                cities[(row[2] + ', ' + row[3][1:])] = 1\n",
    "            else:\n",
    "                cities[(row[2] + ', ' + row[3][1:])] += 1\n",
    "        else:\n",
    "            if (row[2] + ', ' + row[4]) not in cities:\n",
    "                cities[(row[2] + ', ' + row[4][1:])] = 1\n",
    "            else:\n",
    "                cities[(row[2] + ', ' + row[4][1:])] += 1\n",
    "            \n",
    "        if row[3] != 'N/A':\n",
    "            if (row[3][1:]) not in countries_states:\n",
    "                countries_states[row[3][1:]] = 1\n",
    "            else:\n",
    "                countries_states[row[3][1:]] += 1\n",
    "\n",
    "        \n",
    "        if (row[4][1:]) not in countries_states:\n",
    "            countries_states[row[4][1:]] = 1\n",
    "        else:\n",
    "            countries_states[row[4][1:]] += 1\n",
    "            \n",
    "    print('Top 5 venues:')\n",
    "    top = Counter(venues)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    print('\\nTop 5 cities:')\n",
    "    top = Counter(cities)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    print('\\nTop 5 countries:')\n",
    "    top = Counter(countries_states)\n",
    "    for i in top.most_common(5):\n",
    "        print(i[0] + ' ' + str(i[1]))\n",
    "        \n",
    "    return(venues)\n",
    "        \n",
    "    # end basic stats    \n",
    "\n",
    "def autocorr(gdfs, state = ''):\n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "\n",
    "    plt.figure(figsize=(10, 12))\n",
    "\n",
    "    world = ws\n",
    "    \n",
    "    showcount = []\n",
    "    \n",
    "    for index, row in world.iterrows():\n",
    "        if row[1] == 'United States':\n",
    "            c = 'US'            \n",
    "        elif row[1] == 'United Kingdom':\n",
    "            c = 'UK'\n",
    "        else:\n",
    "            c = row[1]\n",
    "#             print(c)\n",
    "        \n",
    "        if c in countries_states:\n",
    "            showcount.append(countries_states[c])\n",
    "        else:\n",
    "            showcount.append(0)\n",
    "        \n",
    "    world[\"ShowCount\"] = showcount #make new column\n",
    "\n",
    "    for index, row in ws.iterrows():\n",
    "        if row[1] == 'United States':\n",
    "            world.drop(index, inplace=True)\n",
    "    \n",
    "    fig, ax = plt.subplots(figsize=(15,15)) #plot\n",
    "    world.plot(\"ShowCount\", ax=ax)\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    \n",
    "    # morans i\n",
    "\n",
    "    qW = Queen.from_dataframe(world)\n",
    "    \n",
    "    qW.silent_island_warning = True\n",
    "\n",
    "    qW.transform = 'r'\n",
    "\n",
    "    #moran\n",
    "    moran_sc = esda.moran.Moran(world[['ShowCount']], qW)\n",
    "\n",
    "    #lisa\n",
    "    lisa_sc = esda.Moran_Local(world[\"ShowCount\"], qW)\n",
    "\n",
    "    print(str(moran_sc.I) + \", \" + str(moran_sc.p_sim))\n",
    "    \n",
    "    from pysal.viz.splot import esda as esdaplot\n",
    "    esdaplot.plot_local_autocorrelation(lisa_sc, world, \"ShowCount\")\n",
    "\n",
    "    plt.show()\n",
    "\n",
    "# def traj(gdfs, state = ''):\n",
    "    \n",
    "    \n",
    "def analyze(gdfs, state = ''):\n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    basic_stats(gdfs)\n",
    "    autocorr(gdfs)\n",
    "    \n",
    "def venue_count(gdfs, usonly = True):    \n",
    "    rdf = gpd.GeoDataFrame(pd.concat(gdfs, ignore_index=True))\n",
    "    \n",
    "    venues = {}\n",
    "    \n",
    "    if (usonly == True):\n",
    "        for index, row in rdf.iterrows():\n",
    "            if row[1] != 'Unknown venue':\n",
    "                if (row[4].replace(' ', '') == 'US'): \n",
    "                    if row[1] not in venues.keys():\n",
    "                        venues[row[1]] = [(row[5],row[6], row[2], row[3].replace(' ', '')), 1]\n",
    "                    else:\n",
    "                        venues[row[1]][1] += 1\n",
    "        \n",
    "    return(venues)\n",
    "\n",
    "\n",
    "def get_tracts(vens):\n",
    "    tracts = {}\n",
    "    \n",
    "    for k,v in vens.items():\n",
    "#         print(v)\n",
    "        x = float(v[0][1])\n",
    "        y = float(v[0][0])\n",
    "        r = ''\n",
    "        try:\n",
    "            r = censusgeocode.coordinates(x=x, y=y)\n",
    "        except:\n",
    "            print('censusgeocode error')\n",
    "            continue\n",
    "        \n",
    "        try:\n",
    "            r = r['2010 Census Blocks']\n",
    "            st = r[0]['STATE']\n",
    "            co = r[0]['COUNTY']\n",
    "            tr = r[0]['TRACT']\n",
    "            print(st + co + tr)\n",
    "            b = cen.acs5.state_county_tract('B02001_002E,B01003_001E,B01002_001E,B19013_001E', st, co, tr)\n",
    "            b2 = cen.acs5.state_county_tract('B11001_007E,B11001_001E,B12002_003E,B12002_096E', st, co, tr)\n",
    "            b3 = cen.acs5.state_county_tract('B12002_001E', st, co, tr)\n",
    "\n",
    "            ftr = st + co + tr\n",
    "            if (ftr not in tracts.keys()):\n",
    "                tracts[ftr] = {'Non-white population percentage': -1,\n",
    "                'Median age': -1,\n",
    "                'Median household income': -1,\n",
    "                'Nonfamily households percentage': -1,\n",
    "                'Never married': -1,\n",
    "                'Count': -1}\n",
    "                tracts[ftr]['Non-white population percentage'] = b[0]['B02001_002E']/b[0]['B01003_001E']\n",
    "                tracts[ftr]['Median age'] = b[0]['B01002_001E']\n",
    "                tracts[ftr]['Median household income'] = b[0]['B19013_001E']\n",
    "                tracts[ftr]['Nonfamily households percentage'] = b2[0]['B11001_007E']/b2[0]['B11001_001E']\n",
    "                tracts[ftr]['Never married'] = (b2[0]['B12002_003E']+b2[0]['B12002_096E'])/b3[0]['B12002_001E']\n",
    "                tracts[ftr]['Count'] = v[1]\n",
    "            else:\n",
    "                print(tracts)\n",
    "                tracts[ftr]['Count'] += v[1]\n",
    "        except:\n",
    "            print('some other error')\n",
    "            \n",
    "        # b = c.acs5.state_place('B25034_010E', states.CA.fips, 'Los Angeles')\n",
    "#         print(b)\n",
    "\n",
    "    return tracts\n",
    "\n",
    "        \n",
    "# analyze(gdfs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 611,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06037189701\n",
      "06037191301\n",
      "13121000500\n",
      "13121002600\n",
      "censusgeocode error\n",
      "25017353101\n",
      "25025010203\n",
      "06037189702\n",
      "06073001300\n",
      "25025000803\n",
      "26163517200\n",
      "25017353101\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 1}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}}\n",
      "42101001600\n",
      "36061005000\n",
      "censusgeocode error\n",
      "24031702500\n",
      "censusgeocode error\n",
      "12057003900\n",
      "13121009502\n",
      "47037019500\n",
      "22071013500\n",
      "48201310100\n",
      "48453002316\n",
      "48113020400\n",
      "35001002100\n",
      "16027021100\n",
      "16027021100\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 1}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 1}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 1}}\n",
      "26163531900\n",
      "26163520800\n",
      "13121000200\n",
      "censusgeocode error\n",
      "06037216700\n",
      "censusgeocode error\n",
      "06067001101\n",
      "06037273502\n",
      "censusgeocode error\n",
      "39095004800\n",
      "17031330100\n",
      "36061003001\n",
      "26161400100\n",
      "39035107701\n",
      "06001983200\n",
      "06037700501\n",
      "53033004900\n",
      "48201310100\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 1}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 1}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36061008300\n",
      "04013421202\n",
      "06037195803\n",
      "36061003100\n",
      "37119000700\n",
      "36047031500\n",
      "17031241400\n",
      "29095016800\n",
      "41051001102\n",
      "06001402900\n",
      "06037190202\n",
      "04013218300\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "48201310100\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 2}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 1}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 3}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "22071007700\n",
      "36081053500\n",
      "17031241500\n",
      "17031241400\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 1}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 3}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36047048500\n",
      "17031070200\n",
      "17031310600\n",
      "17031310600\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 1}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 4}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}, '36047048500': {'Non-white population percentage': 0.583868665239115, 'Median age': 28.5, 'Median household income': 99063.0, 'Nonfamily households percentage': 0.6312968917470525, 'Never married': 0.7487552661815396, 'Count': 1}, '17031070200': {'Non-white population percentage': 0.8266405484818805, 'Median age': 29.0, 'Median household income': 84668.0, 'Nonfamily households percentage': 0.7113760556383507, 'Never married': 0.6242020538440188, 'Count': 2}, '17031310600': {'Non-white population percentage': 0.5857893534384282, 'Median age': 33.5, 'Median household income': 31991.0, 'Nonfamily households percentage': 0.593029215786776, 'Never married': 0.5958656330749355, 'Count': 2}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "censusgeocode error\n",
      "17031160800\n",
      "17031241400\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 1}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 4}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}, '36047048500': {'Non-white population percentage': 0.583868665239115, 'Median age': 28.5, 'Median household income': 99063.0, 'Nonfamily households percentage': 0.6312968917470525, 'Never married': 0.7487552661815396, 'Count': 1}, '17031070200': {'Non-white population percentage': 0.8266405484818805, 'Median age': 29.0, 'Median household income': 84668.0, 'Nonfamily households percentage': 0.7113760556383507, 'Never married': 0.6242020538440188, 'Count': 2}, '17031310600': {'Non-white population percentage': 0.5857893534384282, 'Median age': 33.5, 'Median household income': 31991.0, 'Nonfamily households percentage': 0.593029215786776, 'Never married': 0.5958656330749355, 'Count': 3}, '17031160800': {'Non-white population percentage': 0.7356700232378002, 'Median age': 33.7, 'Median household income': 57261.0, 'Nonfamily households percentage': 0.4566971490048413, 'Never married': 0.4938357757618051, 'Count': 1}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "censusgeocode error\n",
      "06075980900\n",
      "censusgeocode error\n",
      "06067000700\n",
      "censusgeocode error\n",
      "04019000100\n",
      "censusgeocode error\n",
      "08031001701\n",
      "16001002412\n",
      "censusgeocode error\n",
      "censusgeocode error\n",
      "06037207302\n",
      "censusgeocode error\n",
      "06019000100\n",
      "censusgeocode error\n",
      "04013114100\n",
      "censusgeocode error\n",
      "48029191900\n",
      "48453001100\n",
      "11001010200\n",
      "48201100000\n",
      "48113020400\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 1}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 6}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}, '36047048500': {'Non-white population percentage': 0.583868665239115, 'Median age': 28.5, 'Median household income': 99063.0, 'Nonfamily households percentage': 0.6312968917470525, 'Never married': 0.7487552661815396, 'Count': 1}, '17031070200': {'Non-white population percentage': 0.8266405484818805, 'Median age': 29.0, 'Median household income': 84668.0, 'Nonfamily households percentage': 0.7113760556383507, 'Never married': 0.6242020538440188, 'Count': 2}, '17031310600': {'Non-white population percentage': 0.5857893534384282, 'Median age': 33.5, 'Median household income': 31991.0, 'Nonfamily households percentage': 0.593029215786776, 'Never married': 0.5958656330749355, 'Count': 3}, '17031160800': {'Non-white population percentage': 0.7356700232378002, 'Median age': 33.7, 'Median household income': 57261.0, 'Nonfamily households percentage': 0.4566971490048413, 'Never married': 0.4938357757618051, 'Count': 1}, '06075980900': {'Non-white population percentage': 0.7272727272727273, 'Median age': 37.4, 'Median household income': 103750.0, 'Nonfamily households percentage': 0.5882352941176471, 'Never married': 0.42857142857142855, 'Count': 1}, '06067000700': {'Non-white population percentage': 0.31723596387907343, 'Median age': 38.1, 'Median household income': 12426.0, 'Nonfamily households percentage': 0.8212996389891697, 'Never married': 0.4680015704750687, 'Count': 1}, '04019000100': {'Non-white population percentage': 0.8525179856115108, 'Median age': 30.6, 'Median household income': 38040.0, 'Nonfamily households percentage': 0.7639751552795031, 'Never married': 0.5063113604488079, 'Count': 1}, '08031001701': {'Non-white population percentage': 0.9054100034025179, 'Median age': 38.3, 'Median household income': 95921.0, 'Nonfamily households percentage': 0.7734414597060314, 'Never married': 0.48314014752370915, 'Count': 1}, '16001002412': {'Non-white population percentage': 0.9544322709163346, 'Median age': 46.3, 'Median household income': 46250.0, 'Nonfamily households percentage': 0.4585547290116897, 'Never married': 0.26018714156353756, 'Count': 1}, '06037207302': {'Non-white population percentage': 0.447631754503002, 'Median age': 34.8, 'Median household income': 40254.0, 'Nonfamily households percentage': 0.8415810768751946, 'Never married': 0.6428249097472925, 'Count': 1}, '06019000100': {'Non-white population percentage': 0.3405842137973897, 'Median age': 34.3, 'Median household income': 12468.0, 'Nonfamily households percentage': 0.8784722222222222, 'Never married': 0.5935544430538173, 'Count': 1}, '04013114100': {'Non-white population percentage': 0.7679914070891515, 'Median age': 33.3, 'Median household income': 60764.0, 'Nonfamily households percentage': 0.7783251231527094, 'Never married': 0.5704070407040704, 'Count': 2}, '48029191900': {'Non-white population percentage': 0.5938864628820961, 'Median age': 33.4, 'Median household income': 32101.0, 'Nonfamily households percentage': 0.39177750906892383, 'Never married': 0.48257372654155495, 'Count': 1}, '48453001100': {'Non-white population percentage': 0.8645225795700716, 'Median age': 37.8, 'Median household income': 131944.0, 'Nonfamily households percentage': 0.747557003257329, 'Never married': 0.49210349462365593, 'Count': 1}, '11001010200': {'Non-white population percentage': 0.4652094717668488, 'Median age': 36.2, 'Median household income': 104215.0, 'Nonfamily households percentage': 0.6378181818181818, 'Never married': 0.47406513872135103, 'Count': 1}, '48201100000': {'Non-white population percentage': 0.708616298811545, 'Median age': 43.5, 'Median household income': 98508.0, 'Nonfamily households percentage': 0.7896382313532827, 'Never married': 0.3600086281276963, 'Count': 2}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "censusgeocode error\n",
      "06067001300\n",
      "06075017802\n",
      "06067001400\n",
      "06001409000\n",
      "08031002403\n",
      "censusgeocode error\n",
      "48113001900\n",
      "48453001100\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 2}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 6}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}, '36047048500': {'Non-white population percentage': 0.583868665239115, 'Median age': 28.5, 'Median household income': 99063.0, 'Nonfamily households percentage': 0.6312968917470525, 'Never married': 0.7487552661815396, 'Count': 1}, '17031070200': {'Non-white population percentage': 0.8266405484818805, 'Median age': 29.0, 'Median household income': 84668.0, 'Nonfamily households percentage': 0.7113760556383507, 'Never married': 0.6242020538440188, 'Count': 2}, '17031310600': {'Non-white population percentage': 0.5857893534384282, 'Median age': 33.5, 'Median household income': 31991.0, 'Nonfamily households percentage': 0.593029215786776, 'Never married': 0.5958656330749355, 'Count': 3}, '17031160800': {'Non-white population percentage': 0.7356700232378002, 'Median age': 33.7, 'Median household income': 57261.0, 'Nonfamily households percentage': 0.4566971490048413, 'Never married': 0.4938357757618051, 'Count': 1}, '06075980900': {'Non-white population percentage': 0.7272727272727273, 'Median age': 37.4, 'Median household income': 103750.0, 'Nonfamily households percentage': 0.5882352941176471, 'Never married': 0.42857142857142855, 'Count': 1}, '06067000700': {'Non-white population percentage': 0.31723596387907343, 'Median age': 38.1, 'Median household income': 12426.0, 'Nonfamily households percentage': 0.8212996389891697, 'Never married': 0.4680015704750687, 'Count': 1}, '04019000100': {'Non-white population percentage': 0.8525179856115108, 'Median age': 30.6, 'Median household income': 38040.0, 'Nonfamily households percentage': 0.7639751552795031, 'Never married': 0.5063113604488079, 'Count': 1}, '08031001701': {'Non-white population percentage': 0.9054100034025179, 'Median age': 38.3, 'Median household income': 95921.0, 'Nonfamily households percentage': 0.7734414597060314, 'Never married': 0.48314014752370915, 'Count': 1}, '16001002412': {'Non-white population percentage': 0.9544322709163346, 'Median age': 46.3, 'Median household income': 46250.0, 'Nonfamily households percentage': 0.4585547290116897, 'Never married': 0.26018714156353756, 'Count': 1}, '06037207302': {'Non-white population percentage': 0.447631754503002, 'Median age': 34.8, 'Median household income': 40254.0, 'Nonfamily households percentage': 0.8415810768751946, 'Never married': 0.6428249097472925, 'Count': 1}, '06019000100': {'Non-white population percentage': 0.3405842137973897, 'Median age': 34.3, 'Median household income': 12468.0, 'Nonfamily households percentage': 0.8784722222222222, 'Never married': 0.5935544430538173, 'Count': 1}, '04013114100': {'Non-white population percentage': 0.7679914070891515, 'Median age': 33.3, 'Median household income': 60764.0, 'Nonfamily households percentage': 0.7783251231527094, 'Never married': 0.5704070407040704, 'Count': 2}, '48029191900': {'Non-white population percentage': 0.5938864628820961, 'Median age': 33.4, 'Median household income': 32101.0, 'Nonfamily households percentage': 0.39177750906892383, 'Never married': 0.48257372654155495, 'Count': 1}, '48453001100': {'Non-white population percentage': 0.8645225795700716, 'Median age': 37.8, 'Median household income': 131944.0, 'Nonfamily households percentage': 0.747557003257329, 'Never married': 0.49210349462365593, 'Count': 1}, '11001010200': {'Non-white population percentage': 0.4652094717668488, 'Median age': 36.2, 'Median household income': 104215.0, 'Nonfamily households percentage': 0.6378181818181818, 'Never married': 0.47406513872135103, 'Count': 1}, '48201100000': {'Non-white population percentage': 0.708616298811545, 'Median age': 43.5, 'Median household income': 98508.0, 'Nonfamily households percentage': 0.7896382313532827, 'Never married': 0.3600086281276963, 'Count': 2}, '06067001300': {'Non-white population percentage': 0.6954079947142385, 'Median age': 31.4, 'Median household income': 50268.0, 'Nonfamily households percentage': 0.8484701311316173, 'Never married': 0.7071977638015374, 'Count': 1}, '06075017802': {'Non-white population percentage': 0.37588097102584184, 'Median age': 37.9, 'Median household income': 73966.0, 'Nonfamily households percentage': 0.6696658097686375, 'Never married': 0.5978835978835979, 'Count': 1}, '06067001400': {'Non-white population percentage': 0.8000791765637372, 'Median age': 35.8, 'Median household income': 40231.0, 'Nonfamily households percentage': 0.8943270300333704, 'Never married': 0.5862489829129374, 'Count': 1}, '06001409000': {'Non-white population percentage': 0.19735099337748344, 'Median age': 29.5, 'Median household income': 44474.0, 'Nonfamily households percentage': 0.2925430210325048, 'Never married': 0.458950201884253, 'Count': 1}, '08031002403': {'Non-white population percentage': 0.7004070556309362, 'Median age': 35.2, 'Median household income': 43447.0, 'Nonfamily households percentage': 0.7085904129093498, 'Never married': 0.5356065178032589, 'Count': 1}, '48113001900': {'Non-white population percentage': 0.8274209012464045, 'Median age': 31.2, 'Median household income': 113016.0, 'Nonfamily households percentage': 0.6775811988381304, 'Never married': 0.533969010727056, 'Count': 1}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "04013114100\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 2}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 6}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}, '36047048500': {'Non-white population percentage': 0.583868665239115, 'Median age': 28.5, 'Median household income': 99063.0, 'Nonfamily households percentage': 0.6312968917470525, 'Never married': 0.7487552661815396, 'Count': 1}, '17031070200': {'Non-white population percentage': 0.8266405484818805, 'Median age': 29.0, 'Median household income': 84668.0, 'Nonfamily households percentage': 0.7113760556383507, 'Never married': 0.6242020538440188, 'Count': 2}, '17031310600': {'Non-white population percentage': 0.5857893534384282, 'Median age': 33.5, 'Median household income': 31991.0, 'Nonfamily households percentage': 0.593029215786776, 'Never married': 0.5958656330749355, 'Count': 3}, '17031160800': {'Non-white population percentage': 0.7356700232378002, 'Median age': 33.7, 'Median household income': 57261.0, 'Nonfamily households percentage': 0.4566971490048413, 'Never married': 0.4938357757618051, 'Count': 1}, '06075980900': {'Non-white population percentage': 0.7272727272727273, 'Median age': 37.4, 'Median household income': 103750.0, 'Nonfamily households percentage': 0.5882352941176471, 'Never married': 0.42857142857142855, 'Count': 1}, '06067000700': {'Non-white population percentage': 0.31723596387907343, 'Median age': 38.1, 'Median household income': 12426.0, 'Nonfamily households percentage': 0.8212996389891697, 'Never married': 0.4680015704750687, 'Count': 1}, '04019000100': {'Non-white population percentage': 0.8525179856115108, 'Median age': 30.6, 'Median household income': 38040.0, 'Nonfamily households percentage': 0.7639751552795031, 'Never married': 0.5063113604488079, 'Count': 1}, '08031001701': {'Non-white population percentage': 0.9054100034025179, 'Median age': 38.3, 'Median household income': 95921.0, 'Nonfamily households percentage': 0.7734414597060314, 'Never married': 0.48314014752370915, 'Count': 1}, '16001002412': {'Non-white population percentage': 0.9544322709163346, 'Median age': 46.3, 'Median household income': 46250.0, 'Nonfamily households percentage': 0.4585547290116897, 'Never married': 0.26018714156353756, 'Count': 1}, '06037207302': {'Non-white population percentage': 0.447631754503002, 'Median age': 34.8, 'Median household income': 40254.0, 'Nonfamily households percentage': 0.8415810768751946, 'Never married': 0.6428249097472925, 'Count': 1}, '06019000100': {'Non-white population percentage': 0.3405842137973897, 'Median age': 34.3, 'Median household income': 12468.0, 'Nonfamily households percentage': 0.8784722222222222, 'Never married': 0.5935544430538173, 'Count': 1}, '04013114100': {'Non-white population percentage': 0.7679914070891515, 'Median age': 33.3, 'Median household income': 60764.0, 'Nonfamily households percentage': 0.7783251231527094, 'Never married': 0.5704070407040704, 'Count': 2}, '48029191900': {'Non-white population percentage': 0.5938864628820961, 'Median age': 33.4, 'Median household income': 32101.0, 'Nonfamily households percentage': 0.39177750906892383, 'Never married': 0.48257372654155495, 'Count': 1}, '48453001100': {'Non-white population percentage': 0.8645225795700716, 'Median age': 37.8, 'Median household income': 131944.0, 'Nonfamily households percentage': 0.747557003257329, 'Never married': 0.49210349462365593, 'Count': 2}, '11001010200': {'Non-white population percentage': 0.4652094717668488, 'Median age': 36.2, 'Median household income': 104215.0, 'Nonfamily households percentage': 0.6378181818181818, 'Never married': 0.47406513872135103, 'Count': 1}, '48201100000': {'Non-white population percentage': 0.708616298811545, 'Median age': 43.5, 'Median household income': 98508.0, 'Nonfamily households percentage': 0.7896382313532827, 'Never married': 0.3600086281276963, 'Count': 2}, '06067001300': {'Non-white population percentage': 0.6954079947142385, 'Median age': 31.4, 'Median household income': 50268.0, 'Nonfamily households percentage': 0.8484701311316173, 'Never married': 0.7071977638015374, 'Count': 1}, '06075017802': {'Non-white population percentage': 0.37588097102584184, 'Median age': 37.9, 'Median household income': 73966.0, 'Nonfamily households percentage': 0.6696658097686375, 'Never married': 0.5978835978835979, 'Count': 1}, '06067001400': {'Non-white population percentage': 0.8000791765637372, 'Median age': 35.8, 'Median household income': 40231.0, 'Nonfamily households percentage': 0.8943270300333704, 'Never married': 0.5862489829129374, 'Count': 1}, '06001409000': {'Non-white population percentage': 0.19735099337748344, 'Median age': 29.5, 'Median household income': 44474.0, 'Nonfamily households percentage': 0.2925430210325048, 'Never married': 0.458950201884253, 'Count': 1}, '08031002403': {'Non-white population percentage': 0.7004070556309362, 'Median age': 35.2, 'Median household income': 43447.0, 'Nonfamily households percentage': 0.7085904129093498, 'Never married': 0.5356065178032589, 'Count': 1}, '48113001900': {'Non-white population percentage': 0.8274209012464045, 'Median age': 31.2, 'Median household income': 113016.0, 'Nonfamily households percentage': 0.6775811988381304, 'Never married': 0.533969010727056, 'Count': 1}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06073006500\n",
      "06037207900\n",
      "06001983200\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 2}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 1}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 6}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}, '36047048500': {'Non-white population percentage': 0.583868665239115, 'Median age': 28.5, 'Median household income': 99063.0, 'Nonfamily households percentage': 0.6312968917470525, 'Never married': 0.7487552661815396, 'Count': 1}, '17031070200': {'Non-white population percentage': 0.8266405484818805, 'Median age': 29.0, 'Median household income': 84668.0, 'Nonfamily households percentage': 0.7113760556383507, 'Never married': 0.6242020538440188, 'Count': 2}, '17031310600': {'Non-white population percentage': 0.5857893534384282, 'Median age': 33.5, 'Median household income': 31991.0, 'Nonfamily households percentage': 0.593029215786776, 'Never married': 0.5958656330749355, 'Count': 3}, '17031160800': {'Non-white population percentage': 0.7356700232378002, 'Median age': 33.7, 'Median household income': 57261.0, 'Nonfamily households percentage': 0.4566971490048413, 'Never married': 0.4938357757618051, 'Count': 1}, '06075980900': {'Non-white population percentage': 0.7272727272727273, 'Median age': 37.4, 'Median household income': 103750.0, 'Nonfamily households percentage': 0.5882352941176471, 'Never married': 0.42857142857142855, 'Count': 1}, '06067000700': {'Non-white population percentage': 0.31723596387907343, 'Median age': 38.1, 'Median household income': 12426.0, 'Nonfamily households percentage': 0.8212996389891697, 'Never married': 0.4680015704750687, 'Count': 1}, '04019000100': {'Non-white population percentage': 0.8525179856115108, 'Median age': 30.6, 'Median household income': 38040.0, 'Nonfamily households percentage': 0.7639751552795031, 'Never married': 0.5063113604488079, 'Count': 1}, '08031001701': {'Non-white population percentage': 0.9054100034025179, 'Median age': 38.3, 'Median household income': 95921.0, 'Nonfamily households percentage': 0.7734414597060314, 'Never married': 0.48314014752370915, 'Count': 1}, '16001002412': {'Non-white population percentage': 0.9544322709163346, 'Median age': 46.3, 'Median household income': 46250.0, 'Nonfamily households percentage': 0.4585547290116897, 'Never married': 0.26018714156353756, 'Count': 1}, '06037207302': {'Non-white population percentage': 0.447631754503002, 'Median age': 34.8, 'Median household income': 40254.0, 'Nonfamily households percentage': 0.8415810768751946, 'Never married': 0.6428249097472925, 'Count': 1}, '06019000100': {'Non-white population percentage': 0.3405842137973897, 'Median age': 34.3, 'Median household income': 12468.0, 'Nonfamily households percentage': 0.8784722222222222, 'Never married': 0.5935544430538173, 'Count': 1}, '04013114100': {'Non-white population percentage': 0.7679914070891515, 'Median age': 33.3, 'Median household income': 60764.0, 'Nonfamily households percentage': 0.7783251231527094, 'Never married': 0.5704070407040704, 'Count': 3}, '48029191900': {'Non-white population percentage': 0.5938864628820961, 'Median age': 33.4, 'Median household income': 32101.0, 'Nonfamily households percentage': 0.39177750906892383, 'Never married': 0.48257372654155495, 'Count': 1}, '48453001100': {'Non-white population percentage': 0.8645225795700716, 'Median age': 37.8, 'Median household income': 131944.0, 'Nonfamily households percentage': 0.747557003257329, 'Never married': 0.49210349462365593, 'Count': 2}, '11001010200': {'Non-white population percentage': 0.4652094717668488, 'Median age': 36.2, 'Median household income': 104215.0, 'Nonfamily households percentage': 0.6378181818181818, 'Never married': 0.47406513872135103, 'Count': 1}, '48201100000': {'Non-white population percentage': 0.708616298811545, 'Median age': 43.5, 'Median household income': 98508.0, 'Nonfamily households percentage': 0.7896382313532827, 'Never married': 0.3600086281276963, 'Count': 2}, '06067001300': {'Non-white population percentage': 0.6954079947142385, 'Median age': 31.4, 'Median household income': 50268.0, 'Nonfamily households percentage': 0.8484701311316173, 'Never married': 0.7071977638015374, 'Count': 1}, '06075017802': {'Non-white population percentage': 0.37588097102584184, 'Median age': 37.9, 'Median household income': 73966.0, 'Nonfamily households percentage': 0.6696658097686375, 'Never married': 0.5978835978835979, 'Count': 1}, '06067001400': {'Non-white population percentage': 0.8000791765637372, 'Median age': 35.8, 'Median household income': 40231.0, 'Nonfamily households percentage': 0.8943270300333704, 'Never married': 0.5862489829129374, 'Count': 1}, '06001409000': {'Non-white population percentage': 0.19735099337748344, 'Median age': 29.5, 'Median household income': 44474.0, 'Nonfamily households percentage': 0.2925430210325048, 'Never married': 0.458950201884253, 'Count': 1}, '08031002403': {'Non-white population percentage': 0.7004070556309362, 'Median age': 35.2, 'Median household income': 43447.0, 'Nonfamily households percentage': 0.7085904129093498, 'Never married': 0.5356065178032589, 'Count': 1}, '48113001900': {'Non-white population percentage': 0.8274209012464045, 'Median age': 31.2, 'Median household income': 113016.0, 'Nonfamily households percentage': 0.6775811988381304, 'Never married': 0.533969010727056, 'Count': 1}, '06073006500': {'Non-white population percentage': 0.746819733167856, 'Median age': 44.2, 'Median household income': 55273.0, 'Nonfamily households percentage': 0.699748743718593, 'Never married': 0.4254668930390492, 'Count': 1}, '06037207900': {'Non-white population percentage': 0.3874324594756854, 'Median age': 32.7, 'Median household income': 84882.0, 'Nonfamily households percentage': 0.700907441016334, 'Never married': 0.5831356480483071, 'Count': 1}}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "42101037600\n",
      "{'06037189701': {'Non-white population percentage': 0.7764958411591092, 'Median age': 41.3, 'Median household income': 90968.0, 'Nonfamily households percentage': 0.5419320594479831, 'Never married': 0.38815180499845725, 'Count': 1}, '06037191301': {'Non-white population percentage': 0.29564879564879565, 'Median age': 35.3, 'Median household income': 47674.0, 'Nonfamily households percentage': 0.4983853606027987, 'Never married': 0.5617566331198536, 'Count': 1}, '13121000500': {'Non-white population percentage': 0.6905958363244795, 'Median age': 31.2, 'Median household income': 85750.0, 'Nonfamily households percentage': 0.6514983351831298, 'Never married': 0.5600414078674948, 'Count': 1}, '13121002600': {'Non-white population percentage': 0.025886325267304444, 'Median age': 25.0, 'Median household income': 26350.0, 'Nonfamily households percentage': 0.48403361344537815, 'Never married': 0.6368460955269143, 'Count': 2}, '25017353101': {'Non-white population percentage': 0.6301944338543652, 'Median age': 27.7, 'Median household income': 99375.0, 'Nonfamily households percentage': 0.6041909196740396, 'Never married': 0.7213868003341688, 'Count': 2}, '25025010203': {'Non-white population percentage': 0.7019713954387321, 'Median age': 27.5, 'Median household income': 34677.0, 'Nonfamily households percentage': 0.7984084880636605, 'Never married': 0.7280082987551867, 'Count': 1}, '06037189702': {'Non-white population percentage': 0.791151284490961, 'Median age': 40.9, 'Median household income': 78750.0, 'Nonfamily households percentage': 0.7496038034865293, 'Never married': 0.525377969762419, 'Count': 1}, '06073001300': {'Non-white population percentage': 0.7672894133071124, 'Median age': 31.6, 'Median household income': 55859.0, 'Nonfamily households percentage': 0.7047123623011016, 'Never married': 0.5990783410138248, 'Count': 1}, '25025000803': {'Non-white population percentage': 0.6511107559533322, 'Median age': 21.3, 'Median household income': 67647.0, 'Nonfamily households percentage': 0.8315789473684211, 'Never married': 0.9028228423101882, 'Count': 1}, '26163517200': {'Non-white population percentage': 0.3575302461410096, 'Median age': 29.9, 'Median household income': 49612.0, 'Nonfamily households percentage': 0.8991494532199271, 'Never married': 0.7292980243799916, 'Count': 1}, '42101001600': {'Non-white population percentage': 0.9102167182662538, 'Median age': 33.4, 'Median household income': 95300.0, 'Nonfamily households percentage': 0.6053604436229205, 'Never married': 0.4617752693689071, 'Count': 1}, '36061005000': {'Non-white population percentage': 0.8285086843681374, 'Median age': 36.3, 'Median household income': 137986.0, 'Nonfamily households percentage': 0.714235746764603, 'Never married': 0.545981951009884, 'Count': 1}, '24031702500': {'Non-white population percentage': 0.4157509157509158, 'Median age': 34.8, 'Median household income': 66868.0, 'Nonfamily households percentage': 0.7005440696409141, 'Never married': 0.5344178340111463, 'Count': 1}, '12057003900': {'Non-white population percentage': 0.463768115942029, 'Median age': 33.4, 'Median household income': 24743.0, 'Nonfamily households percentage': 0.6495791889824024, 'Never married': 0.6274509803921569, 'Count': 1}, '13121009502': {'Non-white population percentage': 0.7241091314031181, 'Median age': 41.7, 'Median household income': 89298.0, 'Nonfamily households percentage': 0.6366033755274262, 'Never married': 0.3967611336032389, 'Count': 1}, '47037019500': {'Non-white population percentage': 0.7698655256723717, 'Median age': 32.6, 'Median household income': 67333.0, 'Nonfamily households percentage': 0.8106348345089528, 'Never married': 0.5993836671802774, 'Count': 1}, '22071013500': {'Non-white population percentage': 0.9292828685258964, 'Median age': 53.4, 'Median household income': 60594.0, 'Nonfamily households percentage': 0.7837226827430294, 'Never married': 0.496996996996997, 'Count': 1}, '48201310100': {'Non-white population percentage': 0.4910394265232975, 'Median age': 34.0, 'Median household income': 52145.0, 'Nonfamily households percentage': 0.6215123331985443, 'Never married': 0.516090866067203, 'Count': 3}, '48453002316': {'Non-white population percentage': 0.6749595469255664, 'Median age': 28.8, 'Median household income': 35516.0, 'Nonfamily households percentage': 0.6416475972540046, 'Never married': 0.6678321678321678, 'Count': 1}, '48113020400': {'Non-white population percentage': 0.6477878464818764, 'Median age': 35.8, 'Median household income': 66858.0, 'Nonfamily households percentage': 0.696849087893864, 'Never married': 0.4858686616791355, 'Count': 2}, '35001002100': {'Non-white population percentage': 0.6017014694508894, 'Median age': 28.7, 'Median household income': 21932.0, 'Nonfamily households percentage': 0.7982233502538071, 'Never married': 0.7161458333333334, 'Count': 1}, '16027021100': {'Non-white population percentage': 0.8951859325454021, 'Median age': 31.1, 'Median household income': 54216.0, 'Nonfamily households percentage': 0.28021501647303626, 'Never married': 0.26968160937747504, 'Count': 2}, '26163531900': {'Non-white population percentage': 0.2713523131672598, 'Median age': 22.2, 'Median household income': 30583.0, 'Nonfamily households percentage': 0.31800766283524906, 'Never married': 0.8136574074074074, 'Count': 1}, '26163520800': {'Non-white population percentage': 0.32104934415990005, 'Median age': 45.2, 'Median household income': 68100.0, 'Nonfamily households percentage': 0.7852292020373515, 'Never married': 0.45896257386736705, 'Count': 1}, '13121000200': {'Non-white population percentage': 0.9108564151544094, 'Median age': 38.9, 'Median household income': 116094.0, 'Nonfamily households percentage': 0.5423118473172488, 'Never married': 0.4270813931830881, 'Count': 1}, '06037216700': {'Non-white population percentage': 0.41620333598093723, 'Median age': 35.7, 'Median household income': 65234.0, 'Nonfamily households percentage': 0.5300193673337638, 'Never married': 0.5449984321103795, 'Count': 1}, '06067001101': {'Non-white population percentage': 0.6887477313974592, 'Median age': 39.8, 'Median household income': 32639.0, 'Nonfamily households percentage': 0.853250773993808, 'Never married': 0.5998080614203455, 'Count': 1}, '06037273502': {'Non-white population percentage': 0.8361053361053361, 'Median age': 36.8, 'Median household income': 69225.0, 'Nonfamily households percentage': 0.7043108682452944, 'Never married': 0.5358618099887346, 'Count': 2}, '39095004800': {'Non-white population percentage': 0.7154531946508172, 'Median age': 35.2, 'Median household income': 21833.0, 'Nonfamily households percentage': 0.4413919413919414, 'Never married': 0.3713759779107225, 'Count': 1}, '17031330100': {'Non-white population percentage': 0.5004996055745464, 'Median age': 34.6, 'Median household income': 97897.0, 'Nonfamily households percentage': 0.6250454050127134, 'Never married': 0.473030303030303, 'Count': 5}, '36061003001': {'Non-white population percentage': 0.5869565217391305, 'Median age': 30.0, 'Median household income': 72258.0, 'Nonfamily households percentage': 0.7647058823529411, 'Never married': 0.7122190648411263, 'Count': 1}, '26161400100': {'Non-white population percentage': 0.668695652173913, 'Median age': 22.9, 'Median household income': 34625.0, 'Nonfamily households percentage': 0.8806078147612156, 'Never married': 0.8582608695652174, 'Count': 2}, '39035107701': {'Non-white population percentage': 0.6139283299526708, 'Median age': 28.2, 'Median household income': 56332.0, 'Nonfamily households percentage': 0.851526125193999, 'Never married': 0.7283478260869565, 'Count': 1}, '06001983200': {'Non-white population percentage': 0.5532286212914486, 'Median age': 37.9, 'Median household income': 159044.0, 'Nonfamily households percentage': 0.6561514195583596, 'Never married': 0.4722222222222222, 'Count': 2}, '06037700501': {'Non-white population percentage': 0.6933638443935927, 'Median age': 37.8, 'Median household income': 85792.0, 'Nonfamily households percentage': 0.7579591836734694, 'Never married': 0.6066137566137566, 'Count': 1}, '53033004900': {'Non-white population percentage': 0.8898909678287791, 'Median age': 30.6, 'Median household income': 77075.0, 'Nonfamily households percentage': 0.7234949387320192, 'Never married': 0.6627108950529025, 'Count': 3}, '36061008300': {'Non-white population percentage': 0.5989823116064938, 'Median age': 35.3, 'Median household income': 69485.0, 'Nonfamily households percentage': 0.6168491194669206, 'Never married': 0.6593349044252422, 'Count': 1}, '04013421202': {'Non-white population percentage': 0.7662274280136652, 'Median age': 33.6, 'Median household income': 42614.0, 'Nonfamily households percentage': 0.34110787172011664, 'Never married': 0.36403371838901033, 'Count': 1}, '06037195803': {'Non-white population percentage': 0.6166728693710458, 'Median age': 33.5, 'Median household income': 63261.0, 'Nonfamily households percentage': 0.6078767123287672, 'Never married': 0.6033360455655004, 'Count': 1}, '36061003100': {'Non-white population percentage': 0.6080882352941176, 'Median age': 27.1, 'Median household income': 202404.0, 'Nonfamily households percentage': 0.5850066934404283, 'Never married': 0.7155712050078247, 'Count': 1}, '37119000700': {'Non-white population percentage': 0.43524416135881105, 'Median age': 32.3, 'Median household income': 49426.0, 'Nonfamily households percentage': 0.5326876513317191, 'Never married': 0.4904076738609113, 'Count': 1}, '36047031500': {'Non-white population percentage': 0.2937604690117253, 'Median age': 35.3, 'Median household income': 53563.0, 'Nonfamily households percentage': 0.6420962931401789, 'Never married': 0.5892453682783552, 'Count': 1}, '17031241400': {'Non-white population percentage': 0.8223619571625074, 'Median age': 31.6, 'Median household income': 101480.0, 'Nonfamily households percentage': 0.6396023198011599, 'Never married': 0.5406911928651059, 'Count': 6}, '29095016800': {'Non-white population percentage': 0.8677745664739884, 'Median age': 30.8, 'Median household income': 45084.0, 'Nonfamily households percentage': 0.7335069444444444, 'Never married': 0.5886987231730508, 'Count': 2}, '41051001102': {'Non-white population percentage': 0.8498498498498499, 'Median age': 34.9, 'Median household income': 75500.0, 'Nonfamily households percentage': 0.5406976744186046, 'Never married': 0.5326160053799597, 'Count': 1}, '06001402900': {'Non-white population percentage': 0.2575864502470007, 'Median age': 37.1, 'Median household income': 26786.0, 'Nonfamily households percentage': 0.7983870967741935, 'Never married': 0.5543398978847557, 'Count': 1}, '06037190202': {'Non-white population percentage': 0.6391595615103532, 'Median age': 34.4, 'Median household income': 35422.0, 'Nonfamily households percentage': 0.8658704639412035, 'Never married': 0.7176397899289465, 'Count': 1}, '04013218300': {'Non-white population percentage': 0.8657573582196698, 'Median age': 45.8, 'Median household income': 37361.0, 'Nonfamily households percentage': 0.6708385481852316, 'Never married': 0.351365144169431, 'Count': 1}, '22071007700': {'Non-white population percentage': 0.8486556808326106, 'Median age': 34.2, 'Median household income': 73684.0, 'Nonfamily households percentage': 0.7013422818791947, 'Never married': 0.5709090909090909, 'Count': 1}, '36081053500': {'Non-white population percentage': 0.720682302771855, 'Median age': 32.2, 'Median household income': 59417.0, 'Nonfamily households percentage': 0.19331742243436753, 'Never married': 0.48347497639282344, 'Count': 1}, '17031241500': {'Non-white population percentage': 0.8285812435589145, 'Median age': 29.6, 'Median household income': 123304.0, 'Nonfamily households percentage': 0.6421677802524127, 'Never married': 0.6034823901859913, 'Count': 1}, '36047048500': {'Non-white population percentage': 0.583868665239115, 'Median age': 28.5, 'Median household income': 99063.0, 'Nonfamily households percentage': 0.6312968917470525, 'Never married': 0.7487552661815396, 'Count': 1}, '17031070200': {'Non-white population percentage': 0.8266405484818805, 'Median age': 29.0, 'Median household income': 84668.0, 'Nonfamily households percentage': 0.7113760556383507, 'Never married': 0.6242020538440188, 'Count': 2}, '17031310600': {'Non-white population percentage': 0.5857893534384282, 'Median age': 33.5, 'Median household income': 31991.0, 'Nonfamily households percentage': 0.593029215786776, 'Never married': 0.5958656330749355, 'Count': 3}, '17031160800': {'Non-white population percentage': 0.7356700232378002, 'Median age': 33.7, 'Median household income': 57261.0, 'Nonfamily households percentage': 0.4566971490048413, 'Never married': 0.4938357757618051, 'Count': 1}, '06075980900': {'Non-white population percentage': 0.7272727272727273, 'Median age': 37.4, 'Median household income': 103750.0, 'Nonfamily households percentage': 0.5882352941176471, 'Never married': 0.42857142857142855, 'Count': 1}, '06067000700': {'Non-white population percentage': 0.31723596387907343, 'Median age': 38.1, 'Median household income': 12426.0, 'Nonfamily households percentage': 0.8212996389891697, 'Never married': 0.4680015704750687, 'Count': 1}, '04019000100': {'Non-white population percentage': 0.8525179856115108, 'Median age': 30.6, 'Median household income': 38040.0, 'Nonfamily households percentage': 0.7639751552795031, 'Never married': 0.5063113604488079, 'Count': 1}, '08031001701': {'Non-white population percentage': 0.9054100034025179, 'Median age': 38.3, 'Median household income': 95921.0, 'Nonfamily households percentage': 0.7734414597060314, 'Never married': 0.48314014752370915, 'Count': 1}, '16001002412': {'Non-white population percentage': 0.9544322709163346, 'Median age': 46.3, 'Median household income': 46250.0, 'Nonfamily households percentage': 0.4585547290116897, 'Never married': 0.26018714156353756, 'Count': 1}, '06037207302': {'Non-white population percentage': 0.447631754503002, 'Median age': 34.8, 'Median household income': 40254.0, 'Nonfamily households percentage': 0.8415810768751946, 'Never married': 0.6428249097472925, 'Count': 1}, '06019000100': {'Non-white population percentage': 0.3405842137973897, 'Median age': 34.3, 'Median household income': 12468.0, 'Nonfamily households percentage': 0.8784722222222222, 'Never married': 0.5935544430538173, 'Count': 1}, '04013114100': {'Non-white population percentage': 0.7679914070891515, 'Median age': 33.3, 'Median household income': 60764.0, 'Nonfamily households percentage': 0.7783251231527094, 'Never married': 0.5704070407040704, 'Count': 3}, '48029191900': {'Non-white population percentage': 0.5938864628820961, 'Median age': 33.4, 'Median household income': 32101.0, 'Nonfamily households percentage': 0.39177750906892383, 'Never married': 0.48257372654155495, 'Count': 1}, '48453001100': {'Non-white population percentage': 0.8645225795700716, 'Median age': 37.8, 'Median household income': 131944.0, 'Nonfamily households percentage': 0.747557003257329, 'Never married': 0.49210349462365593, 'Count': 2}, '11001010200': {'Non-white population percentage': 0.4652094717668488, 'Median age': 36.2, 'Median household income': 104215.0, 'Nonfamily households percentage': 0.6378181818181818, 'Never married': 0.47406513872135103, 'Count': 1}, '48201100000': {'Non-white population percentage': 0.708616298811545, 'Median age': 43.5, 'Median household income': 98508.0, 'Nonfamily households percentage': 0.7896382313532827, 'Never married': 0.3600086281276963, 'Count': 2}, '06067001300': {'Non-white population percentage': 0.6954079947142385, 'Median age': 31.4, 'Median household income': 50268.0, 'Nonfamily households percentage': 0.8484701311316173, 'Never married': 0.7071977638015374, 'Count': 1}, '06075017802': {'Non-white population percentage': 0.37588097102584184, 'Median age': 37.9, 'Median household income': 73966.0, 'Nonfamily households percentage': 0.6696658097686375, 'Never married': 0.5978835978835979, 'Count': 1}, '06067001400': {'Non-white population percentage': 0.8000791765637372, 'Median age': 35.8, 'Median household income': 40231.0, 'Nonfamily households percentage': 0.8943270300333704, 'Never married': 0.5862489829129374, 'Count': 1}, '06001409000': {'Non-white population percentage': 0.19735099337748344, 'Median age': 29.5, 'Median household income': 44474.0, 'Nonfamily households percentage': 0.2925430210325048, 'Never married': 0.458950201884253, 'Count': 1}, '08031002403': {'Non-white population percentage': 0.7004070556309362, 'Median age': 35.2, 'Median household income': 43447.0, 'Nonfamily households percentage': 0.7085904129093498, 'Never married': 0.5356065178032589, 'Count': 1}, '48113001900': {'Non-white population percentage': 0.8274209012464045, 'Median age': 31.2, 'Median household income': 113016.0, 'Nonfamily households percentage': 0.6775811988381304, 'Never married': 0.533969010727056, 'Count': 1}, '06073006500': {'Non-white population percentage': 0.746819733167856, 'Median age': 44.2, 'Median household income': 55273.0, 'Nonfamily households percentage': 0.699748743718593, 'Never married': 0.4254668930390492, 'Count': 1}, '06037207900': {'Non-white population percentage': 0.3874324594756854, 'Median age': 32.7, 'Median household income': 84882.0, 'Nonfamily households percentage': 0.700907441016334, 'Never married': 0.5831356480483071, 'Count': 1}, '42101037600': {'Non-white population percentage': 0.4631268436578171, 'Median age': 33.2, 'Median household income': 50556.0, 'Nonfamily households percentage': 0.7025796661608498, 'Never married': 0.6404688038607377, 'Count': 1}}\n"
     ]
    }
   ],
   "source": [
    "# print(gdfs)\n",
    "# print(venue_count(gdfs))\n",
    "tr = get_tracts(venue_count(gdfs))\n",
    "print(tr)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 623,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "76\n"
     ]
    }
   ],
   "source": [
    "import statsmodels\n",
    "\n",
    "print(len(tr))\n",
    "\n",
    "nw = []\n",
    "ma = []\n",
    "mhi = []\n",
    "nfh = []\n",
    "nm = []\n",
    "c = []\n",
    "\n",
    "for k,vl in tr.items():\n",
    "    v = list(vl.values())\n",
    "#     print(v)\n",
    "    nw.append(v[0])\n",
    "    ma.append(v[1])\n",
    "    mhi.append(v[2])\n",
    "    nfh.append(v[3])\n",
    "    nm.append(v[4])\n",
    "    c.append(v[5])\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 626,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "module 'statsmodels' has no attribute 'regression'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-626-c932b72c2abe>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mstatsmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mregression\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinear_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOLS\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mnw\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mma\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmhi\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnfh\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: module 'statsmodels' has no attribute 'regression'"
     ]
    }
   ],
   "source": [
    "statsmodels.regression.linear_model.OLS(c, [nw,ma,mhi,nfh,nm,c])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 629,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: statsmodels in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (0.10.1)\n",
      "Requirement already satisfied: pandas>=0.19 in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (from statsmodels) (0.25.1)\n",
      "Requirement already satisfied: numpy>=1.11 in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (from statsmodels) (1.16.5)\n",
      "Requirement already satisfied: patsy>=0.4.0 in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (from statsmodels) (0.5.1)\n",
      "Requirement already satisfied: scipy>=0.18 in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (from statsmodels) (1.3.1)\n",
      "Requirement already satisfied: pytz>=2017.2 in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (from pandas>=0.19->statsmodels) (2019.2)\n",
      "Requirement already satisfied: python-dateutil>=2.6.1 in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (from pandas>=0.19->statsmodels) (2.8.0)\n",
      "Requirement already satisfied: six in /Users/kalebtsegaye/miniconda3/envs/env1/lib/python3.7/site-packages (from patsy>=0.4.0->statsmodels) (1.12.0)\n"
     ]
    }
   ],
   "source": [
    "!pip install statsmodels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 431,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[{'B25034_010E': 11.0, 'state': '02', 'county': '170', 'tract': '000300'}]\n"
     ]
    }
   ],
   "source": [
    "def analyze_tracts(l):\n",
    "    for ()\n",
    "    \n",
    "cen = Census(census_key)\n",
    "# a = c.acs5.get(('NAME', 'B25034_010E'), {'for': 'state:{}'.format(states.MD.fips)})\n",
    "b = c.acs5.state_county_tract('B25034_010E', states.AK.fips, '170', '000300')\n",
    "# b = c.acs5.state_place('B25034_010E', states.CA.fips, 'Los Angeles')\n",
    "\n",
    "\n",
    "\n",
    "print(b)\n",
    "\n",
    "# a = c.state_county_tract(tract= '216600')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    884\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 885\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    886\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    474\u001b[0m         \"\"\"\n\u001b[0;32m--> 475\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    476\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: ",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-20-dfed8d2dc3b9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mreq_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#travis scott, 2018-10-31, 2018-12-01\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-12-e117c773f566>\u001b[0m in \u001b[0;36mreq_input\u001b[0;34m()\u001b[0m\n\u001b[1;32m    104\u001b[0m         \u001b[0mis_venue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m         \u001b[0mcmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Venue search (0) or event search (1)?\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    107\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    108\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mcmd\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    858\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    859\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 860\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    861\u001b[0m         )\n\u001b[1;32m    862\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/miniconda3/envs/env1/lib/python3.7/site-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    888\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    889\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 890\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    891\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    892\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "req_input()\n",
    "\n",
    "#travis scott, 2018-10-31, 2018-12-01"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis\n",
    "\n",
    "[Back to top](#Table-of-Contents)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. query for hipster tagged artists. or popularity <30 with followers < 50000\n",
    "\n",
    "2. generate the related artists with functions written\n",
    "\n",
    "3. find 'tours' using 1 week cutoff - use longest one with at least one date in last 2 years\n",
    "\n",
    "4. moving pandas - plot all trajectories\n",
    "\n",
    "analysis should be several genres\n",
    "\n",
    "by the end, each genre should have 4 examples of average trajectories with points labeled by importance\n",
    "\n",
    "also, use cenpy on these points to get more info about them, certain socioeconomic factors.\n",
    "\n",
    "run ols, other stuff lol\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 436,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "related_artists search 1\n",
      "['detroit hip hop', 'detroit trap', 'dmv rap', 'boom bap', 'new orleans rap', 'detroit trap', 'cali rap', 'underground hip hop', 'west coast trap', 'atl hip hop', 'detroit trap', 'west coast trap', 'underground hip hop', 'detroit trap', 'boom bap', 'underground hip hop', 'west coast trap']\n",
      "[('Larry June', '1grN0519h2zYqpRtYbDZAl', 3, 30867), ('LNDN DRGS', '65d2Cw70rLuVwEZwQpHtFW', 3, 9794), ('Dusty McFly', '0ekbxDROhz27q5QvYDCOsj', 2, 1816), ('Payroll Giovanni & Cardo', '70Wt3o0gTumIypKychnX6U', 2, 6701), ('Premo Rice', '4pTta0pLvML8AM2AwfgJyE', 1, 3454), ('Nolan The Ninja', '1HnXpWThntjKhdC6Kp3V3u', 1, 3311), ('Ren Gettz', '5gvvV1muWeUh3BNDT0YnTV', 1, 235), ('Oba Rowland', '4Mou7Vl6XtRSQIBdv2XTld', 1, 1343), ('Jonah Cruzz', '21NrnXKmcu8PF48F8SwulJ', 1, 3339), ('Dot Demo', '2ID5ZEW2EbdUo1oEjwJnD3', 1, 3873), ('Babyface Ray', '3zZ88AwlTwfCJkowsFCvLA', 1, 13696)]\n",
      "related_artists ra_help 3\n",
      "111\n",
      "78\n"
     ]
    }
   ],
   "source": [
    "import folium\n",
    "# se = sp.search(q = 'genre:%22southern%20hip%20hop%22', type = 'album', market = 'US')\n",
    "\n",
    "#         for a in sp.artist_related_artists(artid)['artists']:\n",
    "\n",
    "\n",
    "def compile_tours(name, spid = -1, followers = -1, lessthan = True):\n",
    "    if (spid != -1):\n",
    "        artists = related_artists(artid = name, followers = followers, lessthan = lessthan)\n",
    "    else:\n",
    "        artists = related_artists(artname = name, followers = followers, lessthan = lessthan)\n",
    "\n",
    "    gl = []\n",
    "\n",
    "    for a in artists:\n",
    "        an = get_artist_id(a[0].replace(' ', '+')) if not (a[0]+' ').isspace() else print('need artist!')\n",
    "    \n",
    "        if an != -1:\n",
    "            req = requests.get(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "#             print(\"https://api.songkick.com/api/3.0/artists/\"+ an +\"/gigography.json?apikey=\"+ api_key + '&per_page=20&order=desc')\n",
    "            g = find_tour(req.json(), a[0])\n",
    "            if g is not int:\n",
    "                gl.append(g)\n",
    "            \n",
    "    return gl\n",
    "\n",
    "ts = compile_tours('supakaine', followers = 50000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(ts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgCiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgTF9OT19UT1VDSCA9IGZhbHNlOwogICAgICAgICAgICBMX0RJU0FCTEVfM0QgPSBmYWxzZTsKICAgICAgICA8L3NjcmlwdD4KICAgIAogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS0xLjEyLjQubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5qcyI+PC9zY3JpcHQ+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzMuMi4wL2Nzcy9ib290c3RyYXAubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLXRoZW1lLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC42LjMvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL0xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLzIuMC4yL2xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3Jhd2Nkbi5naXRoYWNrLmNvbS9weXRob24tdmlzdWFsaXphdGlvbi9mb2xpdW0vbWFzdGVyL2ZvbGl1bS90ZW1wbGF0ZXMvbGVhZmxldC5hd2Vzb21lLnJvdGF0ZS5jc3MiLz4KICAgIDxzdHlsZT5odG1sLCBib2R5IHt3aWR0aDogMTAwJTtoZWlnaHQ6IDEwMCU7bWFyZ2luOiAwO3BhZGRpbmc6IDA7fTwvc3R5bGU+CiAgICA8c3R5bGU+I21hcCB7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7cmlnaHQ6MDtsZWZ0OjA7fTwvc3R5bGU+CiAgICAKICAgICAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwKICAgICAgICAgICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgICAgICAgICAgPHN0eWxlPgogICAgICAgICAgICAgICAgI21hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSB7CiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgbGVmdDogMC4wJTsKICAgICAgICAgICAgICAgICAgICB0b3A6IDAuMCU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIDwvc3R5bGU+CiAgICAgICAgCjwvaGVhZD4KPGJvZHk+ICAgIAogICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbGl1bS1tYXAiIGlkPSJtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUiID48L2Rpdj4KICAgICAgICAKPC9ib2R5Pgo8c2NyaXB0PiAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1ID0gTC5tYXAoCiAgICAgICAgICAgICAgICAibWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IFs0MC4wLCAtOTUuMF0sCiAgICAgICAgICAgICAgICAgICAgY3JzOiBMLkNSUy5FUFNHMzg1NywKICAgICAgICAgICAgICAgICAgICB6b29tOiA0LAogICAgICAgICAgICAgICAgICAgIHpvb21Db250cm9sOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIHByZWZlckNhbnZhczogZmFsc2UsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CgogICAgICAgICAgICAKCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHRpbGVfbGF5ZXJfZGQzY2MxMTRiYjIzNDlhMDhjY2Y0ZmYxNzI0MjRjNGUgPSBMLnRpbGVMYXllcigKICAgICAgICAgICAgICAgICJodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZyIsCiAgICAgICAgICAgICAgICB7ImF0dHJpYnV0aW9uIjogIkRhdGEgYnkgXHUwMDI2Y29weTsgXHUwMDNjYSBocmVmPVwiaHR0cDovL29wZW5zdHJlZXRtYXAub3JnXCJcdTAwM2VPcGVuU3RyZWV0TWFwXHUwMDNjL2FcdTAwM2UsIHVuZGVyIFx1MDAzY2EgaHJlZj1cImh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCJcdTAwM2VPRGJMXHUwMDNjL2FcdTAwM2UuIiwgImRldGVjdFJldGluYSI6IGZhbHNlLCAibWF4TmF0aXZlWm9vbSI6IDE4LCAibWF4Wm9vbSI6IDE4LCAibWluWm9vbSI6IDAsICJub1dyYXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic3ViZG9tYWlucyI6ICJhYmMiLCAidG1zIjogZmFsc2V9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzZmYjE1MzJiOGQzMDQ3NTVhYmJhMGE4MmRhOTliYTBkID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjkuNzUzOTMsIC05NS4zNjQwNl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yZTliNmViMWZjYTA0OGRkODIwMGViMWMxMDhkNGNlNyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYTllNzNlYjM2MjJiNGUxZmFiNDQ5ODAyYWRkOGM4OTQgPSAkKGA8ZGl2IGlkPSJodG1sX2E5ZTczZWIzNjIyYjRlMWZhYjQ0OTgwMmFkZDhjODk0IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzJlOWI2ZWIxZmNhMDQ4ZGQ4MjAwZWIxYzEwOGQ0Y2U3LnNldENvbnRlbnQoaHRtbF9hOWU3M2ViMzYyMmI0ZTFmYWI0NDk4MDJhZGQ4Yzg5NCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82ZmIxNTMyYjhkMzA0NzU1YWJiYTBhODJkYTk5YmEwZC5iaW5kUG9wdXAocG9wdXBfMmU5YjZlYjFmY2EwNDhkZDgyMDBlYjFjMTA4ZDRjZTcpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82ZmIxNTMyYjhkMzA0NzU1YWJiYTBhODJkYTk5YmEwZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBMYXJyeSBKdW5lSG91c2Ugb2YgQmx1ZXMgLSBIb3VzdG9uSG91c3RvbgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV80YzE4NWNkMzM5Mzc0OWE2ODBlYjNjODhiZGVhNGFlZSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMyLjc4NTMzLCAtOTYuODA4MDldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNTI0YjZlMDhlZjhlNDAwZmI2ZmMyMDhlZDQ1ZmNmYjcgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzhlMzZmYzgyOGM3YzRjMzc5ODE5MDVmZjdjYmI4MzA2ID0gJChgPGRpdiBpZD0iaHRtbF84ZTM2ZmM4MjhjN2M0YzM3OTgxOTA1ZmY3Y2JiODMwNiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF81MjRiNmUwOGVmOGU0MDBmYjZmYzIwOGVkNDVmY2ZiNy5zZXRDb250ZW50KGh0bWxfOGUzNmZjODI4YzdjNGMzNzk4MTkwNWZmN2NiYjgzMDYpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNGMxODVjZDMzOTM3NDlhNjgwZWIzYzg4YmRlYTRhZWUuYmluZFBvcHVwKHBvcHVwXzUyNGI2ZTA4ZWY4ZTQwMGZiNmZjMjA4ZWQ0NWZjZmI3KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNGMxODVjZDMzOTM3NDlhNjgwZWIzYzg4YmRlYTRhZWUuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgTGFycnkgSnVuZUhvdXNlIG9mIEJsdWVzIERhbGxhcyBwcmVzZW50ZWQgYnkgQ3JpY2tldCBXaXJlbGVzc0RhbGxhcwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9lODgxN2UzODA5Yjg0YzU0YWFkOTM0OWYzNzI4MzhlYSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMwLjI3MDEzMDIsIC05Ny43MzU5MDQ2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2QwNzAzYzQwNTcyZTQ1ZTViNzRjY2Y0ODBiZTc4MjIwID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8yZGIyYmRkMWIxNDc0MjRlODc4NDM1YzAyODEzMDRmNyA9ICQoYDxkaXYgaWQ9Imh0bWxfMmRiMmJkZDFiMTQ3NDI0ZTg3ODQzNWMwMjgxMzA0ZjciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZDA3MDNjNDA1NzJlNDVlNWI3NGNjZjQ4MGJlNzgyMjAuc2V0Q29udGVudChodG1sXzJkYjJiZGQxYjE0NzQyNGU4Nzg0MzVjMDI4MTMwNGY3KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2U4ODE3ZTM4MDliODRjNTRhYWQ5MzQ5ZjM3MjgzOGVhLmJpbmRQb3B1cChwb3B1cF9kMDcwM2M0MDU3MmU0NWU1Yjc0Y2NmNDgwYmU3ODIyMCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2U4ODE3ZTM4MDliODRjNTRhYWQ5MzQ5ZjM3MjgzOGVhLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIExhcnJ5IEp1bmVNb2hhd2tBdXN0aW4KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMTgzNTU4ZjM3NTczNDliNzllODNjMWY5OTg1NGNhZjUgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMy40NTE0MTE0LCAtMTEyLjA3ODE4ODRdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfM2YwMGMwN2NjMGMyNDhjY2E5MGVjMzgzNmFiMWNlZTggPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzQzYWI5NzlkMjk4ZDQ2ZWZiOTQ3NzQyZDI4NTE3ZTA5ID0gJChgPGRpdiBpZD0iaHRtbF80M2FiOTc5ZDI5OGQ0NmVmYjk0Nzc0MmQyODUxN2UwOSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8zZjAwYzA3Y2MwYzI0OGNjYTkwZWMzODM2YWIxY2VlOC5zZXRDb250ZW50KGh0bWxfNDNhYjk3OWQyOThkNDZlZmI5NDc3NDJkMjg1MTdlMDkpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMTgzNTU4ZjM3NTczNDliNzllODNjMWY5OTg1NGNhZjUuYmluZFBvcHVwKHBvcHVwXzNmMDBjMDdjYzBjMjQ4Y2NhOTBlYzM4MzZhYjFjZWU4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMTgzNTU4ZjM3NTczNDliNzllODNjMWY5OTg1NGNhZjUuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgTGFycnkgSnVuZVRoZSBWYW4gQnVyZW5QaG9lbml4CiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2Q2OTJkNWMyZjUwMDQ3NDY5MzE4MjIxZTQyYmJjMTlmID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzIuNzUzODE1LCAtMTE3LjIwOTI3Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yODc1MTliODRhNWE0OWIwYTI0NGMxZWQ0NWZjZmRjMiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZWRmN2U2MmY2NzkyNGYzZWE3ZDdkNjcxODViOTE3MmIgPSAkKGA8ZGl2IGlkPSJodG1sX2VkZjdlNjJmNjc5MjRmM2VhN2Q3ZDY3MTg1YjkxNzJiIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzI4NzUxOWI4NGE1YTQ5YjBhMjQ0YzFlZDQ1ZmNmZGMyLnNldENvbnRlbnQoaHRtbF9lZGY3ZTYyZjY3OTI0ZjNlYTdkN2Q2NzE4NWI5MTcyYik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9kNjkyZDVjMmY1MDA0NzQ2OTMxODIyMWU0MmJiYzE5Zi5iaW5kUG9wdXAocG9wdXBfMjg3NTE5Yjg0YTVhNDliMGEyNDRjMWVkNDVmY2ZkYzIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9kNjkyZDVjMmY1MDA0NzQ2OTMxODIyMWU0MmJiYzE5Zi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBMYXJyeSBKdW5lU29tYVNhbiBEaWVnbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV8yYTcxYzE4NzFkYjU0NmY2YmNhNDNjZDQxZjhkMTdlOSA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzI5Ljc1MzkzLCAtOTUuMzY0MDZdLCBbMzIuNzg1MzMsIC05Ni44MDgwOV0sIFszMC4yNzAxMzAyLCAtOTcuNzM1OTA0Nl0sIFszMy40NTE0MTE0LCAtMTEyLjA3ODE4ODRdLCBbMzIuNzUzODE1LCAtMTE3LjIwOTI3Ml1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2Q3N2IwY2U0OThjNjQ0Y2FiOWUxYzI0MzdkNmE4OWEzID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDAuNzE3NywgLTc0LjAwMTUzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwdXJwbGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF85NTI0NThiZTUxNjY0YmZjOGUwMTQ4YTQ5NGM0NWQ0ZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfODZhZGFiZDM2MzdlNDg5MGI0MWVhYmI2YWRjZTdiM2EgPSAkKGA8ZGl2IGlkPSJodG1sXzg2YWRhYmQzNjM3ZTQ4OTBiNDFlYWJiNmFkY2U3YjNhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzk1MjQ1OGJlNTE2NjRiZmM4ZTAxNDhhNDk0YzQ1ZDRkLnNldENvbnRlbnQoaHRtbF84NmFkYWJkMzYzN2U0ODkwYjQxZWFiYjZhZGNlN2IzYSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9kNzdiMGNlNDk4YzY0NGNhYjllMWMyNDM3ZDZhODlhMy5iaW5kUG9wdXAocG9wdXBfOTUyNDU4YmU1MTY2NGJmYzhlMDE0OGE0OTRjNDVkNGQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9kNzdiMGNlNDk4YzY0NGNhYjllMWMyNDM3ZDZhODlhMy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBZb3VuZyBSb2RkeVNhbnRvcyBQYXJ0eSBIb3VzZSBEb3duc3RhaXJzTWFuaGF0dGFuCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzE2NzU0YjcwNWZlNDQ1N2M5OThlNzRmZGM0YTU4ZjcwID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzUuMjQ3Mzg5OCwgLTgwLjgwNjIyODFdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2UzZmZjNGU4MDJhOTQ3MDU5OTI5NWI4MzY0Y2U1NjcyID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9iODI2Y2NmYzc4MzU0NDcwYTQ4NWJjMmRlZWI3MjJhMyA9ICQoYDxkaXYgaWQ9Imh0bWxfYjgyNmNjZmM3ODM1NDQ3MGE0ODViYzJkZWViNzIyYTMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZTNmZmM0ZTgwMmE5NDcwNTk5Mjk1YjgzNjRjZTU2NzIuc2V0Q29udGVudChodG1sX2I4MjZjY2ZjNzgzNTQ0NzBhNDg1YmMyZGVlYjcyMmEzKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzE2NzU0YjcwNWZlNDQ1N2M5OThlNzRmZGM0YTU4ZjcwLmJpbmRQb3B1cChwb3B1cF9lM2ZmYzRlODAyYTk0NzA1OTkyOTViODM2NGNlNTY3MikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzE2NzU0YjcwNWZlNDQ1N2M5OThlNzRmZGM0YTU4ZjcwLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFlvdW5nIFJvZGR5Q2hvcCBTaG9wQ2hhcmxvdHRlCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzc0NjIxOWZjMjFkOTRhMDZiODliYzg5ZTRhZjQwMGM2ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDAuNjc4MDg4NSwgLTczLjk0ODQwMDNdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzY5MjNmMzZiYmQwZDQzOGViMDYyMTI2NTBkYWYyNWRhID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9kNzY1M2U1YjUzMTM0NzA2YTM5MzY0NjJlYjViOTlhOCA9ICQoYDxkaXYgaWQ9Imh0bWxfZDc2NTNlNWI1MzEzNDcwNmEzOTM2NDYyZWI1Yjk5YTgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNjkyM2YzNmJiZDBkNDM4ZWIwNjIxMjY1MGRhZjI1ZGEuc2V0Q29udGVudChodG1sX2Q3NjUzZTViNTMxMzQ3MDZhMzkzNjQ2MmViNWI5OWE4KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzc0NjIxOWZjMjFkOTRhMDZiODliYzg5ZTRhZjQwMGM2LmJpbmRQb3B1cChwb3B1cF82OTIzZjM2YmJkMGQ0MzhlYjA2MjEyNjUwZGFmMjVkYSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzc0NjIxOWZjMjFkOTRhMDZiODliYzg5ZTRhZjQwMGM2LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFlvdW5nIFJvZGR5VGhlIEt5bWJlcmxlIFByb2plY3RCcm9va2x5bgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8yZjYxNGRhMGZkMTc0N2ViODkzOTQyM2MxNTY4YzJjZSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQxLjkxMDQwODUsIC04Ny42Nzc5OTZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2U5NzE5ZDg4MjU0YTRjODA4NTNkMjRlMTY1MGU3YzViID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF84OTg1ZDk2MWJjMmM0NTcxYjEzNTlmOWJmMGVmN2MxYSA9ICQoYDxkaXYgaWQ9Imh0bWxfODk4NWQ5NjFiYzJjNDU3MWIxMzU5ZjliZjBlZjdjMWEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZTk3MTlkODgyNTRhNGM4MDg1M2QyNGUxNjUwZTdjNWIuc2V0Q29udGVudChodG1sXzg5ODVkOTYxYmMyYzQ1NzFiMTM1OWY5YmYwZWY3YzFhKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzJmNjE0ZGEwZmQxNzQ3ZWI4OTM5NDIzYzE1NjhjMmNlLmJpbmRQb3B1cChwb3B1cF9lOTcxOWQ4ODI1NGE0YzgwODUzZDI0ZTE2NTBlN2M1YikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzJmNjE0ZGEwZmQxNzQ3ZWI4OTM5NDIzYzE1NjhjMmNlLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFlvdW5nIFJvZGR5U3VidGVycmFuZWFuQ2hpY2FnbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9lNGE3Y2Q0YzQzZjE0YmM0OGZjYWU1YzU2ZWE4OTIxZCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM5LjA1NDIwODgsIC05NC41OTA5MDU1XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwdXJwbGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8xMjBhZmVlNjk3NWU0NzYyOGJjNTEwNzdmYzg0ZGI2ZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZmExYWYyNzgxYzgwNDI5MGE1MTQzZDU2YWQxNmQ0NmEgPSAkKGA8ZGl2IGlkPSJodG1sX2ZhMWFmMjc4MWM4MDQyOTBhNTE0M2Q1NmFkMTZkNDZhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzEyMGFmZWU2OTc1ZTQ3NjI4YmM1MTA3N2ZjODRkYjZkLnNldENvbnRlbnQoaHRtbF9mYTFhZjI3ODFjODA0MjkwYTUxNDNkNTZhZDE2ZDQ2YSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9lNGE3Y2Q0YzQzZjE0YmM0OGZjYWU1YzU2ZWE4OTIxZC5iaW5kUG9wdXAocG9wdXBfMTIwYWZlZTY5NzVlNDc2MjhiYzUxMDc3ZmM4NGRiNmQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9lNGE3Y2Q0YzQzZjE0YmM0OGZjYWU1YzU2ZWE4OTIxZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBZb3VuZyBSb2RkeVRoZSBSaW90IFJvb21LYW5zYXMgQ2l0eQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8yOWJiZjMwNGUzNjc0YjYxYTA1NGFiZjNmMTkzODlkOSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQ1LjUxMjAwODEsIC0xMjIuNjU4MTc2OV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicHVycGxlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInB1cnBsZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfODE1YmVhZDYwOTgwNDQwNTg2NWI5Njg4OGZmMzMyNWMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2I4Y2RjNzMzOTVjOTQxZmY4MzQ3NjVjOTE1OWNiOWNlID0gJChgPGRpdiBpZD0iaHRtbF9iOGNkYzczMzk1Yzk0MWZmODM0NzY1YzkxNTljYjljZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF84MTViZWFkNjA5ODA0NDA1ODY1Yjk2ODg4ZmYzMzI1Yy5zZXRDb250ZW50KGh0bWxfYjhjZGM3MzM5NWM5NDFmZjgzNDc2NWM5MTU5Y2I5Y2UpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMjliYmYzMDRlMzY3NGI2MWEwNTRhYmYzZjE5Mzg5ZDkuYmluZFBvcHVwKHBvcHVwXzgxNWJlYWQ2MDk4MDQ0MDU4NjViOTY4ODhmZjMzMjVjKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMjliYmYzMDRlMzY3NGI2MWEwNTRhYmYzZjE5Mzg5ZDkuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgWW91bmcgUm9kZHlUaGUgQW5hbG9nUG9ydGxhbmQKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfOWY4YTdmN2JmNGUzNGFhMmFmYWNkNzU5Y2JmMThhNGQgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNy44MDQyNTYsIC0xMjIuMjcwMzAyXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwdXJwbGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF82MmQxODIzMGRjNjE0OTk4OTIwNDQ3YjUyNzQ0YWFhZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMzU5MzA3YTE2ZmE1NDMyYTgzZDUxZDVmMmIzZGVkZTcgPSAkKGA8ZGl2IGlkPSJodG1sXzM1OTMwN2ExNmZhNTQzMmE4M2Q1MWQ1ZjJiM2RlZGU3IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzYyZDE4MjMwZGM2MTQ5OTg5MjA0NDdiNTI3NDRhYWFmLnNldENvbnRlbnQoaHRtbF8zNTkzMDdhMTZmYTU0MzJhODNkNTFkNWYyYjNkZWRlNyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV85ZjhhN2Y3YmY0ZTM0YWEyYWZhY2Q3NTljYmYxOGE0ZC5iaW5kUG9wdXAocG9wdXBfNjJkMTgyMzBkYzYxNDk5ODkyMDQ0N2I1Mjc0NGFhYWYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV85ZjhhN2Y3YmY0ZTM0YWEyYWZhY2Q3NTljYmYxOGE0ZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBZb3VuZyBSb2RkeVZlbnVlIE9ha2xhbmRPYWtsYW5kCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzI3NDIxZTE3NjliZTQ4NWM5ZmQ3OWZmYjdhNDhhOGRjID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMTAyMDUwNiwgLTExOC4zMzYxMzg0XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwdXJwbGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yODQ0NWUyMzU2Mzg0MmU2YjBkNTc5ODU2ZGM3ODBhZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfOTA0ZmFjODE2ZjE2NDI4Y2E2MzgyMjNkMjIxMmQwY2YgPSAkKGA8ZGl2IGlkPSJodG1sXzkwNGZhYzgxNmYxNjQyOGNhNjM4MjIzZDIyMTJkMGNmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzI4NDQ1ZTIzNTYzODQyZTZiMGQ1Nzk4NTZkYzc4MGFkLnNldENvbnRlbnQoaHRtbF85MDRmYWM4MTZmMTY0MjhjYTYzODIyM2QyMjEyZDBjZik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8yNzQyMWUxNzY5YmU0ODVjOWZkNzlmZmI3YTQ4YThkYy5iaW5kUG9wdXAocG9wdXBfMjg0NDVlMjM1NjM4NDJlNmIwZDU3OTg1NmRjNzgwYWQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8yNzQyMWUxNzY5YmU0ODVjOWZkNzlmZmI3YTQ4YThkYy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBZb3VuZyBSb2RkeUxhcyBQYWxtYXNIb2xseXdvb2QKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNTljYjY5NWZjYjcyNDZjYTk3MTI2Njc1ZDRkNGMzYWQgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMy40NTc3NDQ1LCAtMTExLjkwODE2MTVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzQ5NWMyYmM5YzJjYzRlNTQ5MTRmYjk1YTEwYTdjYzA1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF81MzBlZWE0NjYxYWY0MGE2ODU1NWExMzBlNDE1NTNjMCA9ICQoYDxkaXYgaWQ9Imh0bWxfNTMwZWVhNDY2MWFmNDBhNjg1NTVhMTMwZTQxNTUzYzAiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNDk1YzJiYzljMmNjNGU1NDkxNGZiOTVhMTBhN2NjMDUuc2V0Q29udGVudChodG1sXzUzMGVlYTQ2NjFhZjQwYTY4NTU1YTEzMGU0MTU1M2MwKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzU5Y2I2OTVmY2I3MjQ2Y2E5NzEyNjY3NWQ0ZDRjM2FkLmJpbmRQb3B1cChwb3B1cF80OTVjMmJjOWMyY2M0ZTU0OTE0ZmI5NWExMGE3Y2MwNSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzU5Y2I2OTVmY2I3MjQ2Y2E5NzEyNjY3NWQ0ZDRjM2FkLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFlvdW5nIFJvZGR5UHViIFJvY2tTY290dHNkYWxlCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzE1ZGRiODBkZWFjNDQ5YTA4NWIzMmZiNGMxMzMyNWRiID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjkuNDI5Mzg1NiwgLTk4LjQ5Mjk4NDJdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzJmMmQwNjExMWJiODRlNzVhMDA0M2ZhYjA2ODhjYWRjID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF85YTIxNTIyMWEwY2U0MzI0OTVkMmFjNjc1YzBhYjA5ZSA9ICQoYDxkaXYgaWQ9Imh0bWxfOWEyMTUyMjFhMGNlNDMyNDk1ZDJhYzY3NWMwYWIwOWUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMmYyZDA2MTExYmI4NGU3NWEwMDQzZmFiMDY4OGNhZGMuc2V0Q29udGVudChodG1sXzlhMjE1MjIxYTBjZTQzMjQ5NWQyYWM2NzVjMGFiMDllKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzE1ZGRiODBkZWFjNDQ5YTA4NWIzMmZiNGMxMzMyNWRiLmJpbmRQb3B1cChwb3B1cF8yZjJkMDYxMTFiYjg0ZTc1YTAwNDNmYWIwNjg4Y2FkYykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzE1ZGRiODBkZWFjNDQ5YTA4NWIzMmZiNGMxMzMyNWRiLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFlvdW5nIFJvZGR5VGhlIEtvcm92YVNhbiBBbnRvbmlvCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzdlYTY4OGRiMGZhZjQzN2U4YzU3OGQxOWNjNmQ1MjNjID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzIuNzgzNzcxNiwgLTk2Ljc4NzEwODVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzIwOTRmMzI1ZGNkMTQwOTBiYTEzNzA1ZDRjNTY2MjhkID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8zNTE5NzliOTNlZTk0YTUxYjNkOTg1NThiN2Q0OTVhNiA9ICQoYDxkaXYgaWQ9Imh0bWxfMzUxOTc5YjkzZWU5NGE1MWIzZDk4NTU4YjdkNDk1YTYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMjA5NGYzMjVkY2QxNDA5MGJhMTM3MDVkNGM1NjYyOGQuc2V0Q29udGVudChodG1sXzM1MTk3OWI5M2VlOTRhNTFiM2Q5ODU1OGI3ZDQ5NWE2KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzdlYTY4OGRiMGZhZjQzN2U4YzU3OGQxOWNjNmQ1MjNjLmJpbmRQb3B1cChwb3B1cF8yMDk0ZjMyNWRjZDE0MDkwYmExMzcwNWQ0YzU2NjI4ZCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzdlYTY4OGRiMGZhZjQzN2U4YzU3OGQxOWNjNmQ1MjNjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFlvdW5nIFJvZGR5UHJvcGhldCBCYXIgRWxtIFN0cmVldERhbGxhcwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8xZDc4ZWU1YzA5NjE0MWVlOTYwY2EyYzQ4NjlhMzc3NiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMwLjI2NzIyMzYsIC05Ny43MzYxNzUzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwdXJwbGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83Zjk1ODk2OTNmZjQ0YzQwYTU5OGU5NmJmNjRjM2RiOSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMzhiNDA2ZTAxYjY0NDRiOGI4NzllOTRlMTNlNzIwMTUgPSAkKGA8ZGl2IGlkPSJodG1sXzM4YjQwNmUwMWI2NDQ0YjhiODc5ZTk0ZTEzZTcyMDE1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzdmOTU4OTY5M2ZmNDRjNDBhNTk4ZTk2YmY2NGMzZGI5LnNldENvbnRlbnQoaHRtbF8zOGI0MDZlMDFiNjQ0NGI4Yjg3OWU5NGUxM2U3MjAxNSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8xZDc4ZWU1YzA5NjE0MWVlOTYwY2EyYzQ4NjlhMzc3Ni5iaW5kUG9wdXAocG9wdXBfN2Y5NTg5NjkzZmY0NGM0MGE1OThlOTZiZjY0YzNkYjkpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8xZDc4ZWU1YzA5NjE0MWVlOTYwY2EyYzQ4NjlhMzc3Ni5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBZb3VuZyBSb2RkeVJlZCA3QXVzdGluCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2JhNGUzZjJhMzFjNTQxN2JhMTI4MmNkNjg0YThhNzZhID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjkuNzUxOTc5MywgLTk1LjM1NDQ5OTFdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzc0OTc2MDM0NDc4NTQyYWJiYzA4MWExZjA0ODIwMzk1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8zMjczOTcwNTc0NTc0ZGI2YmQ3MzM2YzhiMDExY2M5YyA9ICQoYDxkaXYgaWQ9Imh0bWxfMzI3Mzk3MDU3NDU3NGRiNmJkNzMzNmM4YjAxMWNjOWMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNzQ5NzYwMzQ0Nzg1NDJhYmJjMDgxYTFmMDQ4MjAzOTUuc2V0Q29udGVudChodG1sXzMyNzM5NzA1NzQ1NzRkYjZiZDczMzZjOGIwMTFjYzljKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2JhNGUzZjJhMzFjNTQxN2JhMTI4MmNkNjg0YThhNzZhLmJpbmRQb3B1cChwb3B1cF83NDk3NjAzNDQ3ODU0MmFiYmMwODFhMWYwNDgyMDM5NSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2JhNGUzZjJhMzFjNTQxN2JhMTI4MmNkNjg0YThhNzZhLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFlvdW5nIFJvZGR5VGhlIEdyZWVucm9vbSBhdCBXYXJlaG91c2UgTGl2ZUhvdXN0b24KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfMzdlNTdhMzM1NmFlNDk1MTk5OTNjZjAxOGZmNTFjYzYgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0MC43MTc3LCAtNzQuMDAxNTNdLCBbMzUuMjQ3Mzg5OCwgLTgwLjgwNjIyODFdLCBbNDAuNjc4MDg4NSwgLTczLjk0ODQwMDNdLCBbNDEuOTEwNDA4NSwgLTg3LjY3Nzk5Nl0sIFszOS4wNTQyMDg4LCAtOTQuNTkwOTA1NV0sIFs0NS41MTIwMDgxLCAtMTIyLjY1ODE3NjldLCBbMzcuODA0MjU2LCAtMTIyLjI3MDMwMl0sIFszNC4xMDIwNTA2LCAtMTE4LjMzNjEzODRdLCBbMzMuNDU3NzQ0NSwgLTExMS45MDgxNjE1XSwgWzI5LjQyOTM4NTYsIC05OC40OTI5ODQyXSwgWzMyLjc4Mzc3MTYsIC05Ni43ODcxMDg1XSwgWzMwLjI2NzIyMzYsIC05Ny43MzYxNzUzXSwgWzI5Ljc1MTk3OTMsIC05NS4zNTQ0OTkxXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicHVycGxlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzVhNzBmMGZmMjJhNzQ2MmNhNmVhOWIyM2ExNTA2MjQwID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjYuMzUwMDk4LCAtODAuMTAwNDM2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJvcmFuZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAib3JhbmdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8zNzdlODcxN2IwNWQ0ZmYyYTI1N2ZhYTdiZmI4MjZiOSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZjYwZDY5MDJmNGUzNGYxZTgzODE4MzkzN2NmMmNhZmUgPSAkKGA8ZGl2IGlkPSJodG1sX2Y2MGQ2OTAyZjRlMzRmMWU4MzgxODM5MzdjZjJjYWZlIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzM3N2U4NzE3YjA1ZDRmZjJhMjU3ZmFhN2JmYjgyNmI5LnNldENvbnRlbnQoaHRtbF9mNjBkNjkwMmY0ZTM0ZjFlODM4MTgzOTM3Y2YyY2FmZSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV81YTcwZjBmZjIyYTc0NjJjYTZlYTliMjNhMTUwNjI0MC5iaW5kUG9wdXAocG9wdXBfMzc3ZTg3MTdiMDVkNGZmMmEyNTdmYWE3YmZiODI2YjkpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV81YTcwZjBmZjIyYTc0NjJjYTZlYTliMjNhMTUwNjI0MC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBUcmFkZW1hcmsgRGEgU2t5ZGl2ZXJDbHViIEJvY2FCb2NhIFJhdG9uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzBhNGYyMDUxYmJiNzRlNWU5YTQwZDYwMDgzZmI1NDk3ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjUuNzgwNjY0LCAtODAuMTkzNjIzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJvcmFuZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAib3JhbmdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8xNTQ0ZDA0OTc1ZDM0YTkzYmQyNDRkN2MwNDM3NjBiYSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYjgxYzM2MGRjYjU1NDM3ZmJhMzE4MGU0YjZjMjMyODkgPSAkKGA8ZGl2IGlkPSJodG1sX2I4MWMzNjBkY2I1NTQzN2ZiYTMxODBlNGI2YzIzMjg5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzE1NDRkMDQ5NzVkMzRhOTNiZDI0NGQ3YzA0Mzc2MGJhLnNldENvbnRlbnQoaHRtbF9iODFjMzYwZGNiNTU0MzdmYmEzMTgwZTRiNmMyMzI4OSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8wYTRmMjA1MWJiYjc0ZTVlOWE0MGQ2MDA4M2ZiNTQ5Ny5iaW5kUG9wdXAocG9wdXBfMTU0NGQwNDk3NWQzNGE5M2JkMjQ0ZDdjMDQzNzYwYmEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8wYTRmMjA1MWJiYjc0ZTVlOWE0MGQ2MDA4M2ZiNTQ5Ny5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBUcmFkZW1hcmsgRGEgU2t5ZGl2ZXJHcmFuZCBDZW50cmFsTWlhbWkKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfN2ZhZGQ3YjIxMmZkNGJkYThiODEwMWIxMWE4MzZhZTYgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFsyNy43NzE2NjYsIC04Mi42MzYwMzVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogIm9yYW5nZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJvcmFuZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzRiY2Q4Y2IyMzdhMjQwN2E5MGEzYTQxZTFkZjU4OGMyID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF80ZGQwYjEzYWJlZmY0ZDg5YTAxMzljY2JiOGQ1MGZkNCA9ICQoYDxkaXYgaWQ9Imh0bWxfNGRkMGIxM2FiZWZmNGQ4OWEwMTM5Y2NiYjhkNTBmZDQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNGJjZDhjYjIzN2EyNDA3YTkwYTNhNDFlMWRmNTg4YzIuc2V0Q29udGVudChodG1sXzRkZDBiMTNhYmVmZjRkODlhMDEzOWNjYmI4ZDUwZmQ0KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzdmYWRkN2IyMTJmZDRiZGE4YjgxMDFiMTFhODM2YWU2LmJpbmRQb3B1cChwb3B1cF80YmNkOGNiMjM3YTI0MDdhOTBhM2E0MWUxZGY1ODhjMikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzdmYWRkN2IyMTJmZDRiZGE4YjgxMDFiMTFhODM2YWU2LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFRyYWRlbWFyayBEYSBTa3lkaXZlckphbm51cyBMaXZlU3QgUGV0ZXJzYnVyZwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV81ZDA0ZjJiYzNkNzE0MTM5YWQyMzhlMzYwYmI3NzFhYyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM0LjIzODM4MiwgLTc3Ljk0OTIwOF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAib3JhbmdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogIm9yYW5nZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNjBmYzQwYjQ0MWQ5NGM3NjhmNDdjNzIzZDBjNTc4ZjggPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzg1NjFlZWEyN2RkNjRjMjE5MTI1NTEyMDc5ZGNiZjllID0gJChgPGRpdiBpZD0iaHRtbF84NTYxZWVhMjdkZDY0YzIxOTEyNTUxMjA3OWRjYmY5ZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF82MGZjNDBiNDQxZDk0Yzc2OGY0N2M3MjNkMGM1NzhmOC5zZXRDb250ZW50KGh0bWxfODU2MWVlYTI3ZGQ2NGMyMTkxMjU1MTIwNzlkY2JmOWUpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNWQwNGYyYmMzZDcxNDEzOWFkMjM4ZTM2MGJiNzcxYWMuYmluZFBvcHVwKHBvcHVwXzYwZmM0MGI0NDFkOTRjNzY4ZjQ3YzcyM2QwYzU3OGY4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNWQwNGYyYmMzZDcxNDEzOWFkMjM4ZTM2MGJiNzcxYWMuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgVHJhZGVtYXJrIERhIFNreWRpdmVyU29hcEJveCBMYXVuZHJvIExvdW5nZVdpbG1pbmd0b24KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfMjdjYzUyMmMwMGQzNDY1NWE3ZGJkNGUwNDEzY2ZkZmYgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1syNi4zNTAwOTgsIC04MC4xMDA0MzZdLCBbMjUuNzgwNjY0LCAtODAuMTkzNjIzXSwgWzI3Ljc3MTY2NiwgLTgyLjYzNjAzNV0sIFszNC4yMzgzODIsIC03Ny45NDkyMDhdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJvcmFuZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogIm9yYW5nZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZWFjM2Y4NTkzMmZmNDY1NjgyZTM4ZTUwMDAzNzczN2YgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMi43ODQ2MSwgLTk2Ljc4NDQyXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzk4MjU1ZGU3YzI2OTQyNzViNTU3ZmI0NDVkZWNmOTBkID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9kYzUxOWQ3OGNiNTM0MDUxYTNjNzdjMzNmZmJiN2Y0YiA9ICQoYDxkaXYgaWQ9Imh0bWxfZGM1MTlkNzhjYjUzNDA1MWEzYzc3YzMzZmZiYjdmNGIiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfOTgyNTVkZTdjMjY5NDI3NWI1NTdmYjQ0NWRlY2Y5MGQuc2V0Q29udGVudChodG1sX2RjNTE5ZDc4Y2I1MzQwNTFhM2M3N2MzM2ZmYmI3ZjRiKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2VhYzNmODU5MzJmZjQ2NTY4MmUzOGU1MDAwMzc3MzdmLmJpbmRQb3B1cChwb3B1cF85ODI1NWRlN2MyNjk0Mjc1YjU1N2ZiNDQ1ZGVjZjkwZCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2VhYzNmODU5MzJmZjQ2NTY4MmUzOGU1MDAwMzc3MzdmLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEJlbm55IFRoZSBCdXRjaGVyVHJlZXNEYWxsYXMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNWU2ZTU4NGMyODIyNDJmOGIyM2Y0MTQ2ZjM3YzI1ZTMgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMC4yNjc0OSwgLTk3LjczNjA1XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzY1ODcxZTM0NWMwMDRhZjhhYWE1MmZhZTMxNjUyZmY2ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9lZjMxYjY3ODA5MGU0MWJlOWZhYmViOWZmOTVlNzZkYyA9ICQoYDxkaXYgaWQ9Imh0bWxfZWYzMWI2NzgwOTBlNDFiZTlmYWJlYjlmZjk1ZTc2ZGMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNjU4NzFlMzQ1YzAwNGFmOGFhYTUyZmFlMzE2NTJmZjYuc2V0Q29udGVudChodG1sX2VmMzFiNjc4MDkwZTQxYmU5ZmFiZWI5ZmY5NWU3NmRjKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzVlNmU1ODRjMjgyMjQyZjhiMjNmNDE0NmYzN2MyNWUzLmJpbmRQb3B1cChwb3B1cF82NTg3MWUzNDVjMDA0YWY4YWFhNTJmYWUzMTY1MmZmNikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzVlNmU1ODRjMjgyMjQyZjhiMjNmNDE0NmYzN2MyNWUzLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEJlbm55IFRoZSBCdXRjaGVyRW1waXJlIEdhcmFnZUF1c3RpbgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8xYTFjMjk4OGIxNTg0NmI0ODMzMWM5YjEyM2U0NGI3MSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzI5Ljc1MjEyLCAtOTUuMzU0NjddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya3JlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZTA2OWVmMjYzMmQyNDY2Y2FiMmM1YTNkODQwM2M2M2EgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2QyNTI5NDk3YmJhMjRkMTk5ZGE4MjljNzBmYTBkZjZiID0gJChgPGRpdiBpZD0iaHRtbF9kMjUyOTQ5N2JiYTI0ZDE5OWRhODI5YzcwZmEwZGY2YiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9lMDY5ZWYyNjMyZDI0NjZjYWIyYzVhM2Q4NDAzYzYzYS5zZXRDb250ZW50KGh0bWxfZDI1Mjk0OTdiYmEyNGQxOTlkYTgyOWM3MGZhMGRmNmIpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMWExYzI5ODhiMTU4NDZiNDgzMzFjOWIxMjNlNDRiNzEuYmluZFBvcHVwKHBvcHVwX2UwNjllZjI2MzJkMjQ2NmNhYjJjNWEzZDg0MDNjNjNhKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMWExYzI5ODhiMTU4NDZiNDgzMzFjOWIxMjNlNDRiNzEuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQmVubnkgVGhlIEJ1dGNoZXJUaGUgU3R1ZGlvIGF0IFdhcmVob3VzZSBMaXZlSG91c3RvbgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9kODEzODE5YzcwYWQ0MWVjOTdmMzcyMmMyY2E5NDk4OSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMzLjc5MjA5LCAtODQuMzg4XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2ZiMjlhMmMzYjc4YjQyM2Q4MmJkY2Y1YzIwNmM2NWU5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8zOWQ2NmRhYjU4N2U0MTg4YWU3ODJmOWM1OGY1ZDVhNyA9ICQoYDxkaXYgaWQ9Imh0bWxfMzlkNjZkYWI1ODdlNDE4OGFlNzgyZjljNThmNWQ1YTciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZmIyOWEyYzNiNzhiNDIzZDgyYmRjZjVjMjA2YzY1ZTkuc2V0Q29udGVudChodG1sXzM5ZDY2ZGFiNTg3ZTQxODhhZTc4MmY5YzU4ZjVkNWE3KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2Q4MTM4MTljNzBhZDQxZWM5N2YzNzIyYzJjYTk0OTg5LmJpbmRQb3B1cChwb3B1cF9mYjI5YTJjM2I3OGI0MjNkODJiZGNmNWMyMDZjNjVlOSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2Q4MTM4MTljNzBhZDQxZWM5N2YzNzIyYzJjYTk0OTg5LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEJlbm55IFRoZSBCdXRjaGVyQ2VudGVyIFN0YWdlIFRoZWF0ZXJBdGxhbnRhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2JkMzRkOTZlMGQ4MDRjZmY4MWFhN2VhYjRmOThhMGU2ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzUuMjQwMywgLTgwLjg0NTMxXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzFlNTJiZDVmMmM3ODQ2ZWY5NDljMzM1NGIzZjhiZWFjID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF80YTMwMmE3MTY5YWE0M2MyYmVkZDYyMWRiNzE0MDhjZiA9ICQoYDxkaXYgaWQ9Imh0bWxfNGEzMDJhNzE2OWFhNDNjMmJlZGQ2MjFkYjcxNDA4Y2YiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMWU1MmJkNWYyYzc4NDZlZjk0OWMzMzU0YjNmOGJlYWMuc2V0Q29udGVudChodG1sXzRhMzAyYTcxNjlhYTQzYzJiZWRkNjIxZGI3MTQwOGNmKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2JkMzRkOTZlMGQ4MDRjZmY4MWFhN2VhYjRmOThhMGU2LmJpbmRQb3B1cChwb3B1cF8xZTUyYmQ1ZjJjNzg0NmVmOTQ5YzMzNTRiM2Y4YmVhYykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2JkMzRkOTZlMGQ4MDRjZmY4MWFhN2VhYjRmOThhMGU2LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEJlbm55IFRoZSBCdXRjaGVyVGhlIFVuZGVyZ3JvdW5kQ2hhcmxvdHRlCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lX2E3ODY2MmViYWFkMzRjMDI4N2VkYTkyMGU0YjViOGIwID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbMzIuNzg0NjEsIC05Ni43ODQ0Ml0sIFszMC4yNjc0OSwgLTk3LjczNjA1XSwgWzI5Ljc1MjEyLCAtOTUuMzU0NjddLCBbMzMuNzkyMDksIC04NC4zODhdLCBbMzUuMjQwMywgLTgwLjg0NTMxXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiZGFya3JlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMjhhNTM1NjBkMWNiNGZhN2JiNTgyZDg0OGYzNThkNmUgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MS45MDAzOTIxLCAtODcuNjg2Nzg3N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzViZWQ0YjUyMjg3YTRhOGQ4MzFhM2Q2YmFkZGVlMDZiID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8xMTIzNDM3M2NmZjA0M2M5YjA0NTdiZDQ2YTk0NDE2MSA9ICQoYDxkaXYgaWQ9Imh0bWxfMTEyMzQzNzNjZmYwNDNjOWIwNDU3YmQ0NmE5NDQxNjEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNWJlZDRiNTIyODdhNGE4ZDgzMWEzZDZiYWRkZWUwNmIuc2V0Q29udGVudChodG1sXzExMjM0MzczY2ZmMDQzYzliMDQ1N2JkNDZhOTQ0MTYxKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzI4YTUzNTYwZDFjYjRmYTdiYjU4MmQ4NDhmMzU4ZDZlLmJpbmRQb3B1cChwb3B1cF81YmVkNGI1MjI4N2E0YThkODMxYTNkNmJhZGRlZTA2YikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzI4YTUzNTYwZDFjYjRmYTdiYjU4MmQ4NDhmMzU4ZDZlLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENocmlzIENyYWNrVGhlIEVtcHR5IEJvdHRsZUNoaWNhZ28KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMDE0NDlhZGQ3ZjI0NGViNWExOGEyNWMyZjJkZDM0NWIgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MS45NTAzODYyLCAtODcuNzEzNjc4Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzQ3MWY1M2QwMzE1OTRjNzJhMTc2NjcwMWJjNjU1NWQ1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9jNTk1OWNiZGJkYTc0Njg0YTM2NzQ2ZjU1Y2UxYjk4YiA9ICQoYDxkaXYgaWQ9Imh0bWxfYzU5NTljYmRiZGE3NDY4NGEzNjc0NmY1NWNlMWI5OGIiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNDcxZjUzZDAzMTU5NGM3MmExNzY2NzAxYmM2NTU1ZDUuc2V0Q29udGVudChodG1sX2M1OTU5Y2JkYmRhNzQ2ODRhMzY3NDZmNTVjZTFiOThiKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzAxNDQ5YWRkN2YyNDRlYjVhMThhMjVjMmYyZGQzNDViLmJpbmRQb3B1cChwb3B1cF80NzFmNTNkMDMxNTk0YzcyYTE3NjY3MDFiYzY1NTVkNSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzAxNDQ5YWRkN2YyNDRlYjVhMThhMjVjMmYyZGQzNDViLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENocmlzIENyYWNrQWJiZXkgUHViQ2hpY2FnbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9kOGIxZTMxMjcwOWQ0ZTQ4OWQ4NTMxZDJlZTVmOGYxNSA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQxLjkwMDM5MjEsIC04Ny42ODY3ODc3XSwgWzQxLjk1MDM4NjIsIC04Ny43MTM2NzgyXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImxpZ2h0cmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9mZjIzMmEwYTE1YWI0OGRkODNiYjU4YmUwODVmYTU5NCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM0LjA0NDk0LCAtMTE4LjI2NTVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJlaWdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJlaWdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83YWY5YmI4NGY0ZmU0OTRiOWM0NzM4NWMxN2EyMTAwNyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMGJjYmFmZjA5MGQ5NDZlZDk5OGNkOTMzMDEzNTg2MjUgPSAkKGA8ZGl2IGlkPSJodG1sXzBiY2JhZmYwOTBkOTQ2ZWQ5OThjZDkzMzAxMzU4NjI1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzdhZjliYjg0ZjRmZTQ5NGI5YzQ3Mzg1YzE3YTIxMDA3LnNldENvbnRlbnQoaHRtbF8wYmNiYWZmMDkwZDk0NmVkOTk4Y2Q5MzMwMTM1ODYyNSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9mZjIzMmEwYTE1YWI0OGRkODNiYjU4YmUwODVmYTU5NC5iaW5kUG9wdXAocG9wdXBfN2FmOWJiODRmNGZlNDk0YjljNDczODVjMTdhMjEwMDcpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9mZjIzMmEwYTE1YWI0OGRkODNiYjU4YmUwODVmYTU5NC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBSb2MgTWFyY2lhbm9UaGUgTm92byBieSBNaWNyb3NvZnRMb3MgQW5nZWxlcwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9hMGFjZTk5NmQ1ZDM0MmQ4YTE5ZGM4ODczMGFjNDFiNiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMyLjcxNjM2LCAtMTE3LjE1OTYxXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJiZWlnZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJiZWlnZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZDgzZTA5MWJmNzU1NDE1MDljMGM1NjgyOWZjNjVhOWMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2I0ODVlOTk5MmRiNDQ1Njk5ZTc1ZDg4ZjNiMzljY2YxID0gJChgPGRpdiBpZD0iaHRtbF9iNDg1ZTk5OTJkYjQ0NTY5OWU3NWQ4OGYzYjM5Y2NmMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9kODNlMDkxYmY3NTU0MTUwOWMwYzU2ODI5ZmM2NWE5Yy5zZXRDb250ZW50KGh0bWxfYjQ4NWU5OTkyZGI0NDU2OTllNzVkODhmM2IzOWNjZjEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfYTBhY2U5OTZkNWQzNDJkOGExOWRjODg3MzBhYzQxYjYuYmluZFBvcHVwKHBvcHVwX2Q4M2UwOTFiZjc1NTQxNTA5YzBjNTY4MjlmYzY1YTljKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfYTBhY2U5OTZkNWQzNDJkOGExOWRjODg3MzBhYzQxYjYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgUm9jIE1hcmNpYW5vSG91c2Ugb2YgQmx1ZXMgLSBTYW4gRGllZ29TYW4gRGllZ28KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNzg2OTc3NDUxYzFmNDczNDkzMGQ2ZWFlNDc1YTQ3M2EgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNy44MDc4NSwgLTEyMi4yN10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzc4ZTYxMmFkM2RhODRkN2M5OWVjZmIwNTViNDBiMTg0ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8xMmJmODNjMTRhNTM0NTA4OTA2NWY1ODZhYTNjOTU1NyA9ICQoYDxkaXYgaWQ9Imh0bWxfMTJiZjgzYzE0YTUzNDUwODkwNjVmNTg2YWEzYzk1NTciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNzhlNjEyYWQzZGE4NGQ3Yzk5ZWNmYjA1NWI0MGIxODQuc2V0Q29udGVudChodG1sXzEyYmY4M2MxNGE1MzQ1MDg5MDY1ZjU4NmFhM2M5NTU3KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzc4Njk3NzQ1MWMxZjQ3MzQ5MzBkNmVhZTQ3NWE0NzNhLmJpbmRQb3B1cChwb3B1cF83OGU2MTJhZDNkYTg0ZDdjOTllY2ZiMDU1YjQwYjE4NCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzc4Njk3NzQ1MWMxZjQ3MzQ5MzBkNmVhZTQ3NWE0NzNhLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFJvYyBNYXJjaWFub0ZveCBUaGVhdGVyT2FrbGFuZAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV85N2I5NTQyMDQ1MGE0NGFiYmI0ZDAzMzJjZDYxYWMzZSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQ3LjY2MTI4LCAtMTIyLjMxMzY1XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJiZWlnZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJiZWlnZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNzFkZDVkYzc3YmZlNGRiMDk4NWU4MmNmYjRiOThkMWYgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzk4ZjM2MTcyYzcwYTRiMmQ4NzM0ZTEyM2U5MTRmNWZlID0gJChgPGRpdiBpZD0iaHRtbF85OGYzNjE3MmM3MGE0YjJkODczNGUxMjNlOTE0ZjVmZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF83MWRkNWRjNzdiZmU0ZGIwOTg1ZTgyY2ZiNGI5OGQxZi5zZXRDb250ZW50KGh0bWxfOThmMzYxNzJjNzBhNGIyZDg3MzRlMTIzZTkxNGY1ZmUpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfOTdiOTU0MjA0NTBhNDRhYmJiNGQwMzMyY2Q2MWFjM2UuYmluZFBvcHVwKHBvcHVwXzcxZGQ1ZGM3N2JmZTRkYjA5ODVlODJjZmI0Yjk4ZDFmKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfOTdiOTU0MjA0NTBhNDRhYmJiNGQwMzMyY2Q2MWFjM2UuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgUm9jIE1hcmNpYW5vTmVwdHVuZSBUaGVhdHJlU2VhdHRsZQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9kYjUwODIyMDNjYmQ0NTI5ODI2YjhhODAzNmI3YzYzOCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM5Ljc1NDQ5LCAtMTA0Ljk3ODU0XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJiZWlnZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJiZWlnZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMDNjNzM3MjIyMDUxNGJlNDhiNTkzNjQwMTQzZDk1ZDggPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2Q2ZTMwZDJhNTkxYTRmYWVhZWNkZTE2YjBiZDlhODAxID0gJChgPGRpdiBpZD0iaHRtbF9kNmUzMGQyYTU5MWE0ZmFlYWVjZGUxNmIwYmQ5YTgwMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8wM2M3MzcyMjIwNTE0YmU0OGI1OTM2NDAxNDNkOTVkOC5zZXRDb250ZW50KGh0bWxfZDZlMzBkMmE1OTFhNGZhZWFlY2RlMTZiMGJkOWE4MDEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZGI1MDgyMjAzY2JkNDUyOTgyNmI4YTgwMzZiN2M2MzguYmluZFBvcHVwKHBvcHVwXzAzYzczNzIyMjA1MTRiZTQ4YjU5MzY0MDE0M2Q5NWQ4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZGI1MDgyMjAzY2JkNDUyOTgyNmI4YTgwMzZiN2M2MzguYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgUm9jIE1hcmNpYW5vQ2VydmFudGVzJyBNYXN0ZXJwaWVjZSBCYWxscm9vbURlbnZlcgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8zMDY5MWQ2MzIwYzg0MDE5YTMzYjQ4MDViMTkzMDQ3YiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQ0Ljk3ODI3LCAtOTMuMjc2MDhdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJlaWdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJlaWdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8zNzcxNTRjNDkxNjU0ODljOWIwNzg1NTQzZTlmMTkzMCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYTVmMjE3YTUyMGFlNDhiZDk2NzdmMzBhZTc4NTg5ZWQgPSAkKGA8ZGl2IGlkPSJodG1sX2E1ZjIxN2E1MjBhZTQ4YmQ5Njc3ZjMwYWU3ODU4OWVkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzM3NzE1NGM0OTE2NTQ4OWM5YjA3ODU1NDNlOWYxOTMwLnNldENvbnRlbnQoaHRtbF9hNWYyMTdhNTIwYWU0OGJkOTY3N2YzMGFlNzg1ODllZCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8zMDY5MWQ2MzIwYzg0MDE5YTMzYjQ4MDViMTkzMDQ3Yi5iaW5kUG9wdXAocG9wdXBfMzc3MTU0YzQ5MTY1NDg5YzliMDc4NTU0M2U5ZjE5MzApCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8zMDY5MWQ2MzIwYzg0MDE5YTMzYjQ4MDViMTkzMDQ3Yi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBSb2MgTWFyY2lhbm9GaXJzdCBBdmVudWVNaW5uZWFwb2xpcwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9jMjY4NTE0NjVmZTY0NTAzYTdjYzg3YTEzN2I2MjAyZCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQxLjkxODU2LCAtODcuNjkwMDNdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJlaWdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJlaWdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8wZGFmMTJhYjk0NmY0ZTJjOTk1Mjc3OGFkNWU1OTJmNCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfM2RmODQ2ZmU5MTg3NDgzOTkyNzAwMDg1OGU4OGFlOGQgPSAkKGA8ZGl2IGlkPSJodG1sXzNkZjg0NmZlOTE4NzQ4Mzk5MjcwMDA4NThlODhhZThkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzBkYWYxMmFiOTQ2ZjRlMmM5OTUyNzc4YWQ1ZTU5MmY0LnNldENvbnRlbnQoaHRtbF8zZGY4NDZmZTkxODc0ODM5OTI3MDAwODU4ZTg4YWU4ZCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9jMjY4NTE0NjVmZTY0NTAzYTdjYzg3YTEzN2I2MjAyZC5iaW5kUG9wdXAocG9wdXBfMGRhZjEyYWI5NDZmNGUyYzk5NTI3NzhhZDVlNTkyZjQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9jMjY4NTE0NjVmZTY0NTAzYTdjYzg3YTEzN2I2MjAyZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBSb2MgTWFyY2lhbm9Db25jb3JkIE11c2ljIEhhbGxDaGljYWdvCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzJhNGYzYzc5ZWJjYjRmMzViN2I0ZmFiMDA0MGFkMzUyID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDEuMzExNTcsIC03Mi45MjkzNl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzJmZjViMzdiZTgyYjQwMGU5NmM1ZTIxMWM1ZGRlYWI5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9mNzE3MmNjMjBiNzE0ZWQ2OTBjZWI2ODI5NmI0NTgxYyA9ICQoYDxkaXYgaWQ9Imh0bWxfZjcxNzJjYzIwYjcxNGVkNjkwY2ViNjgyOTZiNDU4MWMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMmZmNWIzN2JlODJiNDAwZTk2YzVlMjExYzVkZGVhYjkuc2V0Q29udGVudChodG1sX2Y3MTcyY2MyMGI3MTRlZDY5MGNlYjY4Mjk2YjQ1ODFjKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzJhNGYzYzc5ZWJjYjRmMzViN2I0ZmFiMDA0MGFkMzUyLmJpbmRQb3B1cChwb3B1cF8yZmY1YjM3YmU4MmI0MDBlOTZjNWUyMTFjNWRkZWFiOSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzJhNGYzYzc5ZWJjYjRmMzViN2I0ZmFiMDA0MGFkMzUyLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFJvYyBNYXJjaWFub1RvYWQncyBQbGFjZU5ldyBIYXZlbgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV82YWE0ODg1ZDk5OTE0ODljOTkyODc0ZWI4YjJiMjg1MyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM5Ljk1ODk4LCAtNzUuMTUwMjhdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJlaWdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJlaWdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9mMzg1MTkwYTM2YmE0Y2JiOTU0NmIyMGQ5OTkwNjFkNiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNTZhOWE1ZTI1NWVkNDliODlmOWI5MTRmOTI2N2FhMjkgPSAkKGA8ZGl2IGlkPSJodG1sXzU2YTlhNWUyNTVlZDQ5Yjg5ZjliOTE0ZjkyNjdhYTI5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2YzODUxOTBhMzZiYTRjYmI5NTQ2YjIwZDk5OTA2MWQ2LnNldENvbnRlbnQoaHRtbF81NmE5YTVlMjU1ZWQ0OWI4OWY5YjkxNGY5MjY3YWEyOSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82YWE0ODg1ZDk5OTE0ODljOTkyODc0ZWI4YjJiMjg1My5iaW5kUG9wdXAocG9wdXBfZjM4NTE5MGEzNmJhNGNiYjk1NDZiMjBkOTk5MDYxZDYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82YWE0ODg1ZDk5OTE0ODljOTkyODc0ZWI4YjJiMjg1My5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBSb2MgTWFyY2lhbm9GcmFua2xpbiBNdXNpYyBIYWxsUGhpbGFkZWxwaGlhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2I3MDMyZjgyMzFlMzRlZDA5MmU2ZmY3NmE3NmUxNTAyID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDAuNzM0OTIsIC03My45ODg0NV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzZmMDdkMWI5YjViYzRlYTc4Njg3ZjMyNzg0YTdhOTEzID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8xZTM0ZjY2MTA4ZTU0NTQ5YTY2YTk4NmZkYjRjMWRkMSA9ICQoYDxkaXYgaWQ9Imh0bWxfMWUzNGY2NjEwOGU1NDU0OWE2NmE5ODZmZGI0YzFkZDEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNmYwN2QxYjliNWJjNGVhNzg2ODdmMzI3ODRhN2E5MTMuc2V0Q29udGVudChodG1sXzFlMzRmNjYxMDhlNTQ1NDlhNjZhOTg2ZmRiNGMxZGQxKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2I3MDMyZjgyMzFlMzRlZDA5MmU2ZmY3NmE3NmUxNTAyLmJpbmRQb3B1cChwb3B1cF82ZjA3ZDFiOWI1YmM0ZWE3ODY4N2YzMjc4NGE3YTkxMykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2I3MDMyZjgyMzFlMzRlZDA5MmU2ZmY3NmE3NmUxNTAyLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFJvYyBNYXJjaWFub0lydmluZyBQbGF6YU5ldyBZb3JrCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzU0NDQxZTNmNjcyZDRkMjhhMDYyNWM3ZDYwOGU2MWUwID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzUyMTEsIC03MS4xMTk0Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzU4ZWJkNTJjOWYyZDRjYzFiYTU5YWQ4MDQ1OGUzZDU3ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9kMmQzZDg3MWY2ZjI0YTRjOTA5NWQzYWU4YTY5ZWQ3NCA9ICQoYDxkaXYgaWQ9Imh0bWxfZDJkM2Q4NzFmNmYyNGE0YzkwOTVkM2FlOGE2OWVkNzQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNThlYmQ1MmM5ZjJkNGNjMWJhNTlhZDgwNDU4ZTNkNTcuc2V0Q29udGVudChodG1sX2QyZDNkODcxZjZmMjRhNGM5MDk1ZDNhZThhNjllZDc0KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzU0NDQxZTNmNjcyZDRkMjhhMDYyNWM3ZDYwOGU2MWUwLmJpbmRQb3B1cChwb3B1cF81OGViZDUyYzlmMmQ0Y2MxYmE1OWFkODA0NThlM2Q1NykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzU0NDQxZTNmNjcyZDRkMjhhMDYyNWM3ZDYwOGU2MWUwLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFJvYyBNYXJjaWFub1BhcmFkaXNlIFJvY2sgQ2x1YkJvc3RvbgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9lNDJkM2NmZWM5Y2Q0MTRmYmVlZWE4NTZkODEyNDgyNCA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzM0LjA0NDk0LCAtMTE4LjI2NTVdLCBbMzIuNzE2MzYsIC0xMTcuMTU5NjFdLCBbMzcuODA3ODUsIC0xMjIuMjddLCBbNDcuNjYxMjgsIC0xMjIuMzEzNjVdLCBbMzkuNzU0NDksIC0xMDQuOTc4NTRdLCBbNDQuOTc4MjcsIC05My4yNzYwOF0sIFs0MS45MTg1NiwgLTg3LjY5MDAzXSwgWzQxLjMxMTU3LCAtNzIuOTI5MzZdLCBbMzkuOTU4OTgsIC03NS4xNTAyOF0sIFs0MC43MzQ5MiwgLTczLjk4ODQ1XSwgWzQyLjM1MjExLCAtNzEuMTE5NDJdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJiZWlnZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzM5YzcwZGE5Mzk5ZDQ3M2U5MDcwMTIxNmVhOWUzZjliID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzg3MSwgLTgzLjEwMjZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF82MmJiNmZhMjA1OTk0NDEyYjRhZDdiOTczNWQzZGQ5ZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYmMxZTJlMWQxYmI5NDIzMzkxNGNlOTc1ZmUwNTkxNzYgPSAkKGA8ZGl2IGlkPSJodG1sX2JjMWUyZTFkMWJiOTQyMzM5MTRjZTk3NWZlMDU5MTc2IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzYyYmI2ZmEyMDU5OTQ0MTJiNGFkN2I5NzM1ZDNkZDlkLnNldENvbnRlbnQoaHRtbF9iYzFlMmUxZDFiYjk0MjMzOTE0Y2U5NzVmZTA1OTE3Nik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8zOWM3MGRhOTM5OWQ0NzNlOTA3MDEyMTZlYTllM2Y5Yi5iaW5kUG9wdXAocG9wdXBfNjJiYjZmYTIwNTk5NDQxMmI0YWQ3Yjk3MzVkM2RkOWQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8zOWM3MGRhOTM5OWQ0NzNlOTA3MDEyMTZlYTllM2Y5Yi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBLb29rIHRoZSBLYXNoY293TWFqZXN0aWMgVGhlYXRyZURldHJvaXQKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfMTQ1YTU1YWU3ZWY5NDk0NjlmMzViZmE1MDFhY2NkNmEgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0Mi4zODcxLCAtODMuMTAyNl1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJkYXJrYmx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfYzY0YjRhYzVlYjUzNGRkNTg5MTVhYTIyZGQxYWNjYTMgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi4zNjM1LCAtNzEuMTAxNjJdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrZ3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2NjNzkwYjI5ZWIxMTRkMTg4MGFhOGFkYTA5MGJhNjYxID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF84NDc2NzFhZWRjZTA0NDQ5ODgwNGZjNWQ2YTdhYWNhNiA9ICQoYDxkaXYgaWQ9Imh0bWxfODQ3NjcxYWVkY2UwNDQ0OTg4MDRmYzVkNmE3YWFjYTYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfY2M3OTBiMjllYjExNGQxODgwYWE4YWRhMDkwYmE2NjEuc2V0Q29udGVudChodG1sXzg0NzY3MWFlZGNlMDQ0NDk4ODA0ZmM1ZDZhN2FhY2E2KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2M2NGI0YWM1ZWI1MzRkZDU4OTE1YWEyMmRkMWFjY2EzLmJpbmRQb3B1cChwb3B1cF9jYzc5MGIyOWViMTE0ZDE4ODBhYThhZGEwOTBiYTY2MSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2M2NGI0YWM1ZWI1MzRkZDU4OTE1YWEyMmRkMWFjY2EzLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEFMTEJMQUNLU29uaWFDYW1icmlkZ2UKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNmJiYWVjOWNmZjIxNDQwOWE5NDg0MmQ4ZDVjZTI4YTkgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOC45ODE0NCwgLTc2LjkzODI4XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrZ3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya2dyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81NDY5ZjRkY2UyYzM0MjgyYTk2MTg3NmJlZThjYjU5ZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYTc3OTMyNTEwMDVlNDkzZTlmMTNjOTMxMWU5OGU1NjUgPSAkKGA8ZGl2IGlkPSJodG1sX2E3NzkzMjUxMDA1ZTQ5M2U5ZjEzYzkzMTFlOThlNTY1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzU0NjlmNGRjZTJjMzQyODJhOTYxODc2YmVlOGNiNTlmLnNldENvbnRlbnQoaHRtbF9hNzc5MzI1MTAwNWU0OTNlOWYxM2M5MzExZTk4ZTU2NSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82YmJhZWM5Y2ZmMjE0NDA5YTk0ODQyZDhkNWNlMjhhOS5iaW5kUG9wdXAocG9wdXBfNTQ2OWY0ZGNlMmMzNDI4MmE5NjE4NzZiZWU4Y2I1OWYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82YmJhZWM5Y2ZmMjE0NDA5YTk0ODQyZDhkNWNlMjhhOS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBBTExCTEFDS01pbGtib3kgQXJ0aG91c2VDb2xsZWdlIFBhcmsKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfYmYzNDcyYmFiNWUxNDUxZmI5M2FiNWJlMTZhMTRkMGMgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MC43Mzk3NywgLTczLjk4NDkzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrZ3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya2dyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9hZWY2ZjNlNDc4OTE0ODFhYWUzNjBkYmYyMzBhNDZjMCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfOWU1ZDI1Yjk4NjI1NDQ0YWE3NWE0MDQ4NTQyMjhmMDAgPSAkKGA8ZGl2IGlkPSJodG1sXzllNWQyNWI5ODYyNTQ0NGFhNzVhNDA0ODU0MjI4ZjAwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2FlZjZmM2U0Nzg5MTQ4MWFhZTM2MGRiZjIzMGE0NmMwLnNldENvbnRlbnQoaHRtbF85ZTVkMjViOTg2MjU0NDRhYTc1YTQwNDg1NDIyOGYwMCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9iZjM0NzJiYWI1ZTE0NTFmYjkzYWI1YmUxNmExNGQwYy5iaW5kUG9wdXAocG9wdXBfYWVmNmYzZTQ3ODkxNDgxYWFlMzYwZGJmMjMwYTQ2YzApCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9iZjM0NzJiYWI1ZTE0NTFmYjkzYWI1YmUxNmExNGQwYy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBBTExCTEFDS0dyYW1lcmN5IFRoZWF0cmVOZXcgWW9yawogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8xMjM3MDYzYTdmZWU0NDdjYmQwM2Q4NzQwNWQyOTA4NiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM1LjI0MDMsIC04MC44NDUzMV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya2dyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYWZjYmFiNGQwYzRkNDEyMDhjYWRiMmFkM2E2MWMzYTQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzg1MTRkZmYwYWJkOTQ4NTM5ZjU2ODZlMzAwOTdhMjVkID0gJChgPGRpdiBpZD0iaHRtbF84NTE0ZGZmMGFiZDk0ODUzOWY1Njg2ZTMwMDk3YTI1ZCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9hZmNiYWI0ZDBjNGQ0MTIwOGNhZGIyYWQzYTYxYzNhNC5zZXRDb250ZW50KGh0bWxfODUxNGRmZjBhYmQ5NDg1MzlmNTY4NmUzMDA5N2EyNWQpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMTIzNzA2M2E3ZmVlNDQ3Y2JkMDNkODc0MDVkMjkwODYuYmluZFBvcHVwKHBvcHVwX2FmY2JhYjRkMGM0ZDQxMjA4Y2FkYjJhZDNhNjFjM2E0KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMTIzNzA2M2E3ZmVlNDQ3Y2JkMDNkODc0MDVkMjkwODYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQUxMQkxBQ0tUaGUgVW5kZXJncm91bmRDaGFybG90dGUKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZGJhMTMyMzc5ZTFkNGY5NTk3YTI4Mjk2NGE2NjRjMGIgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNS40OTM1LCAtOTcuNTIwMTZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrZ3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2ZhZjczNTEyYzdiNTRhMGVhN2Y2MzBhMTY1OWRjOWQ5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8wODk3ODI0YmNhMmY0ZTAxOWE3MDkxYmVmYjY4NGRhMyA9ICQoYDxkaXYgaWQ9Imh0bWxfMDg5NzgyNGJjYTJmNGUwMTlhNzA5MWJlZmI2ODRkYTMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZmFmNzM1MTJjN2I1NGEwZWE3ZjYzMGExNjU5ZGM5ZDkuc2V0Q29udGVudChodG1sXzA4OTc4MjRiY2EyZjRlMDE5YTcwOTFiZWZiNjg0ZGEzKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2RiYTEzMjM3OWUxZDRmOTU5N2EyODI5NjRhNjY0YzBiLmJpbmRQb3B1cChwb3B1cF9mYWY3MzUxMmM3YjU0YTBlYTdmNjMwYTE2NTlkYzlkOSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2RiYTEzMjM3OWUxZDRmOTU5N2EyODI5NjRhNjY0YzBiLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEFMTEJMQUNLVG93ZXIgVGhlYXRyZU9rbGFob21hIENpdHkKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfNGYzZWIyMWI0OWQwNDY3ZDk1Y2ZiZDFkOGM2NzRiZWYgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0Mi4zNjM1LCAtNzEuMTAxNjJdLCBbMzguOTgxNDQsIC03Ni45MzgyOF0sIFs0MC43Mzk3NywgLTczLjk4NDkzXSwgWzM1LjI0MDMsIC04MC44NDUzMV0sIFszNS40OTM1LCAtOTcuNTIwMTZdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrZ3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImRhcmtncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMTVhN2U2NjViYjkwNGM4NDhhNGQzYTViMGQzOTE0NjIgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi4yODAyMjEsIC04My43NTEyMzc3XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJjYWRldGJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiY2FkZXRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81YzNmYWYzZWNjZDk0ZDVhODMxNzhjMDhjN2MyY2ViMCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYmVmODYwNGIzYTYxNDlhODk3ODhlNzQ4NTRlNzY1YzEgPSAkKGA8ZGl2IGlkPSJodG1sX2JlZjg2MDRiM2E2MTQ5YTg5Nzg4ZTc0ODU0ZTc2NWMxIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzVjM2ZhZjNlY2NkOTRkNWE4MzE3OGMwOGM3YzJjZWIwLnNldENvbnRlbnQoaHRtbF9iZWY4NjA0YjNhNjE0OWE4OTc4OGU3NDg1NGU3NjVjMSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8xNWE3ZTY2NWJiOTA0Yzg0OGE0ZDNhNWIwZDM5MTQ2Mi5iaW5kUG9wdXAocG9wdXBfNWMzZmFmM2VjY2Q5NGQ1YTgzMTc4YzA4YzdjMmNlYjApCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8xNWE3ZTY2NWJiOTA0Yzg0OGE0ZDNhNWIwZDM5MTQ2Mi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBEdXN0eSBNY0ZseUJsaW5kIFBpZ0FubiBBcmJvcgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8wNGVmMTZkZGMyOTA0MmE3ODFhMjIxZjJjNzgzZjVkOSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQyLjI4MDIyMSwgLTgzLjc1MTIzNzddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImNhZGV0Ymx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJjYWRldGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2EyYWMyMTAyYjE1ODQ3ZGRiYzA4OWExMDdjNjcxZTgzID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8xYzU2NTUwNTA4ZWQ0MTM2ODBmZTllMGM2ODA2MWI3YyA9ICQoYDxkaXYgaWQ9Imh0bWxfMWM1NjU1MDUwOGVkNDEzNjgwZmU5ZTBjNjgwNjFiN2MiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYTJhYzIxMDJiMTU4NDdkZGJjMDg5YTEwN2M2NzFlODMuc2V0Q29udGVudChodG1sXzFjNTY1NTA1MDhlZDQxMzY4MGZlOWUwYzY4MDYxYjdjKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzA0ZWYxNmRkYzI5MDQyYTc4MWEyMjFmMmM3ODNmNWQ5LmJpbmRQb3B1cChwb3B1cF9hMmFjMjEwMmIxNTg0N2RkYmMwODlhMTA3YzY3MWU4MykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzA0ZWYxNmRkYzI5MDQyYTc4MWEyMjFmMmM3ODNmNWQ5LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIER1c3R5IE1jRmx5QmxpbmQgUGlnQW5uIEFyYm9yCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lXzQ1OTE0Y2VlODQ5OTRiZDJhY2QyMzZkYTFiYTI2OGVhID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbNDIuMjgwMjIxLCAtODMuNzUxMjM3N10sIFs0Mi4yODAyMjEsIC04My43NTEyMzc3XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiY2FkZXRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJjYWRldGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzRkZGZmMmU3MzFmZjQwYzBiODQ2MzQ0NGE0YjI4NzZiID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDEuODU3NzMsIC04Ny42NTczM10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3B1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF80Zjc3ZGY4NDlkMDc0OTlmOTU5YzkyNjMxM2I1MTE2MyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMGIyOTVlZjkwMGVmNGEwOWIwMDkyZDZjZTAyMmE4ZTAgPSAkKGA8ZGl2IGlkPSJodG1sXzBiMjk1ZWY5MDBlZjRhMDliMDA5MmQ2Y2UwMjJhOGUwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzRmNzdkZjg0OWQwNzQ5OWY5NTljOTI2MzEzYjUxMTYzLnNldENvbnRlbnQoaHRtbF8wYjI5NWVmOTAwZWY0YTA5YjAwOTJkNmNlMDIyYThlMCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV80ZGRmZjJlNzMxZmY0MGMwYjg0NjM0NDRhNGIyODc2Yi5iaW5kUG9wdXAocG9wdXBfNGY3N2RmODQ5ZDA3NDk5Zjk1OWM5MjYzMTNiNTExNjMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV80ZGRmZjJlNzMxZmY0MGMwYjg0NjM0NDRhNGIyODc2Yi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBQYXlyb2xsIEdpb3Zhbm5pICYgQ2FyZG9UaGFsaWEgSGFsbENoaWNhZ28KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfYWZkNDljNjczNDc3NDJjZmFhYTI1MzIwZTdkZDI5YjQgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0MS44NTc3MywgLTg3LjY1NzMzXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3B1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiZGFya3B1cnBsZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZTYyY2Y0NTJhNDBhNGZlZWIzNmY2NTk5M2M5ZTM0OWIgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNy43OTcwNiwgLTEyMi4yNzc3OV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAid2hpdGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAid2hpdGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2JmZDI5MGRlY2ZmNDQ3YzQ4ZTU0NjEzMTdlMmQ2NjI5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9iOGI0YmRlYTU5NTQ0NTYwOTRjNGMxOTFmMDM1NmY1ZiA9ICQoYDxkaXYgaWQ9Imh0bWxfYjhiNGJkZWE1OTU0NDU2MDk0YzRjMTkxZjAzNTZmNWYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYmZkMjkwZGVjZmY0NDdjNDhlNTQ2MTMxN2UyZDY2Mjkuc2V0Q29udGVudChodG1sX2I4YjRiZGVhNTk1NDQ1NjA5NGM0YzE5MWYwMzU2ZjVmKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2U2MmNmNDUyYTQwYTRmZWViMzZmNjU5OTNjOWUzNDliLmJpbmRQb3B1cChwb3B1cF9iZmQyOTBkZWNmZjQ0N2M0OGU1NDYxMzE3ZTJkNjYyOSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2U2MmNmNDUyYTQwYTRmZWViMzZmNjU5OTNjOWUzNDliLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFdlc3RzaWRlIEd1bm5PYWtsYW5kIE1ldHJvIE9wZXJhaG91c2VPYWtsYW5kCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2JhZmQ3NWVkMTJmYjRhYTU4YmFjMGE5NTVkMzI2NTkxID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMDQ3NTksIC0xMTguMzI0MTVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogIndoaXRlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogIndoaXRlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83ZmU5MDA4YmM3Y2Y0NGE4ODZlYzE3MTc0OWZjNjBlNyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfODNhNDIyYzAwNzA5NDJlMmE2ZTY2NzY1MzZkYzU0ZDIgPSAkKGA8ZGl2IGlkPSJodG1sXzgzYTQyMmMwMDcwOTQyZTJhNmU2Njc2NTM2ZGM1NGQyIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzdmZTkwMDhiYzdjZjQ0YTg4NmVjMTcxNzQ5ZmM2MGU3LnNldENvbnRlbnQoaHRtbF84M2E0MjJjMDA3MDk0MmUyYTZlNjY3NjUzNmRjNTRkMik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9iYWZkNzVlZDEyZmI0YWE1OGJhYzBhOTU1ZDMyNjU5MS5iaW5kUG9wdXAocG9wdXBfN2ZlOTAwOGJjN2NmNDRhODg2ZWMxNzE3NDlmYzYwZTcpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9iYWZkNzVlZDEyZmI0YWE1OGJhYzBhOTU1ZDMyNjU5MS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBXZXN0c2lkZSBHdW5uQ2F0Y2ggT25lTG9zIEFuZ2VsZXMgKExBKQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9lZDU0OTE2ZDIwOTQ0Mzg4YjhiNTAyMjcwMGY3OGQyZCA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzM3Ljc5NzA2LCAtMTIyLjI3Nzc5XSwgWzM0LjA0NzU5LCAtMTE4LjMyNDE1XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAid2hpdGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogIndoaXRlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV80NWI5ZTkyNmIzMmY0N2Y0YTBhZjliNWU0MmZjNjRiNiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQyLjYzNjc0MTUsIC04My4yOTE3MDQ2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwaW5rIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInBpbmsiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2I2Yzk2OTNkYTU4MDQ1ODBhODllZTY4NWUzOGNhODkyID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9jMWNkZGUwY2YyYzU0NmM1ODY2Yzg3ODkwYzE5ZjFkZSA9ICQoYDxkaXYgaWQ9Imh0bWxfYzFjZGRlMGNmMmM1NDZjNTg2NmM4Nzg5MGMxOWYxZGUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYjZjOTY5M2RhNTgwNDU4MGE4OWVlNjg1ZTM4Y2E4OTIuc2V0Q29udGVudChodG1sX2MxY2RkZTBjZjJjNTQ2YzU4NjZjODc4OTBjMTlmMWRlKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzQ1YjllOTI2YjMyZjQ3ZjRhMGFmOWI1ZTQyZmM2NGI2LmJpbmRQb3B1cChwb3B1cF9iNmM5NjkzZGE1ODA0NTgwYTg5ZWU2ODVlMzhjYTg5MikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzQ1YjllOTI2YjMyZjQ3ZjRhMGFmOWI1ZTQyZmM2NGI2LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIERvdWdoYm95eiBDYXNob3V0VGhlIENyb2Zvb3QgQmFsbHJvb21Qb250aWFjCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2QxOGJmZDE0YzEyYzRhMTFhOWViNmZjNjM3MzBhMWMxID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzQ5ODg4MiwgLTgzLjA1OTkyMjRdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInBpbmsiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicGluayIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYTA0ODg1MzMyMjVhNGI3OTlmMzJiNjFhNTY0Yzg1OGIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzY4Mzk1NzhkY2VhZTRkYzRiMzA2N2JiNmQ4NTM0MjVhID0gJChgPGRpdiBpZD0iaHRtbF82ODM5NTc4ZGNlYWU0ZGM0YjMwNjdiYjZkODUzNDI1YSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9hMDQ4ODUzMzIyNWE0Yjc5OWYzMmI2MWE1NjRjODU4Yi5zZXRDb250ZW50KGh0bWxfNjgzOTU3OGRjZWFlNGRjNGIzMDY3YmI2ZDg1MzQyNWEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZDE4YmZkMTRjMTJjNGExMWE5ZWI2ZmM2MzczMGExYzEuYmluZFBvcHVwKHBvcHVwX2EwNDg4NTMzMjI1YTRiNzk5ZjMyYjYxYTU2NGM4NThiKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZDE4YmZkMTRjMTJjNGExMWE5ZWI2ZmM2MzczMGExYzEuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgRG91Z2hib3l6IENhc2hvdXRUaGUgR2FyZGVuIFRoZWF0ZXJEZXRyb2l0CiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lXzVhZWEwYTI1MzU0YzQ4YWM4NmQyMjZlZTE3ZjlhY2M0ID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbNDIuNjM2NzQxNSwgLTgzLjI5MTcwNDZdLCBbNDIuMzQ5ODg4MiwgLTgzLjA1OTkyMjRdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwaW5rIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJwaW5rIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9mNTQ1ODQ1NjljYWU0ZDE5YjhhMGNiODRjYmU3YmUxNSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM2Ljk3MiwgLTEyMi4wMjZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0Ymx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzFlNzFlZDViNWQyNDQ3NWY5ZGNlYmUzY2Q1OTk2Mjk2ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8yNWZhMTg0MTdmNzk0OWE1OGUxMTdhNGEyODJiMTZjZCA9ICQoYDxkaXYgaWQ9Imh0bWxfMjVmYTE4NDE3Zjc5NDlhNThlMTE3YTRhMjgyYjE2Y2QiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMWU3MWVkNWI1ZDI0NDc1ZjlkY2ViZTNjZDU5OTYyOTYuc2V0Q29udGVudChodG1sXzI1ZmExODQxN2Y3OTQ5YTU4ZTExN2E0YTI4MmIxNmNkKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2Y1NDU4NDU2OWNhZTRkMTliOGEwY2I4NGNiZTdiZTE1LmJpbmRQb3B1cChwb3B1cF8xZTcxZWQ1YjVkMjQ0NzVmOWRjZWJlM2NkNTk5NjI5NikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2Y1NDU4NDU2OWNhZTRkMTliOGEwY2I4NGNiZTdiZTE1LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEtvb2wgSm9oblRoZSBDYXRhbHlzdFNhbnRhIENydXoKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNzBiYWFmMWMyMjNjNGY3MmFmNGQ5NWE0OThlOTg4NjIgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOC41Njk5OCwgLTEyMS40OTA2OV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Ymx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZjBiYTU5NzA5OTQ0NDYwY2E1NjM1MjJlOWUxYWY5MDggPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzAyMWM3ZTI3ZDcxYTRkMWY4MDZjNWQxMmQ4MDRhZDBhID0gJChgPGRpdiBpZD0iaHRtbF8wMjFjN2UyN2Q3MWE0ZDFmODA2YzVkMTJkODA0YWQwYSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9mMGJhNTk3MDk5NDQ0NjBjYTU2MzUyMmU5ZTFhZjkwOC5zZXRDb250ZW50KGh0bWxfMDIxYzdlMjdkNzFhNGQxZjgwNmM1ZDEyZDgwNGFkMGEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNzBiYWFmMWMyMjNjNGY3MmFmNGQ5NWE0OThlOTg4NjIuYmluZFBvcHVwKHBvcHVwX2YwYmE1OTcwOTk0NDQ2MGNhNTYzNTIyZTllMWFmOTA4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNzBiYWFmMWMyMjNjNGY3MmFmNGQ5NWE0OThlOTg4NjIuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgS29vbCBKb2huQWNlIG9mIFNwYWRlc1NhY3JhbWVudG8KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfYWIwYmVkM2JjZjAwNGYzYWJlNjNiZGUwYWVkOWUwMDUgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNi43MzUxODIxLCAtMTE5Ljc5MzA1MjhdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0Ymx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzYyMTMxMTA5NWU5ZjQzZTY4NzA4MzI0YmFkZGI4NDc2ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8xN2Y5YzUzM2MwYTk0MWY0YjNjYjJhZTc3YzEwNDEwNSA9ICQoYDxkaXYgaWQ9Imh0bWxfMTdmOWM1MzNjMGE5NDFmNGIzY2IyYWU3N2MxMDQxMDUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNjIxMzExMDk1ZTlmNDNlNjg3MDgzMjRiYWRkYjg0NzYuc2V0Q29udGVudChodG1sXzE3ZjljNTMzYzBhOTQxZjRiM2NiMmFlNzdjMTA0MTA1KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2FiMGJlZDNiY2YwMDRmM2FiZTYzYmRlMGFlZDllMDA1LmJpbmRQb3B1cChwb3B1cF82MjEzMTEwOTVlOWY0M2U2ODcwODMyNGJhZGRiODQ3NikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2FiMGJlZDNiY2YwMDRmM2FiZTYzYmRlMGFlZDllMDA1LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEtvb2wgSm9obkNyZXN0IFRoZWF0cmVGcmVzbm8KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfODRiMzM3YzAxMzk1NGZkMjkxNzI1Yjc2MzRjMjNlODkgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMi4yMzcxMTYsIC0xMTAuODY3Mzc0XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81ZjZjMTA1ODYzMWY0ZDQ2OTUzNTQwZThlMjIwZDBiOCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMDhlYmFlMmE1NTZjNDU0MDk4N2IwMTA1ZjRlZTY1YTEgPSAkKGA8ZGl2IGlkPSJodG1sXzA4ZWJhZTJhNTU2YzQ1NDA5ODdiMDEwNWY0ZWU2NWExIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzVmNmMxMDU4NjMxZjRkNDY5NTM1NDBlOGUyMjBkMGI4LnNldENvbnRlbnQoaHRtbF8wOGViYWUyYTU1NmM0NTQwOTg3YjAxMDVmNGVlNjVhMSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV84NGIzMzdjMDEzOTU0ZmQyOTE3MjViNzYzNGMyM2U4OS5iaW5kUG9wdXAocG9wdXBfNWY2YzEwNTg2MzFmNGQ0Njk1MzU0MGU4ZTIyMGQwYjgpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV84NGIzMzdjMDEzOTU0ZmQyOTE3MjViNzYzNGMyM2U4OS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBLb29sIEpvaG5DbHViIFhTVHVjc29uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2NlZDY2ZjZjYjNkNTRjMTc4ZmU3NzMyNTg4Yjk5ZDc3ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzMuNDQ1NzQ0NSwgLTExMi4wNzk2NTU3XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8yOTk1ZDM3ZTgzYmU0NWIyYThiOWQ4ODVjYzU0MmRkMyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfOWE0OTM3N2NhMWU1NGUyZDk3MGI2YWEzM2VmYzFjZmYgPSAkKGA8ZGl2IGlkPSJodG1sXzlhNDkzNzdjYTFlNTRlMmQ5NzBiNmFhMzNlZmMxY2ZmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzI5OTVkMzdlODNiZTQ1YjJhOGI5ZDg4NWNjNTQyZGQzLnNldENvbnRlbnQoaHRtbF85YTQ5Mzc3Y2ExZTU0ZTJkOTcwYjZhYTMzZWZjMWNmZik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9jZWQ2NmY2Y2IzZDU0YzE3OGZlNzczMjU4OGI5OWQ3Ny5iaW5kUG9wdXAocG9wdXBfMjk5NWQzN2U4M2JlNDViMmE4YjlkODg1Y2M1NDJkZDMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9jZWQ2NmY2Y2IzZDU0YzE3OGZlNzczMjU4OGI5OWQ3Ny5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBLb29sIEpvaG5UaGUgUHJlc3Nyb29tUGhvZW5peAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8xNWU0ZmVmZmExNzE0NTZhOGExYmNkOTViMGMyNDU0NCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMyLjc2ODc3NywgLTk2Ljc5Nzk4N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Ymx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMGJiMzBjYzFlZDliNDNmMGFiNjEwY2E3MDNjNzUwMmMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2RkODgxN2Q0YjY2ODRjY2U5NWMwMDkyMDQ4MjVmOTc4ID0gJChgPGRpdiBpZD0iaHRtbF9kZDg4MTdkNGI2Njg0Y2NlOTVjMDA5MjA0ODI1Zjk3OCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8wYmIzMGNjMWVkOWI0M2YwYWI2MTBjYTcwM2M3NTAyYy5zZXRDb250ZW50KGh0bWxfZGQ4ODE3ZDRiNjY4NGNjZTk1YzAwOTIwNDgyNWY5NzgpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMTVlNGZlZmZhMTcxNDU2YThhMWJjZDk1YjBjMjQ1NDQuYmluZFBvcHVwKHBvcHVwXzBiYjMwY2MxZWQ5YjQzZjBhYjYxMGNhNzAzYzc1MDJjKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMTVlNGZlZmZhMTcxNDU2YThhMWJjZDk1YjBjMjQ1NDQuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgS29vbCBKb2huVGhlIExvZnQgYXQgR2lsbGV5J3NEYWxsYXMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZGQ1MTc3NzIzNTZhNDEzZGE5MzZlMDlkMzAzZjk1YmQgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFsyOS40MjU2NzIsIC05OC40NzY5NzU5XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9lNTkyNDRiNzkzZDk0MzJkOTE4YTZkNmMyMzZiYjA3OCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZGM4YTk0ZTk0MGY4NGY0Zjg4NGFmYmQwZjBmMzI5OGIgPSAkKGA8ZGl2IGlkPSJodG1sX2RjOGE5NGU5NDBmODRmNGY4ODRhZmJkMGYwZjMyOThiIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2U1OTI0NGI3OTNkOTQzMmQ5MThhNmQ2YzIzNmJiMDc4LnNldENvbnRlbnQoaHRtbF9kYzhhOTRlOTQwZjg0ZjRmODg0YWZiZDBmMGYzMjk4Yik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9kZDUxNzc3MjM1NmE0MTNkYTkzNmUwOWQzMDNmOTViZC5iaW5kUG9wdXAocG9wdXBfZTU5MjQ0Yjc5M2Q5NDMyZDkxOGE2ZDZjMjM2YmIwNzgpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9kZDUxNzc3MjM1NmE0MTNkYTkzNmUwOWQzMDNmOTViZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBLb29sIEpvaG5BbGFtbyBDaXR5IE11c2ljIENsdWJTYW4gQW50b25pbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9kZDkxNDkxZDY4YTY0MzUzOGYyNDhjYzY5NzQyNmUyYSA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzM2Ljk3MiwgLTEyMi4wMjZdLCBbMzguNTY5OTgsIC0xMjEuNDkwNjldLCBbMzYuNzM1MTgyMSwgLTExOS43OTMwNTI4XSwgWzMyLjIzNzExNiwgLTExMC44NjczNzRdLCBbMzMuNDQ1NzQ0NSwgLTExMi4wNzk2NTU3XSwgWzMyLjc2ODc3NywgLTk2Ljc5Nzk4N10sIFsyOS40MjU2NzIsIC05OC40NzY5NzU5XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJsaWdodGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2UzMmU5NTA3ZjlkNDQxMGRhYTA4MzRhMjkyMGM2NDNlID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDcuNjEzODEsIC0xMjIuMzE5NjddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMTZjNTlmOTI3YWNkNDI5Mjg3ZjhmODYxNzg3OWE1MjIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzQ0YjJhYWFjMjEyZjQ5YTFiMjNjMjM3MDU3ZjJhMDNlID0gJChgPGRpdiBpZD0iaHRtbF80NGIyYWFhYzIxMmY0OWExYjIzYzIzNzA1N2YyYTAzZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8xNmM1OWY5MjdhY2Q0MjkyODdmOGY4NjE3ODc5YTUyMi5zZXRDb250ZW50KGh0bWxfNDRiMmFhYWMyMTJmNDlhMWIyM2MyMzcwNTdmMmEwM2UpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZTMyZTk1MDdmOWQ0NDEwZGFhMDgzNGEyOTIwYzY0M2UuYmluZFBvcHVwKHBvcHVwXzE2YzU5ZjkyN2FjZDQyOTI4N2Y4Zjg2MTc4NzlhNTIyKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZTMyZTk1MDdmOWQ0NDEwZGFhMDgzNGEyOTIwYzY0M2UuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgRyBQZXJpY29OZXVtb3NTZWF0dGxlCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2E0ZjkzZDIwN2M4OTRkNmNhOGFhMjkzOTdiZmE0OTBjID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzcuODA3NzUsIC0xMjIuMjcyN10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9kNWJhMmExM2Y5M2Q0M2VhYWUzMTVlMzc5YWJlYWE0YyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYTQxNGY2ODA4NzJhNGZjNmI1OTE1NjI3ZmZjMDhiNjggPSAkKGA8ZGl2IGlkPSJodG1sX2E0MTRmNjgwODcyYTRmYzZiNTkxNTYyN2ZmYzA4YjY4IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2Q1YmEyYTEzZjkzZDQzZWFhZTMxNWUzNzlhYmVhYTRjLnNldENvbnRlbnQoaHRtbF9hNDE0ZjY4MDg3MmE0ZmM2YjU5MTU2MjdmZmMwOGI2OCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9hNGY5M2QyMDdjODk0ZDZjYThhYTI5Mzk3YmZhNDkwYy5iaW5kUG9wdXAocG9wdXBfZDViYTJhMTNmOTNkNDNlYWFlMzE1ZTM3OWFiZWFhNGMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9hNGY5M2QyMDdjODk0ZDZjYThhYTI5Mzk3YmZhNDkwYy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBHIFBlcmljb1RoZSBOZXcgUGFyaXNoT2FrbGFuZAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9kNTEzOGY3ZTY0YmY0MjBhOTkwMmVmYTkxMGRhN2Q2MCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzI5LjQ0ODY1LCAtOTguNDg3NTddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMDdhNjVkYjdhYTliNDYzN2EyMjVjODFjYzZhOGE4YTcgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2FkZTVhODc5YTQ1ZjQyNmU5YTg4ZWVjMWI0ZjAxMjc2ID0gJChgPGRpdiBpZD0iaHRtbF9hZGU1YTg3OWE0NWY0MjZlOWE4OGVlYzFiNGYwMTI3NiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8wN2E2NWRiN2FhOWI0NjM3YTIyNWM4MWNjNmE4YThhNy5zZXRDb250ZW50KGh0bWxfYWRlNWE4NzlhNDVmNDI2ZTlhODhlZWMxYjRmMDEyNzYpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZDUxMzhmN2U2NGJmNDIwYTk5MDJlZmE5MTBkYTdkNjAuYmluZFBvcHVwKHBvcHVwXzA3YTY1ZGI3YWE5YjQ2MzdhMjI1YzgxY2M2YThhOGE3KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZDUxMzhmN2U2NGJmNDIwYTk5MDJlZmE5MTBkYTdkNjAuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgRyBQZXJpY29QYXBlciBUaWdlciBNYWluIFN0YWdlU2FuIEFudG9uaW8KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZTg0YjVjN2EzZTcwNDVmYzk2ZTMwYTExYTBiMmM0NjcgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMC4yNDAyOSwgLTk3LjcyODUzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2Y0OTljMDk3ZGIxOTQwNGU4ZmMzMjg2OTU4MjZkZDZhID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9hZWU4MjgxMmIxMWY0OTUzOWExNWYxOGFiZmUyMzE4NCA9ICQoYDxkaXYgaWQ9Imh0bWxfYWVlODI4MTJiMTFmNDk1MzlhMTVmMThhYmZlMjMxODQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZjQ5OWMwOTdkYjE5NDA0ZThmYzMyODY5NTgyNmRkNmEuc2V0Q29udGVudChodG1sX2FlZTgyODEyYjExZjQ5NTM5YTE1ZjE4YWJmZTIzMTg0KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2U4NGI1YzdhM2U3MDQ1ZmM5NmUzMGExMWEwYjJjNDY3LmJpbmRQb3B1cChwb3B1cF9mNDk5YzA5N2RiMTk0MDRlOGZjMzI4Njk1ODI2ZGQ2YSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2U4NGI1YzdhM2U3MDQ1ZmM5NmUzMGExMWEwYjJjNDY3LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEcgUGVyaWNvQ29tZSBhbmQgVGFrZSBJdCBMaXZlQXVzdGluCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzBiYTVmMmNmM2ZiZDQwYjdiMDFkYWQyYmM3Y2VmOTJiID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMjkuNzUyMTIsIC05NS4zNTQ2N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81M2JmMWEzZjVkNmY0ZTE0OTkzNzQ4NzM4ZWRlMzdkZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMDE4NDI4ODU4ODg5NDMxMDgzMDJjYTNiMjM5MTg2MjcgPSAkKGA8ZGl2IGlkPSJodG1sXzAxODQyODg1ODg4OTQzMTA4MzAyY2EzYjIzOTE4NjI3IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzUzYmYxYTNmNWQ2ZjRlMTQ5OTM3NDg3MzhlZGUzN2RmLnNldENvbnRlbnQoaHRtbF8wMTg0Mjg4NTg4ODk0MzEwODMwMmNhM2IyMzkxODYyNyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8wYmE1ZjJjZjNmYmQ0MGI3YjAxZGFkMmJjN2NlZjkyYi5iaW5kUG9wdXAocG9wdXBfNTNiZjFhM2Y1ZDZmNGUxNDk5Mzc0ODczOGVkZTM3ZGYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8wYmE1ZjJjZjNmYmQ0MGI3YjAxZGFkMmJjN2NlZjkyYi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBHIFBlcmljb1RoZSBTdHVkaW8gYXQgV2FyZWhvdXNlIExpdmVIb3VzdG9uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzE4NTY0OTc3NmJhODRmMDU5OTE1YzEwNTJiMDIxNmVjID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzIuNzg0NjEsIC05Ni43ODQ0Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGdyZWVuIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83NWNiNDYyZjQ4MzE0YTRmOWFiNWQ4MDU5ZmRmNWEyNCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfODRlMjAzY2VjYWUyNDk5MzkxN2NkMmM1ZjQ4YjIzZmEgPSAkKGA8ZGl2IGlkPSJodG1sXzg0ZTIwM2NlY2FlMjQ5OTM5MTdjZDJjNWY0OGIyM2ZhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzc1Y2I0NjJmNDgzMTRhNGY5YWI1ZDgwNTlmZGY1YTI0LnNldENvbnRlbnQoaHRtbF84NGUyMDNjZWNhZTI0OTkzOTE3Y2QyYzVmNDhiMjNmYSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8xODU2NDk3NzZiYTg0ZjA1OTkxNWMxMDUyYjAyMTZlYy5iaW5kUG9wdXAocG9wdXBfNzVjYjQ2MmY0ODMxNGE0ZjlhYjVkODA1OWZkZjVhMjQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8xODU2NDk3NzZiYTg0ZjA1OTkxNWMxMDUyYjAyMTZlYy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBHIFBlcmljb1RyZWVzRGFsbGFzCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2NhODM1MzFjYjRhNTRhMGZiMGJkMTc5YWU0YzBhOWMzID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzguOTE3MiwgLTc3LjAyNzc2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2Y1ODg5Yzg0M2M2MDQxNTRhYzVjODI1NWFhZjIzOGVhID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF81MmY1ZjA2NDA3YTM0OTFkYjFlZWIxNzE2NGQ0ODIxNyA9ICQoYDxkaXYgaWQ9Imh0bWxfNTJmNWYwNjQwN2EzNDkxZGIxZWViMTcxNjRkNDgyMTciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZjU4ODljODQzYzYwNDE1NGFjNWM4MjU1YWFmMjM4ZWEuc2V0Q29udGVudChodG1sXzUyZjVmMDY0MDdhMzQ5MWRiMWVlYjE3MTY0ZDQ4MjE3KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2NhODM1MzFjYjRhNTRhMGZiMGJkMTc5YWU0YzBhOWMzLmJpbmRQb3B1cChwb3B1cF9mNTg4OWM4NDNjNjA0MTU0YWM1YzgyNTVhYWYyMzhlYSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2NhODM1MzFjYjRhNTRhMGZiMGJkMTc5YWU0YzBhOWMzLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEcgUGVyaWNvVSBTdHJlZXQgTXVzaWMgSGFsbFdhc2hpbmd0b24KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNDk5ZWM1NWQ4YjU0NGMzNTg4NWM0M2M4MGEzNjdmM2MgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOS45NTg5OCwgLTc1LjE1MDI2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzdkNGU3M2I5NzE4YzQwMDk4YTdiNzQ5MmZmMzIzZWI1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9hNzE3NDA0ZTY4MDA0OTg5YWEzMGM4ZmIzOGMyODJkOSA9ICQoYDxkaXYgaWQ9Imh0bWxfYTcxNzQwNGU2ODAwNDk4OWFhMzBjOGZiMzhjMjgyZDkiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfN2Q0ZTczYjk3MThjNDAwOThhN2I3NDkyZmYzMjNlYjUuc2V0Q29udGVudChodG1sX2E3MTc0MDRlNjgwMDQ5ODlhYTMwYzhmYjM4YzI4MmQ5KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzQ5OWVjNTVkOGI1NDRjMzU4ODVjNDNjODBhMzY3ZjNjLmJpbmRQb3B1cChwb3B1cF83ZDRlNzNiOTcxOGM0MDA5OGE3Yjc0OTJmZjMyM2ViNSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzQ5OWVjNTVkOGI1NDRjMzU4ODVjNDNjODBhMzY3ZjNjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEcgUGVyaWNvVm9sdGFnZSBMb3VuZ2VQaGlsYWRlbHBoaWEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZjkzODFhNmMyZWRhNDVjODkyZWMwY2IwN2ZiNWI5N2MgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi4zNTIxMSwgLTcxLjExOTQyXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2QxOWQ3OWQ3MTc1YzQ3ZjA5OTcyMGM4ODllNjY4MTgwID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8zMjdhNTQ0NzhhMjQ0N2NiOTkxYjY4NzcyZDYzZGMzNiA9ICQoYDxkaXYgaWQ9Imh0bWxfMzI3YTU0NDc4YTI0NDdjYjk5MWI2ODc3MmQ2M2RjMzYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZDE5ZDc5ZDcxNzVjNDdmMDk5NzIwYzg4OWU2NjgxODAuc2V0Q29udGVudChodG1sXzMyN2E1NDQ3OGEyNDQ3Y2I5OTFiNjg3NzJkNjNkYzM2KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2Y5MzgxYTZjMmVkYTQ1Yzg5MmVjMGNiMDdmYjViOTdjLmJpbmRQb3B1cChwb3B1cF9kMTlkNzlkNzE3NWM0N2YwOTk3MjBjODg5ZTY2ODE4MCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2Y5MzgxYTZjMmVkYTQ1Yzg5MmVjMGNiMDdmYjViOTdjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEcgUGVyaWNvUGFyYWRpc2UgUm9jayBDbHViQm9zdG9uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzVhYzYxZTc5NWZiZTRlNWU4OTM4Y2QwMjA2NGQ2Y2JiID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzkuMzE4ODQsIC03Ni42MTk1XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGdyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzhkNzY2NzJkZDdmMjRiMmE5Y2U3MWFmMmQzMjkzMmJjID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF85NWIzMmU0MmE3ODA0ZWMxYTA0MWRiOWEwYTZjZGI0MCA9ICQoYDxkaXYgaWQ9Imh0bWxfOTViMzJlNDJhNzgwNGVjMWEwNDFkYjlhMGE2Y2RiNDAiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfOGQ3NjY3MmRkN2YyNGIyYTljZTcxYWYyZDMyOTMyYmMuc2V0Q29udGVudChodG1sXzk1YjMyZTQyYTc4MDRlYzFhMDQxZGI5YTBhNmNkYjQwKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzVhYzYxZTc5NWZiZTRlNWU4OTM4Y2QwMjA2NGQ2Y2JiLmJpbmRQb3B1cChwb3B1cF84ZDc2NjcyZGQ3ZjI0YjJhOWNlNzFhZjJkMzI5MzJiYykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzVhYzYxZTc5NWZiZTRlNWU4OTM4Y2QwMjA2NGQ2Y2JiLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEcgUGVyaWNvT3R0b2JhckJhbHRpbW9yZQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9jOWQ2NDc3ZmVkMTc0MDAwODZlNGYxMTE1MmJjYWJjYiA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQ3LjYxMzgxLCAtMTIyLjMxOTY3XSwgWzM3LjgwNzc1LCAtMTIyLjI3MjddLCBbMjkuNDQ4NjUsIC05OC40ODc1N10sIFszMC4yNDAyOSwgLTk3LjcyODUzXSwgWzI5Ljc1MjEyLCAtOTUuMzU0NjddLCBbMzIuNzg0NjEsIC05Ni43ODQ0Ml0sIFszOC45MTcyLCAtNzcuMDI3NzZdLCBbMzkuOTU4OTgsIC03NS4xNTAyNl0sIFs0Mi4zNTIxMSwgLTcxLjExOTQyXSwgWzM5LjMxODg0LCAtNzYuNjE5NV1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2U0ZTllMWQ5YTU2NzRiNjM5M2VmNzUyMzY1NTZkNzE1ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDEuNTA4MzIsIC04MS41ODAzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzVmNTJkYWFmODgwZjQxOWJiZWE0MjBmMDBhZGViYTI1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF81N2UzMTU1ZjM5ZWY0ZTNlYjNhMjlhNWYxY2Y4MmU2MyA9ICQoYDxkaXYgaWQ9Imh0bWxfNTdlMzE1NWYzOWVmNGUzZWIzYTI5YTVmMWNmODJlNjMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNWY1MmRhYWY4ODBmNDE5YmJlYTQyMGYwMGFkZWJhMjUuc2V0Q29udGVudChodG1sXzU3ZTMxNTVmMzllZjRlM2ViM2EyOWE1ZjFjZjgyZTYzKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2U0ZTllMWQ5YTU2NzRiNjM5M2VmNzUyMzY1NTZkNzE1LmJpbmRQb3B1cChwb3B1cF81ZjUyZGFhZjg4MGY0MTliYmVhNDIwZjAwYWRlYmEyNSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2U0ZTllMWQ5YTU2NzRiNjM5M2VmNzUyMzY1NTZkNzE1LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFF1ZW50aW4gTWlsbGVyR3JvZyBTaG9wQ2xldmVsYW5kIEhlaWdodHMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfM2Q4MmEyNjVkNmI2NDkxZmE1NTdmNGMzOWM1YTU0YTcgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0MS41MDgzMiwgLTgxLjU4MDNdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV81YTA3OGFhODJjODg0MGU5OGM5MThhNWQ0MTAyMjM0OSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMwLjI3MDEzMDIsIC05Ny43MzU5MDQ2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwdXJwbGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8wMzc3OWQ4ZTZiYjY0NTJlOWU5ZDIwYmY1YzIwNjhhZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYWJkN2UzYjM3OTIzNDUxYWI4ODU2NGY5ZjY0MTliMjUgPSAkKGA8ZGl2IGlkPSJodG1sX2FiZDdlM2IzNzkyMzQ1MWFiODg1NjRmOWY2NDE5YjI1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzAzNzc5ZDhlNmJiNjQ1MmU5ZTlkMjBiZjVjMjA2OGFmLnNldENvbnRlbnQoaHRtbF9hYmQ3ZTNiMzc5MjM0NTFhYjg4NTY0ZjlmNjQxOWIyNSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV81YTA3OGFhODJjODg0MGU5OGM5MThhNWQ0MTAyMjM0OS5iaW5kUG9wdXAocG9wdXBfMDM3NzlkOGU2YmI2NDUyZTllOWQyMGJmNWMyMDY4YWYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV81YTA3OGFhODJjODg0MGU5OGM5MThhNWQ0MTAyMjM0OS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBMZSRNb2hhd2tBdXN0aW4KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfYzQxOTM3ZmQ1OTc3NDU4N2ExMDc3NzgyZDNiYTUyNjAgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1szMC4yNzAxMzAyLCAtOTcuNzM1OTA0Nl1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAicHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV83YjkzOGVlZDMyYTY0N2ZlOTk0YjUyOTk3YmJhZDFlNCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQ2LjcyODksIC0xMjIuOTUzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJvcmFuZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAib3JhbmdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF85ZjYxYjhhMGQ0MDE0YmUwODA0YzRlOWMwMWQ3NzI0NiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMjFkMDVhMzEyODkwNGUyMDlmMzc2NWE3ZjcwYWQyMTAgPSAkKGA8ZGl2IGlkPSJodG1sXzIxZDA1YTMxMjg5MDRlMjA5ZjM3NjVhN2Y3MGFkMjEwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzlmNjFiOGEwZDQwMTRiZTA4MDRjNGU5YzAxZDc3MjQ2LnNldENvbnRlbnQoaHRtbF8yMWQwNWEzMTI4OTA0ZTIwOWYzNzY1YTdmNzBhZDIxMCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV83YjkzOGVlZDMyYTY0N2ZlOTk0YjUyOTk3YmJhZDFlNC5iaW5kUG9wdXAocG9wdXBfOWY2MWI4YTBkNDAxNGJlMDgwNGM0ZTljMDFkNzcyNDYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV83YjkzOGVlZDMyYTY0N2ZlOTk0YjUyOTk3YmJhZDFlNC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBLIERlZXp5VW5rbm93biB2ZW51ZUNlbnRyYWxpYQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV81YWE2MWQ1MWUzNWY0YmJlOWMxZDQxY2Y2NTJhMTNmNiA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQ2LjcyODksIC0xMjIuOTUzXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAib3JhbmdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJvcmFuZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzIzNGQ1M2QwNTk3ZjQyNWZhMzk4NWExNDYxMTJkOThkID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDAuNzEwNjc4MywgLTczLjkzNjQ5NF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9lNTNlNGY0YjM3YWY0MGY4YjM1MzMzZDMyMmVjZDAwZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfOTNlYzI0NDhlMzBjNDRhMDhkYjBkMDlmMjQ3MTBkZjcgPSAkKGA8ZGl2IGlkPSJodG1sXzkzZWMyNDQ4ZTMwYzQ0YTA4ZGIwZDA5ZjI0NzEwZGY3IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2U1M2U0ZjRiMzdhZjQwZjhiMzUzMzNkMzIyZWNkMDBmLnNldENvbnRlbnQoaHRtbF85M2VjMjQ0OGUzMGM0NGEwOGRiMGQwOWYyNDcxMGRmNyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8yMzRkNTNkMDU5N2Y0MjVmYTM5ODVhMTQ2MTEyZDk4ZC5iaW5kUG9wdXAocG9wdXBfZTUzZTRmNGIzN2FmNDBmOGIzNTMzM2QzMjJlY2QwMGYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8yMzRkNTNkMDU5N2Y0MjVmYTM5ODVhMTQ2MTEyZDk4ZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBCbGFjayBDb2JhaW5UaGUgUGFwZXIgQm94QnJvb2tseW4KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfM2UzYjE2YTBlNDQ5NGEwNmI0OWI0NWJhYWE1YjJiMGQgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MC43MTA2NzgzLCAtNzMuOTM2NDk0XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2NmM2MzYzdkYTM0ODQ5YmE5MGQ1ZmMyNzljOTk3ODBkID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9mYjc3ZTcwM2ZmNTY0MDA4YjczYThkZDgzMzlmMDhkMCA9ICQoYDxkaXYgaWQ9Imh0bWxfZmI3N2U3MDNmZjU2NDAwOGI3M2E4ZGQ4MzM5ZjA4ZDAiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfY2YzYzNjN2RhMzQ4NDliYTkwZDVmYzI3OWM5OTc4MGQuc2V0Q29udGVudChodG1sX2ZiNzdlNzAzZmY1NjQwMDhiNzNhOGRkODMzOWYwOGQwKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzNlM2IxNmEwZTQ0OTRhMDZiNDliNDViYWFhNWIyYjBkLmJpbmRQb3B1cChwb3B1cF9jZjNjM2M3ZGEzNDg0OWJhOTBkNWZjMjc5Yzk5NzgwZCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzNlM2IxNmEwZTQ0OTRhMDZiNDliNDViYWFhNWIyYjBkLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEJsYWNrIENvYmFpblRoZSBQYXBlciBCb3hCcm9va2x5bgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV85YjZhNjZkNWEzNTU0MmI1YmVmOThhODFjOTE4MjdjNyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQwLjcxMDY3ODMsIC03My45MzY0OTRdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya3JlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMmFlZjJlNTdjZmM2NGNkMTk0M2U3ZTNmZGIwMDNjMzkgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzhjZTA3NTIwMjY5NDRhYzY5ZjE1Y2ZlNjYxNjM5MzgwID0gJChgPGRpdiBpZD0iaHRtbF84Y2UwNzUyMDI2OTQ0YWM2OWYxNWNmZTY2MTYzOTM4MCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8yYWVmMmU1N2NmYzY0Y2QxOTQzZTdlM2ZkYjAwM2MzOS5zZXRDb250ZW50KGh0bWxfOGNlMDc1MjAyNjk0NGFjNjlmMTVjZmU2NjE2MzkzODApOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfOWI2YTY2ZDVhMzU1NDJiNWJlZjk4YTgxYzkxODI3YzcuYmluZFBvcHVwKHBvcHVwXzJhZWYyZTU3Y2ZjNjRjZDE5NDNlN2UzZmRiMDAzYzM5KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfOWI2YTY2ZDVhMzU1NDJiNWJlZjk4YTgxYzkxODI3YzcuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQmxhY2sgQ29iYWluVGhlIFBhcGVyIEJveEJyb29rbHluCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lX2VlMTFiNmZhOTZlZjRlZDk4NzI2ZmNhYTBlODE5YzY4ID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbNDAuNzEwNjc4MywgLTczLjkzNjQ5NF0sIFs0MC43MTA2NzgzLCAtNzMuOTM2NDk0XSwgWzQwLjcxMDY3ODMsIC03My45MzY0OTRdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9jYzI0NmZkMzZjMDU0NWQ3YTVmNzlmODc3ZTg4YTdmYSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM0LjA5MDcxMiwgLTExOC4zODc5NjZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0cmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0cmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF84ZjBiODViYzMzZmY0MzNmYjVjOTU1ZGRmOGI3MmI2NyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNzkyMzczMWE2ZjM3NDI3YjlkNGQ1NzJmNGRhMWU3ZjkgPSAkKGA8ZGl2IGlkPSJodG1sXzc5MjM3MzFhNmYzNzQyN2I5ZDRkNTcyZjRkYTFlN2Y5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzhmMGI4NWJjMzNmZjQzM2ZiNWM5NTVkZGY4YjcyYjY3LnNldENvbnRlbnQoaHRtbF83OTIzNzMxYTZmMzc0MjdiOWQ0ZDU3MmY0ZGExZTdmOSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9jYzI0NmZkMzZjMDU0NWQ3YTVmNzlmODc3ZTg4YTdmYS5iaW5kUG9wdXAocG9wdXBfOGYwYjg1YmMzM2ZmNDMzZmI1Yzk1NWRkZjhiNzJiNjcpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9jYzI0NmZkMzZjMDU0NWQ3YTVmNzlmODc3ZTg4YTdmYS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBOaWtvIEc0VGhlIFJveHkgVGhlYXRyZVdlc3QgSG9sbHl3b29kCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lXzdjY2UwODljNDExNTQ4ZjhhZGQzZTJkMTQ1NWRmMDNhID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbMzQuMDkwNzEyLCAtMTE4LjM4Nzk2Nl1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0cmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfYmNmZmIwZDI2ZjM5NDhjZGI1NWZjZDUyMDI1NDMxNWQgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi42MzY3NDE1LCAtODMuMjkxNzA0Nl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2I1ZmNhMjkxOGIwNzQzNGI5OTliZDdkODYxMDZlODk5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8yYWQyYzYzYWFkZmE0NzkyYjRkNjlmZTk3MjlhMjZmZSA9ICQoYDxkaXYgaWQ9Imh0bWxfMmFkMmM2M2FhZGZhNDc5MmI0ZDY5ZmU5NzI5YTI2ZmUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYjVmY2EyOTE4YjA3NDM0Yjk5OWJkN2Q4NjEwNmU4OTkuc2V0Q29udGVudChodG1sXzJhZDJjNjNhYWRmYTQ3OTJiNGQ2OWZlOTcyOWEyNmZlKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2JjZmZiMGQyNmYzOTQ4Y2RiNTVmY2Q1MjAyNTQzMTVkLmJpbmRQb3B1cChwb3B1cF9iNWZjYTI5MThiMDc0MzRiOTk5YmQ3ZDg2MTA2ZTg5OSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2JjZmZiMGQyNmYzOTQ4Y2RiNTVmY2Q1MjAyNTQzMTVkLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENhc2hvdXRUaGUgQ3JvZm9vdCBCYWxscm9vbVBvbnRpYWMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNGYxZjY0ZDgwMTIzNDU4Nzk3ZDFiY2VlMTliNDJhZTEgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi4zNDk4ODgyLCAtODMuMDU5OTIyNF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2JjM2YyZGMyNzJiZTQxYTY4Zjc5NWMyNTQwZjM4YjYxID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9iZWFiZTM2NDRjNGE0MTljODgzODFhNTgxYjQ2NGM4YyA9ICQoYDxkaXYgaWQ9Imh0bWxfYmVhYmUzNjQ0YzRhNDE5Yzg4MzgxYTU4MWI0NjRjOGMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYmMzZjJkYzI3MmJlNDFhNjhmNzk1YzI1NDBmMzhiNjEuc2V0Q29udGVudChodG1sX2JlYWJlMzY0NGM0YTQxOWM4ODM4MWE1ODFiNDY0YzhjKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzRmMWY2NGQ4MDEyMzQ1ODc5N2QxYmNlZTE5YjQyYWUxLmJpbmRQb3B1cChwb3B1cF9iYzNmMmRjMjcyYmU0MWE2OGY3OTVjMjU0MGYzOGI2MSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzRmMWY2NGQ4MDEyMzQ1ODc5N2QxYmNlZTE5YjQyYWUxLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENhc2hvdXRUaGUgR2FyZGVuIFRoZWF0ZXJEZXRyb2l0CiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lXzFkNmNhYjc5ZTdhZDQyZjE5ODVmZjRiOTUzOTA1YzVkID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbNDIuNjM2NzQxNSwgLTgzLjI5MTcwNDZdLCBbNDIuMzQ5ODg4MiwgLTgzLjA1OTkyMjRdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJiZWlnZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2QwOWM3NDlkZjc2MjRjMjM5ZjdlMTVkNjYzMjY4MzM3ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDEuOTEwNDEsIC04Ny42NzhdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF80ZGM4ZmMwMWJlOWQ0MmYyYjE5NWNjNjkzNmY1Y2RkMSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZTZlYjgxMDVjNjVhNGY3MDgxZTM3ZTM0NWVlMzM5NTMgPSAkKGA8ZGl2IGlkPSJodG1sX2U2ZWI4MTA1YzY1YTRmNzA4MWUzN2UzNDVlZTMzOTUzIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzRkYzhmYzAxYmU5ZDQyZjJiMTk1Y2M2OTM2ZjVjZGQxLnNldENvbnRlbnQoaHRtbF9lNmViODEwNWM2NWE0ZjcwODFlMzdlMzQ1ZWUzMzk1Myk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9kMDljNzQ5ZGY3NjI0YzIzOWY3ZTE1ZDY2MzI2ODMzNy5iaW5kUG9wdXAocG9wdXBfNGRjOGZjMDFiZTlkNDJmMmIxOTVjYzY5MzZmNWNkZDEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9kMDljNzQ5ZGY3NjI0YzIzOWY3ZTE1ZDY2MzI2ODMzNy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBGbGVlIExvcmRTdWJ0ZXJyYW5lYW5DaGljYWdvCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lX2IzNzE5ZTgwZDNiODRhZTA5ODU2MjFiOWE3MmVjYmU0ID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbNDEuOTEwNDEsIC04Ny42NzhdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrYmx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiZGFya2JsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2QxNTc2NDg4OWM3MzRiMWNhYmQ2ZGViMWI5YmUyMTgyID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMDYyMTIsIC0xMTguMzQ1OF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya2dyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNTViNjQ1NzM2NzViNDQzMzgzODFmYmY0MWZhYmNmODEgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2E4ZTAwMGQ0MDk4NjQ2MjY4NzQ5MWIzMGQ1OTZiM2M0ID0gJChgPGRpdiBpZD0iaHRtbF9hOGUwMDBkNDA5ODY0NjI2ODc0OTFiMzBkNTk2YjNjNCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF81NWI2NDU3MzY3NWI0NDMzODM4MWZiZjQxZmFiY2Y4MS5zZXRDb250ZW50KGh0bWxfYThlMDAwZDQwOTg2NDYyNjg3NDkxYjMwZDU5NmIzYzQpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZDE1NzY0ODg5YzczNGIxY2FiZDZkZWIxYjliZTIxODIuYmluZFBvcHVwKHBvcHVwXzU1YjY0NTczNjc1YjQ0MzM4MzgxZmJmNDFmYWJjZjgxKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZDE1NzY0ODg5YzczNGIxY2FiZDZkZWIxYjliZTIxODIuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgTm9sYW4gVGhlIE5pbmphQnVzYnkncyBFYXN0TG9zIEFuZ2VsZXMgKExBKQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV83YzU0Zjk5MWEyNzQ0MTU3OWFlNzY2NmNiYzU5NzFiNCA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzM0LjA2MjEyLCAtMTE4LjM0NThdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrZ3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImRhcmtncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMjdiNWQyMDM1MDQyNGE4OGE5MGRhMzZmODdkYmI4MTEgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNC4wNjM1OSwgLTExNy42Nzk4MV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiY2FkZXRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImNhZGV0Ymx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYWRmMGVlOTIyYmYzNDllOGE2ZjE3ZjFhOWU5Y2YzN2IgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzM0N2E0MDU3YzAzYzRmNjk4YmY4NmJmZTMxZThlNzc4ID0gJChgPGRpdiBpZD0iaHRtbF8zNDdhNDA1N2MwM2M0ZjY5OGJmODZiZmUzMWU4ZTc3OCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9hZGYwZWU5MjJiZjM0OWU4YTZmMTdmMWE5ZTljZjM3Yi5zZXRDb250ZW50KGh0bWxfMzQ3YTQwNTdjMDNjNGY2OThiZjg2YmZlMzFlOGU3NzgpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMjdiNWQyMDM1MDQyNGE4OGE5MGRhMzZmODdkYmI4MTEuYmluZFBvcHVwKHBvcHVwX2FkZjBlZTkyMmJmMzQ5ZThhNmYxN2YxYTllOWNmMzdiKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMjdiNWQyMDM1MDQyNGE4OGE5MGRhMzZmODdkYmI4MTEuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ1JJTUVBUFBMRUZpcmV3YXRlciBDYW50aW5hT250YXJpbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8wZDU3NzgwOWVhNGU0NDIyODM2Yjc3OGRmODJlYTI5MCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM0LjA1MjgsIC0xMTcuNjI4XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJjYWRldGJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiY2FkZXRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF84ZGZhYjUxZDc3NGI0OGEwYjMwYzU0ODQ2NzQxYTAxNSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfM2Q2MzExMmU1ZTA0NDk5YmExNzA4YmIwOWYyNDQ0YTkgPSAkKGA8ZGl2IGlkPSJodG1sXzNkNjMxMTJlNWUwNDQ5OWJhMTcwOGJiMDlmMjQ0NGE5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzhkZmFiNTFkNzc0YjQ4YTBiMzBjNTQ4NDY3NDFhMDE1LnNldENvbnRlbnQoaHRtbF8zZDYzMTEyZTVlMDQ0OTliYTE3MDhiYjA5ZjI0NDRhOSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8wZDU3NzgwOWVhNGU0NDIyODM2Yjc3OGRmODJlYTI5MC5iaW5kUG9wdXAocG9wdXBfOGRmYWI1MWQ3NzRiNDhhMGIzMGM1NDg0Njc0MWEwMTUpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8wZDU3NzgwOWVhNGU0NDIyODM2Yjc3OGRmODJlYTI5MC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDUklNRUFQUExFVW5rbm93biB2ZW51ZU9udGFyaW8KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfYjZjNTYyNTg4YTZkNDM5YWJhMDg2YmMxYzY0ODhiYjEgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1szNC4wNjM1OSwgLTExNy42Nzk4MV0sIFszNC4wNTI4LCAtMTE3LjYyOF1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImNhZGV0Ymx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiY2FkZXRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV85NGE0Y2JkMTYyZjI0ZjdlYjQ2Y2MxYTc0NWExNDI1YiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQxLjg3ODExLCAtODcuNjI5OF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3B1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9kYmExY2M3YjY3NTI0YjkyOWU3ZTI4N2VhMjg2NzY3YiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNWNmZDExZmIyYzM5NDJkN2FlY2UxODY3ZDU2YTVhZDggPSAkKGA8ZGl2IGlkPSJodG1sXzVjZmQxMWZiMmMzOTQyZDdhZWNlMTg2N2Q1NmE1YWQ4IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2RiYTFjYzdiNjc1MjRiOTI5ZTdlMjg3ZWEyODY3NjdiLnNldENvbnRlbnQoaHRtbF81Y2ZkMTFmYjJjMzk0MmQ3YWVjZTE4NjdkNTZhNWFkOCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV85NGE0Y2JkMTYyZjI0ZjdlYjQ2Y2MxYTc0NWExNDI1Yi5iaW5kUG9wdXAocG9wdXBfZGJhMWNjN2I2NzUyNGI5MjllN2UyODdlYTI4Njc2N2IpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV85NGE0Y2JkMTYyZjI0ZjdlYjQ2Y2MxYTc0NWExNDI1Yi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBXaWxsaWUgVGhlIEtpZFVua25vd24gdmVudWVDaGljYWdvCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzE5ZDliZmYwNWIxYjRlMTlhYjUwYmZjZmJmMDBhMDY3ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDEuOTIzNDQsIC04Ny43MjYzN10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3B1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcHVycGxlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9lNjcxZTdiZDM1NTI0Y2Y5YTAxMjg0Y2IzMzNmMjU1OCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNjRmMDRhODBhMzEwNGYxZThlODE1MGYyMDZiODFjNWYgPSAkKGA8ZGl2IGlkPSJodG1sXzY0ZjA0YTgwYTMxMDRmMWU4ZTgxNTBmMjA2YjgxYzVmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2U2NzFlN2JkMzU1MjRjZjlhMDEyODRjYjMzM2YyNTU4LnNldENvbnRlbnQoaHRtbF82NGYwNGE4MGEzMTA0ZjFlOGU4MTUwZjIwNmI4MWM1Zik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8xOWQ5YmZmMDViMWI0ZTE5YWI1MGJmY2ZiZjAwYTA2Ny5iaW5kUG9wdXAocG9wdXBfZTY3MWU3YmQzNTUyNGNmOWEwMTI4NGNiMzMzZjI1NTgpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8xOWQ5YmZmMDViMWI0ZTE5YWI1MGJmY2ZiZjAwYTA2Ny5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBXaWxsaWUgVGhlIEtpZFRoZSBDaGljYWdvIFBsYWNlQ2hpY2FnbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV84ZDljOTI3ZTQzNDY0ZmM2OTE5ZGE1Zjk0MDdiYjhiNCA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQxLjg3ODExLCAtODcuNjI5OF0sIFs0MS45MjM0NCwgLTg3LjcyNjM3XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3B1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiZGFya3B1cnBsZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZjhlMThiOWYyYmI0NGY0N2ExNTIwOTJjOTM5NzJjZDcgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MS44NTc3MywgLTg3LjY1NzMzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ3aGl0ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJ3aGl0ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYWE4MmRiZDFkMjQ0NGY5OGFkZWRiMjBkZGUyYjViMWMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzgyOWRkNmJiNzQ1YTQ2ZWRhYzg2OGRjYmNhNzU5MmQyID0gJChgPGRpdiBpZD0iaHRtbF84MjlkZDZiYjc0NWE0NmVkYWM4NjhkY2JjYTc1OTJkMiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9hYTgyZGJkMWQyNDQ0Zjk4YWRlZGIyMGRkZTJiNWIxYy5zZXRDb250ZW50KGh0bWxfODI5ZGQ2YmI3NDVhNDZlZGFjODY4ZGNiY2E3NTkyZDIpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZjhlMThiOWYyYmI0NGY0N2ExNTIwOTJjOTM5NzJjZDcuYmluZFBvcHVwKHBvcHVwX2FhODJkYmQxZDI0NDRmOThhZGVkYjIwZGRlMmI1YjFjKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZjhlMThiOWYyYmI0NGY0N2ExNTIwOTJjOTM5NzJjZDcuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgUGF5cm9sbCBHaW92YW5uaVRoYWxpYSBIYWxsQ2hpY2FnbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV8zOGMxOTVjNWU4OTk0NGUwOWQwZmVjZmEwZWJiYWYxMiA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQxLjg1NzczLCAtODcuNjU3MzNdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJ3aGl0ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAid2hpdGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzA2MGJmM2ZjNWNlYjRhNWZiYmQzYTVlYTEyOWQ4YjE3ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDcuNjA4NzksIC0xMjIuMzM5OTldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInBpbmsiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicGluayIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMDA4MjAxZjdkNzE1NDI3YTgwNGQwM2Q2N2YzMGVkMzQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2RiNTNlMTk1OTMwZDQ4M2NiNDkxZGZhODU3ZGI5NDQ3ID0gJChgPGRpdiBpZD0iaHRtbF9kYjUzZTE5NTkzMGQ0ODNjYjQ5MWRmYTg1N2RiOTQ0NyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8wMDgyMDFmN2Q3MTU0MjdhODA0ZDAzZDY3ZjMwZWQzNC5zZXRDb250ZW50KGh0bWxfZGI1M2UxOTU5MzBkNDgzY2I0OTFkZmE4NTdkYjk0NDcpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMDYwYmYzZmM1Y2ViNGE1ZmJiZDNhNWVhMTI5ZDhiMTcuYmluZFBvcHVwKHBvcHVwXzAwODIwMWY3ZDcxNTQyN2E4MDRkMDNkNjdmMzBlZDM0KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMDYwYmYzZmM1Y2ViNGE1ZmJiZDNhNWVhMTI5ZDhiMTcuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSmF5IDMwNVRoZSBTaG93Ym94U2VhdHRsZQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8zOTU2OTk5ODUxYmU0ODVhOTZjZGEwYWQwN2UyYjU2YyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQ1LjUxMTkxMDUsIC0xMjIuNjIyODM3NV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicGluayIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwaW5rIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9jM2UyMjk5YzI1ZGI0NzRlYjliYmQ4NzRjOTM2NjBiMyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfM2M4Mzc5ZGFkOWQwNDdmNWFhZDVkNjljMTE1ZGE5ZmQgPSAkKGA8ZGl2IGlkPSJodG1sXzNjODM3OWRhZDlkMDQ3ZjVhYWQ1ZDY5YzExNWRhOWZkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2MzZTIyOTljMjVkYjQ3NGViOWJiZDg3NGM5MzY2MGIzLnNldENvbnRlbnQoaHRtbF8zYzgzNzlkYWQ5ZDA0N2Y1YWFkNWQ2OWMxMTVkYTlmZCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8zOTU2OTk5ODUxYmU0ODVhOTZjZGEwYWQwN2UyYjU2Yy5iaW5kUG9wdXAocG9wdXBfYzNlMjI5OWMyNWRiNDc0ZWI5YmJkODc0YzkzNjYwYjMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8zOTU2OTk5ODUxYmU0ODVhOTZjZGEwYWQwN2UyYjU2Yy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKYXkgMzA1SGF3dGhvcm5lIFRoZWF0ZXIgTG91bmdlUG9ydGxhbmQKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNjE4M2FmNTlmZmIzNGMzN2I2NWY2ODI0ZWI1OWNmNTAgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMi43NDgxOCwgLTExNy4xMzEzOF0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicGluayIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwaW5rIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF80OTQ0OTE4MDFjNDE0YTQ0OWYyMWQ2MDAzMzZkMTUzZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYjI3NmNiOTFkNzg5NDM1OWJhZTBiOGNkMzZlN2IxNTUgPSAkKGA8ZGl2IGlkPSJodG1sX2IyNzZjYjkxZDc4OTQzNTliYWUwYjhjZDM2ZTdiMTU1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzQ5NDQ5MTgwMWM0MTRhNDQ5ZjIxZDYwMDMzNmQxNTNkLnNldENvbnRlbnQoaHRtbF9iMjc2Y2I5MWQ3ODk0MzU5YmFlMGI4Y2QzNmU3YjE1NSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82MTgzYWY1OWZmYjM0YzM3YjY1ZjY4MjRlYjU5Y2Y1MC5iaW5kUG9wdXAocG9wdXBfNDk0NDkxODAxYzQxNGE0NDlmMjFkNjAwMzM2ZDE1M2QpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82MTgzYWY1OWZmYjM0YzM3YjY1ZjY4MjRlYjU5Y2Y1MC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKYXkgMzA1T2JzZXJ2YXRvcnkgTm9ydGggUGFya1NhbiBEaWVnbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV83MTY1ODg0YjljMTI0Njc1ODg0NzVjYWQ5MzExNGZlZCA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMyLjIyNDk0LCAtMTEwLjk2ODk4XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJwaW5rIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogInBpbmsiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzI3ZTk4NDg0NTZjZjQ1MmZhOGUyODRiZTNjYjYxYTcxID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF85YjIzNzJmZDQxODE0MGVkYWYwOWU1ZDIyMWJmZDIzNyA9ICQoYDxkaXYgaWQ9Imh0bWxfOWIyMzcyZmQ0MTgxNDBlZGFmMDllNWQyMjFiZmQyMzciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMjdlOTg0ODQ1NmNmNDUyZmE4ZTI4NGJlM2NiNjFhNzEuc2V0Q29udGVudChodG1sXzliMjM3MmZkNDE4MTQwZWRhZjA5ZTVkMjIxYmZkMjM3KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzcxNjU4ODRiOWMxMjQ2NzU4ODQ3NWNhZDkzMTE0ZmVkLmJpbmRQb3B1cChwb3B1cF8yN2U5ODQ4NDU2Y2Y0NTJmYThlMjg0YmUzY2I2MWE3MSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzcxNjU4ODRiOWMxMjQ2NzU4ODQ3NWNhZDkzMTE0ZmVkLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEpheSAzMDUxOTEgVG9vbGVUdWNzb24KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfY2E3YzNkYTc1ZjIxNDA5MGEzMjQzNjgxNGRmZDY3ZjEgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMy40MjM0ODI2LCAtMTExLjg1OTAyMzddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInBpbmsiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAicGluayIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNjdkMWM5NTlhNGEzNDlkNGEwYmY2MjRkM2IwYjY2ZTggPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzFkNjlhNjQyOGM3NTQ4YmI5YzRkZGFjOTMyNWJlZjI0ID0gJChgPGRpdiBpZD0iaHRtbF8xZDY5YTY0MjhjNzU0OGJiOWM0ZGRhYzkzMjViZWYyNCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF82N2QxYzk1OWE0YTM0OWQ0YTBiZjYyNGQzYjBiNjZlOC5zZXRDb250ZW50KGh0bWxfMWQ2OWE2NDI4Yzc1NDhiYjljNGRkYWM5MzI1YmVmMjQpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfY2E3YzNkYTc1ZjIxNDA5MGEzMjQzNjgxNGRmZDY3ZjEuYmluZFBvcHVwKHBvcHVwXzY3ZDFjOTU5YTRhMzQ5ZDRhMGJmNjI0ZDNiMGI2NmU4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfY2E3YzNkYTc1ZjIxNDA5MGEzMjQzNjgxNGRmZDY3ZjEuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSmF5IDMwNUNsdWIgUmVkTWVzYQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8wOGE3ODViNWEzNmE0MDA1ODQ5YjM1YjZhMGY4MTY5ZSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQwLjAwOCwgLTEwNS4yNzYyOV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicGluayIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwaW5rIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9mYTlkZTNhMDQ3ZjA0MDMzYmIyMThhNTAzZTJmMDYwOCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMTkwYzQyY2Q5YTg4NDIzNDllNWEzN2QyMjRlY2QwMDYgPSAkKGA8ZGl2IGlkPSJodG1sXzE5MGM0MmNkOWE4ODQyMzQ5ZTVhMzdkMjI0ZWNkMDA2IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2ZhOWRlM2EwNDdmMDQwMzNiYjIxOGE1MDNlMmYwNjA4LnNldENvbnRlbnQoaHRtbF8xOTBjNDJjZDlhODg0MjM0OWU1YTM3ZDIyNGVjZDAwNik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8wOGE3ODViNWEzNmE0MDA1ODQ5YjM1YjZhMGY4MTY5ZS5iaW5kUG9wdXAocG9wdXBfZmE5ZGUzYTA0N2YwNDAzM2JiMjE4YTUwM2UyZjA2MDgpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8wOGE3ODViNWEzNmE0MDA1ODQ5YjM1YjZhMGY4MTY5ZS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKYXkgMzA1Rm94IFRoZWF0cmVCb3VsZGVyCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzZmYjkwZDJlYTZlMzQyZDI4N2YyMmY1ZmNjYzRhM2M2ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzIuNzg0NjEsIC05Ni43ODQ0Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicGluayIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwaW5rIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9mNDRiZjJlYTI1YmE0YmE1OTJmN2IyYzIxYjc2OWI2ZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMDUyYWYwZDE4ZTQ2NDliYmFlMDYyOTcwMDMwOGNhZmUgPSAkKGA8ZGl2IGlkPSJodG1sXzA1MmFmMGQxOGU0NjQ5YmJhZTA2Mjk3MDAzMDhjYWZlIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2Y0NGJmMmVhMjViYTRiYTU5MmY3YjJjMjFiNzY5YjZkLnNldENvbnRlbnQoaHRtbF8wNTJhZjBkMThlNDY0OWJiYWUwNjI5NzAwMzA4Y2FmZSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82ZmI5MGQyZWE2ZTM0MmQyODdmMjJmNWZjY2M0YTNjNi5iaW5kUG9wdXAocG9wdXBfZjQ0YmYyZWEyNWJhNGJhNTkyZjdiMmMyMWI3NjliNmQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82ZmI5MGQyZWE2ZTM0MmQyODdmMjJmNWZjY2M0YTNjNi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKYXkgMzA1VHJlZXNEYWxsYXMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfMjBhMDJkMmM4YjU4NGUwMmFkZjk2MmIxOWFiMDM1MzEgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0Ny42MDg3OSwgLTEyMi4zMzk5OV0sIFs0NS41MTE5MTA1LCAtMTIyLjYyMjgzNzVdLCBbMzIuNzQ4MTgsIC0xMTcuMTMxMzhdLCBbMzIuMjI0OTQsIC0xMTAuOTY4OThdLCBbMzMuNDIzNDgyNiwgLTExMS44NTkwMjM3XSwgWzQwLjAwOCwgLTEwNS4yNzYyOV0sIFszMi43ODQ2MSwgLTk2Ljc4NDQyXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicGluayIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAicGluayIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNTVkYmQ3ZTBkYTNhNDM3ZGJiNDgxYmJiZDE5MTE4ODIgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOS45NTg5OCwgLTc1LjE1MDI2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81YzI1ZDgxY2EzYmY0MjY2YTE5NjY2ZjY3ODBlOGZiMSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYWFhODA2YjNhZWY1NDVmODk0M2NhMDdkNTkwZGU2ZjQgPSAkKGA8ZGl2IGlkPSJodG1sX2FhYTgwNmIzYWVmNTQ1Zjg5NDNjYTA3ZDU5MGRlNmY0IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzVjMjVkODFjYTNiZjQyNjZhMTk2NjZmNjc4MGU4ZmIxLnNldENvbnRlbnQoaHRtbF9hYWE4MDZiM2FlZjU0NWY4OTQzY2EwN2Q1OTBkZTZmNCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV81NWRiZDdlMGRhM2E0MzdkYmI0ODFiYmJkMTkxMTg4Mi5iaW5kUG9wdXAocG9wdXBfNWMyNWQ4MWNhM2JmNDI2NmExOTY2NmY2NzgwZThmYjEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV81NWRiZDdlMGRhM2E0MzdkYmI0ODFiYmJkMTkxMTg4Mi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDb253YXkgdGhlIE1hY2hpbmVWb2x0YWdlIExvdW5nZVBoaWxhZGVscGhpYQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9lZGZlYjVmMzJlYTc0MjBkOTg4ZTE3YTk4MmMxZjVhNiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM4LjkxNTI3LCAtNzcuMDIxMV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0Ymx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNWU0NjI5ZjI1N2UzNDFhYTk2NGQ2Nzc4NzM5ZTBiMmUgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2E1YmY0NjI5NDYxZDRkZTY5MGE0OWJjNjEzMzc0YmJiID0gJChgPGRpdiBpZD0iaHRtbF9hNWJmNDYyOTQ2MWQ0ZGU2OTBhNDliYzYxMzM3NGJiYiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF81ZTQ2MjlmMjU3ZTM0MWFhOTY0ZDY3Nzg3MzllMGIyZS5zZXRDb250ZW50KGh0bWxfYTViZjQ2Mjk0NjFkNGRlNjkwYTQ5YmM2MTMzNzRiYmIpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZWRmZWI1ZjMyZWE3NDIwZDk4OGUxN2E5ODJjMWY1YTYuYmluZFBvcHVwKHBvcHVwXzVlNDYyOWYyNTdlMzQxYWE5NjRkNjc3ODczOWUwYjJlKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZWRmZWI1ZjMyZWE3NDIwZDk4OGUxN2E5ODJjMWY1YTYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ29ud2F5IHRoZSBNYWNoaW5lSG93YXJkIFRoZWF0cmVXYXNoaW5ndG9uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzljNTA3MjY2Y2EzMzQxOGJiNDRkOGUxM2E5ODkyZTg4ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDAuNzU5NTksIC03My45ODddLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0Ymx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzNlZTE1YTVmZWFjZjQzODc4ZGM5NGI0NjQzN2E1MzMxID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8wYjQ4MzA0ODI2MWE0MWUwODEzMzAyNGMxNzNjOWY2MSA9ICQoYDxkaXYgaWQ9Imh0bWxfMGI0ODMwNDgyNjFhNDFlMDgxMzMwMjRjMTczYzlmNjEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfM2VlMTVhNWZlYWNmNDM4NzhkYzk0YjQ2NDM3YTUzMzEuc2V0Q29udGVudChodG1sXzBiNDgzMDQ4MjYxYTQxZTA4MTMzMDI0YzE3M2M5ZjYxKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzljNTA3MjY2Y2EzMzQxOGJiNDRkOGUxM2E5ODkyZTg4LmJpbmRQb3B1cChwb3B1cF8zZWUxNWE1ZmVhY2Y0Mzg3OGRjOTRiNDY0MzdhNTMzMSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzljNTA3MjY2Y2EzMzQxOGJiNDRkOGUxM2E5ODkyZTg4LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENvbndheSB0aGUgTWFjaGluZVNvbnkgSGFsbE5ldyBZb3JrCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzcxNDJiNGZhNmNhYTRkZmI4YmIwZDczYzQ0YmIxOTYwID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzYzNywgLTcxLjEwMTMxXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodGJsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9jMmYwN2QxNTBhZTc0NzAxYmZmMDhmMGMzYmI2OWY2YyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNmZhNzZlOWRiNmM0NDNlNmJlMDYzYmJlZTUxYTE3NjUgPSAkKGA8ZGl2IGlkPSJodG1sXzZmYTc2ZTlkYjZjNDQzZTZiZTA2M2JiZWU1MWExNzY1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2MyZjA3ZDE1MGFlNzQ3MDFiZmYwOGYwYzNiYjY5ZjZjLnNldENvbnRlbnQoaHRtbF82ZmE3NmU5ZGI2YzQ0M2U2YmUwNjNiYmVlNTFhMTc2NSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV83MTQyYjRmYTZjYWE0ZGZiOGJiMGQ3M2M0NGJiMTk2MC5iaW5kUG9wdXAocG9wdXBfYzJmMDdkMTUwYWU3NDcwMWJmZjA4ZjBjM2JiNjlmNmMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV83MTQyYjRmYTZjYWE0ZGZiOGJiMGQ3M2M0NGJiMTk2MC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDb253YXkgdGhlIE1hY2hpbmVUaGUgTWlkZGxlIEVhc3QgLSBEb3duc3RhaXJzQ2FtYnJpZGdlCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lXzdmZTc0OTlmMTVkODQyMTNhNDMyODA1YWU2MDZmZmFhID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbMzkuOTU4OTgsIC03NS4xNTAyNl0sIFszOC45MTUyNywgLTc3LjAyMTFdLCBbNDAuNzU5NTksIC03My45ODddLCBbNDIuMzYzNywgLTcxLjEwMTMxXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJsaWdodGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2NmOWY1ZDJmOGY5YTRhMGU5ZGIwNDIyODE1ZmFjNTc0ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuNDAzODg2OCwgLTgyLjk2NjI5NTZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0Z3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfN2M3ZThkNjIwM2Y2NDk4MTk3OGEwZGIwMDMxNjU2MjcgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzI1YTM0Njg0YTFjODQwOWVhNTk5MDExYTU1MzFmMTAyID0gJChgPGRpdiBpZD0iaHRtbF8yNWEzNDY4NGExYzg0MDllYTU5OTAxMWE1NTMxZjEwMiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF83YzdlOGQ2MjAzZjY0OTgxOTc4YTBkYjAwMzE2NTYyNy5zZXRDb250ZW50KGh0bWxfMjVhMzQ2ODRhMWM4NDA5ZWE1OTkwMTFhNTUzMWYxMDIpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfY2Y5ZjVkMmY4ZjlhNGEwZTlkYjA0MjI4MTVmYWM1NzQuYmluZFBvcHVwKHBvcHVwXzdjN2U4ZDYyMDNmNjQ5ODE5NzhhMGRiMDAzMTY1NjI3KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfY2Y5ZjVkMmY4ZjlhNGEwZTlkYjA0MjI4MTVmYWM1NzQuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgU2V2ZW4gVGhlIEdlbmVyYWxIYXJwb3MgQ29uY2VydCBUaGVhdHJlRGV0cm9pdAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9hODI5NzRlMDcyNGQ0YTVlOTk1ZDkyNTRjNmRjZDI0ZSA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQyLjQwMzg4NjgsIC04Mi45NjYyOTU2XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRncmVlbiIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAibGlnaHRncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfYTRlNWFhYjE5NDMzNGFlMDkxMmEwNzUyMDZkMjk4MWEgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi4zMzE0MjcsIC04My4wNDU3NTM4XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzQ1N2U5MGRmMDYwMTQyZmZiYzE0YmI3YTk5OWRkYTgxID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9lOTMzZjEyMWIwMTI0ZjhhOTQyYWQyNmY1Mzg4Y2UyMyA9ICQoYDxkaXYgaWQ9Imh0bWxfZTkzM2YxMjFiMDEyNGY4YTk0MmFkMjZmNTM4OGNlMjMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNDU3ZTkwZGYwNjAxNDJmZmJjMTRiYjdhOTk5ZGRhODEuc2V0Q29udGVudChodG1sX2U5MzNmMTIxYjAxMjRmOGE5NDJhZDI2ZjUzODhjZTIzKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2E0ZTVhYWIxOTQzMzRhZTA5MTJhMDc1MjA2ZDI5ODFhLmJpbmRQb3B1cChwb3B1cF80NTdlOTBkZjA2MDE0MmZmYmMxNGJiN2E5OTlkZGE4MSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2E0ZTVhYWIxOTQzMzRhZTA5MTJhMDc1MjA2ZDI5ODFhLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFNpbm9Vbmtub3duIHZlbnVlRGV0cm9pdAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9hMTZhMjdiZWEyMTA0ZDA0YTg5NTk2ODMzZmY1NjExOSA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQyLjMzMTQyNywgLTgzLjA0NTc1MzhdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV81YzY5M2E5OTI2NTg0NGFkYWQyYTczN2RjZDdjZmJmYyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQwLjcyODQ1LCAtNzQuMDA1MTJdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogInB1cnBsZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2IzODlhY2Y4YTFjOTRmYzRhYTA1YzI4ZjAwNzE3ZjVmID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF81ZDQyNjNkYTllM2U0YTQzYWQ0ZTM2NmMyNmZhMmU4YSA9ICQoYDxkaXYgaWQ9Imh0bWxfNWQ0MjYzZGE5ZTNlNGE0M2FkNGUzNjZjMjZmYTJlOGEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYjM4OWFjZjhhMWM5NGZjNGFhMDVjMjhmMDA3MTdmNWYuc2V0Q29udGVudChodG1sXzVkNDI2M2RhOWUzZTRhNDNhZDRlMzY2YzI2ZmEyZThhKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzVjNjkzYTk5MjY1ODQ0YWRhZDJhNzM3ZGNkN2NmYmZjLmJpbmRQb3B1cChwb3B1cF9iMzg5YWNmOGExYzk0ZmM0YWEwNWMyOGYwMDcxN2Y1ZikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzVjNjkzYTk5MjY1ODQ0YWRhZDJhNzM3ZGNkN2NmYmZjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIERvdCBEZW1vU291bmQgT2YgQnJhemlsTmV3IFlvcmsKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfOTAyMDAxNTAzYmRjNGU0ZmE3MzBjNjRjYjgwOGZjODUgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0MC43Mjg0NSwgLTc0LjAwNTEyXV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAicHVycGxlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2IxN2NmYTlhYjBiNjRjNzE5ODg4MmU5ODliMjQ5ZmViID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMDc4MTYsIC0xMTguMjYwNTZdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogIm9yYW5nZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJvcmFuZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzM4MjQ4NzNhY2ZkZTRkYmVhYzRmYzYwMTRhMzU4MDNjID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9lZDc3NzM0NGZlYzA0MWU5YTI5NzBjNzdjM2FjMjM4YiA9ICQoYDxkaXYgaWQ9Imh0bWxfZWQ3NzczNDRmZWMwNDFlOWEyOTcwYzc3YzNhYzIzOGIiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMzgyNDg3M2FjZmRlNGRiZWFjNGZjNjAxNGEzNTgwM2Muc2V0Q29udGVudChodG1sX2VkNzc3MzQ0ZmVjMDQxZTlhMjk3MGM3N2MzYWMyMzhiKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2IxN2NmYTlhYjBiNjRjNzE5ODg4MmU5ODliMjQ5ZmViLmJpbmRQb3B1cChwb3B1cF8zODI0ODczYWNmZGU0ZGJlYWM0ZmM2MDE0YTM1ODAzYykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2IxN2NmYTlhYjBiNjRjNzE5ODg4MmU5ODliMjQ5ZmViLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFBvbHllc3RlciB0aGUgU2FpbnRVbmtub3duIHZlbnVlRWNobyBQYXJrCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2Q4OWVmY2UwZjRhZjRkMzZiODZmYmEzNjI1ZWY1NjNkID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMDc3NTksIC0xMTguMjYwNjFdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogIm9yYW5nZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJvcmFuZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzI0NDNiMjY4MzFhMTQwNzE4ZmQ4MjhlZDBmMDQ4ZWU3ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF85ZGExMjc0ODQ0YWY0OWViYjFmNzQwYzc1MjJlMjEwYiA9ICQoYDxkaXYgaWQ9Imh0bWxfOWRhMTI3NDg0NGFmNDllYmIxZjc0MGM3NTIyZTIxMGIiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMjQ0M2IyNjgzMWExNDA3MThmZDgyOGVkMGYwNDhlZTcuc2V0Q29udGVudChodG1sXzlkYTEyNzQ4NDRhZjQ5ZWJiMWY3NDBjNzUyMmUyMTBiKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2Q4OWVmY2UwZjRhZjRkMzZiODZmYmEzNjI1ZWY1NjNkLmJpbmRQb3B1cChwb3B1cF8yNDQzYjI2ODMxYTE0MDcxOGZkODI4ZWQwZjA0OGVlNykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2Q4OWVmY2UwZjRhZjRkMzZiODZmYmEzNjI1ZWY1NjNkLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFBvbHllc3RlciB0aGUgU2FpbnRFY2hvcGxleExvcyBBbmdlbGVzIChMQSkKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfNDViNjNiM2YwZGI2NDc0NzhkODYyY2RlNGFhNjI0MjkgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1szNC4wNzgxNiwgLTExOC4yNjA1Nl0sIFszNC4wNzc1OSwgLTExOC4yNjA2MV1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogIm9yYW5nZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAib3JhbmdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV85MTM0OTE2NDg3ZjQ0NDQ4ODQzNDIwMzBhM2M1NzM2ZiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM3Ljc2OTY5LCAtMTIyLjQyMDE2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2UwZTFhZTY3OTg4NzQ0NzlhM2EyMWQxZmMwNmExYjhjID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9lMzQ3OTU3Y2E3ZDM0NWFmOGU0MjNjNmFiY2U2YjQ1OSA9ICQoYDxkaXYgaWQ9Imh0bWxfZTM0Nzk1N2NhN2QzNDVhZjhlNDIzYzZhYmNlNmI0NTkiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZTBlMWFlNjc5ODg3NDQ3OWEzYTIxZDFmYzA2YTFiOGMuc2V0Q29udGVudChodG1sX2UzNDc5NTdjYTdkMzQ1YWY4ZTQyM2M2YWJjZTZiNDU5KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzkxMzQ5MTY0ODdmNDQ0NDg4NDM0MjAzMGEzYzU3MzZmLmJpbmRQb3B1cChwb3B1cF9lMGUxYWU2Nzk4ODc0NDc5YTNhMjFkMWZjMDZhMWI4YykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzkxMzQ5MTY0ODdmNDQ0NDg4NDM0MjAzMGEzYzU3MzZmLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENoaWxkaXNoIE1ham9yQnJpY2sgJiBNb3J0YXIgTXVzaWMgSGFsbFNhbiBGcmFuY2lzY28KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNDNhOTVlNzlmM2MzNDM2MjkzN2YyYjg1Y2ZhOTc2NzUgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszOC41NzM4NSwgLTEyMS40NzAyMV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF82ZTkwY2RjM2I4ZTk0NmM5OTQ1NTEyN2UxNDNmZjNjNyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMTcwYzEzMWNjNjE5NGIwNzkwMjRiODQ2N2I2NWRhYWQgPSAkKGA8ZGl2IGlkPSJodG1sXzE3MGMxMzFjYzYxOTRiMDc5MDI0Yjg0NjdiNjVkYWFkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzZlOTBjZGMzYjhlOTQ2Yzk5NDU1MTI3ZTE0M2ZmM2M3LnNldENvbnRlbnQoaHRtbF8xNzBjMTMxY2M2MTk0YjA3OTAyNGI4NDY3YjY1ZGFhZCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV80M2E5NWU3OWYzYzM0MzYyOTM3ZjJiODVjZmE5NzY3NS5iaW5kUG9wdXAocG9wdXBfNmU5MGNkYzNiOGU5NDZjOTk0NTUxMjdlMTQzZmYzYzcpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV80M2E5NWU3OWYzYzM0MzYyOTM3ZjJiODVjZmE5NzY3NS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaGlsZGlzaCBNYWpvck1vbW8gU2FjcmFtZW50b1NhY3JhbWVudG8KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZDIxNzgzN2ExODNmNGNmNjgyZDliZTFlNThlMDIwYTEgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNC4wODQwMSwgLTExOC4yNzQxOV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8wYTFkYTY0NDgyYjA0OGNkYTdkOGJmNTYzZjU4N2M2OSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNTRmYmI2MDFjNzVmNGFkNDkyZWYwNmIyMDg4ODM4ZDUgPSAkKGA8ZGl2IGlkPSJodG1sXzU0ZmJiNjAxYzc1ZjRhZDQ5MmVmMDZiMjA4ODgzOGQ1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzBhMWRhNjQ0ODJiMDQ4Y2RhN2Q4YmY1NjNmNTg3YzY5LnNldENvbnRlbnQoaHRtbF81NGZiYjYwMWM3NWY0YWQ0OTJlZjA2YjIwODg4MzhkNSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9kMjE3ODM3YTE4M2Y0Y2Y2ODJkOWJlMWU1OGUwMjBhMS5iaW5kUG9wdXAocG9wdXBfMGExZGE2NDQ4MmIwNDhjZGE3ZDhiZjU2M2Y1ODdjNjkpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9kMjE3ODM3YTE4M2Y0Y2Y2ODJkOWJlMWU1OGUwMjBhMS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaGlsZGlzaCBNYWpvckxvcyBHbG9ib3NMb3MgQW5nZWxlcwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8yNjlhODIyNjQ2MGQ0OGY2OWQ0ZmEwOWQ0YTBhZGM2NSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM0LjQxNjI4LCAtMTE5LjY5NTA5XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2Q1NjUzMjlmMDQ1MzRiMzg4ODM2ZTNiN2QzZDJhN2ZlID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF83YzU5ZWZjODFkMjY0ZjM4ODgwZTg3ODMzYjJmYzcyMCA9ICQoYDxkaXYgaWQ9Imh0bWxfN2M1OWVmYzgxZDI2NGYzODg4MGU4NzgzM2IyZmM3MjAiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZDU2NTMyOWYwNDUzNGIzODg4MzZlM2I3ZDNkMmE3ZmUuc2V0Q29udGVudChodG1sXzdjNTllZmM4MWQyNjRmMzg4ODBlODc4MzNiMmZjNzIwKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzI2OWE4MjI2NDYwZDQ4ZjY5ZDRmYTA5ZDRhMGFkYzY1LmJpbmRQb3B1cChwb3B1cF9kNTY1MzI5ZjA0NTM0YjM4ODgzNmUzYjdkM2QyYTdmZSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzI2OWE4MjI2NDYwZDQ4ZjY5ZDRmYTA5ZDRhMGFkYzY1LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENoaWxkaXNoIE1ham9yVmVsdmV0IEpvbmVzU2FudGEgQmFyYmFyYQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV85OTY5Y2QxYTllMTk0NzY5OGRlYzdiOWY2ZjhiMDEzYyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMzLjY5OTg0LCAtMTE3LjkxOTQ1XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzBiMDQ0NTIzZTkyMTQ2NTY5MTUyMzVmMGJjMDM3NzI2ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF82ODNkMjZjMGIwNzg0MWM2YmE2YzU2NTM2ZTdhZGQ5NiA9ICQoYDxkaXYgaWQ9Imh0bWxfNjgzZDI2YzBiMDc4NDFjNmJhNmM1NjUzNmU3YWRkOTYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMGIwNDQ1MjNlOTIxNDY1NjkxNTIzNWYwYmMwMzc3MjYuc2V0Q29udGVudChodG1sXzY4M2QyNmMwYjA3ODQxYzZiYTZjNTY1MzZlN2FkZDk2KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzk5NjljZDFhOWUxOTQ3Njk4ZGVjN2I5ZjZmOGIwMTNjLmJpbmRQb3B1cChwb3B1cF8wYjA0NDUyM2U5MjE0NjU2OTE1MjM1ZjBiYzAzNzcyNikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzk5NjljZDFhOWUxOTQ3Njk4ZGVjN2I5ZjZmOGIwMTNjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENoaWxkaXNoIE1ham9yQ09OU1RFTExBVElPTiBST09NU2FudGEgQW5hCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzNhMzJjYWFlMzUwYjRkNDY5OTAzNzBkM2UyMGFkMTFjID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzMuNDUxNDEsIC0xMTIuMDc4MTldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya3JlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNmJmNWZiZTg0NmMzNDkyYzk4ZWNhNzVjOTIxYTUyYjQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2IxMjBhM2VkZWUzMTQ0NTViMWRjOWYzNGJmNzkwZmM5ID0gJChgPGRpdiBpZD0iaHRtbF9iMTIwYTNlZGVlMzE0NDU1YjFkYzlmMzRiZjc5MGZjOSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF82YmY1ZmJlODQ2YzM0OTJjOThlY2E3NWM5MjFhNTJiNC5zZXRDb250ZW50KGh0bWxfYjEyMGEzZWRlZTMxNDQ1NWIxZGM5ZjM0YmY3OTBmYzkpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfM2EzMmNhYWUzNTBiNGQ0Njk5MDM3MGQzZTIwYWQxMWMuYmluZFBvcHVwKHBvcHVwXzZiZjVmYmU4NDZjMzQ5MmM5OGVjYTc1YzkyMWE1MmI0KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfM2EzMmNhYWUzNTBiNGQ0Njk5MDM3MGQzZTIwYWQxMWMuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2hpbGRpc2ggTWFqb3JUaGUgVmFuIEJ1cmVuUGhvZW5peAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8wMGZmMDczMDE0NWI0M2M2OTc2NjUwMWU2ZTg0MTEwNSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMyLjc5OTUsIC05Ni43ODcyXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2ZhOTNmOTYzN2Y3NDQ0YzA5M2Y3N2ZiYThiYWFjOGI1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8zYzFlNTVkMjMwM2U0ZTU2OTE5Nzc3YjVjZGEyM2U2MyA9ICQoYDxkaXYgaWQ9Imh0bWxfM2MxZTU1ZDIzMDNlNGU1NjkxOTc3N2I1Y2RhMjNlNjMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZmE5M2Y5NjM3Zjc0NDRjMDkzZjc3ZmJhOGJhYWM4YjUuc2V0Q29udGVudChodG1sXzNjMWU1NWQyMzAzZTRlNTY5MTk3NzdiNWNkYTIzZTYzKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzAwZmYwNzMwMTQ1YjQzYzY5NzY2NTAxZTZlODQxMTA1LmJpbmRQb3B1cChwb3B1cF9mYTkzZjk2MzdmNzQ0NGMwOTNmNzdmYmE4YmFhYzhiNSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzAwZmYwNzMwMTQ1YjQzYzY5NzY2NTAxZTZlODQxMTA1LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENoaWxkaXNoIE1ham9yR3JhbmFkYSBUaGVhdGVyRGFsbGFzCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2VkNWRhOGZkMjgwMDRhOTdiZTEyMDJiMTYxZDQwZGMxID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzMuNzYzNjIsIC04NC4zNTA5Nl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9jMDY2MjU2NzcxNjI0YzNjOGRiMWM3NjA1NWFiODdhNCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNjc0MmZmODBjYWUxNDEyZTkxMzM0ODY1ZTJjYTU1YWUgPSAkKGA8ZGl2IGlkPSJodG1sXzY3NDJmZjgwY2FlMTQxMmU5MTMzNDg2NWUyY2E1NWFlIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2MwNjYyNTY3NzE2MjRjM2M4ZGIxYzc2MDU1YWI4N2E0LnNldENvbnRlbnQoaHRtbF82NzQyZmY4MGNhZTE0MTJlOTEzMzQ4NjVlMmNhNTVhZSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9lZDVkYThmZDI4MDA0YTk3YmUxMjAyYjE2MWQ0MGRjMS5iaW5kUG9wdXAocG9wdXBfYzA2NjI1Njc3MTYyNGMzYzhkYjFjNzYwNTVhYjg3YTQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9lZDVkYThmZDI4MDA0YTk3YmUxMjAyYjE2MWQ0MGRjMS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaGlsZGlzaCBNYWpvclZhcmlldHkgUGxheWhvdXNlQXRsYW50YQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9iNTljYzViNjczM2I0YjkzYTQ1OTU5MjMzMmJlMTUwYiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM4LjkxNzg3LCAtNzcuMDIzNzJdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya3JlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNDQxM2IxZWU2N2U0NDExNWI0ZGU1NjJiMjgwOTc5OTkgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2YwMGEzM2E3YmZlNjQwOTNiMGVlMjc1ZmVkYzg2ZjAwID0gJChgPGRpdiBpZD0iaHRtbF9mMDBhMzNhN2JmZTY0MDkzYjBlZTI3NWZlZGM4NmYwMCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF80NDEzYjFlZTY3ZTQ0MTE1YjRkZTU2MmIyODA5Nzk5OS5zZXRDb250ZW50KGh0bWxfZjAwYTMzYTdiZmU2NDA5M2IwZWUyNzVmZWRjODZmMDApOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfYjU5Y2M1YjY3MzNiNGI5M2E0NTk1OTIzMzJiZTE1MGIuYmluZFBvcHVwKHBvcHVwXzQ0MTNiMWVlNjdlNDQxMTViNGRlNTYyYjI4MDk3OTk5KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfYjU5Y2M1YjY3MzNiNGI5M2E0NTk1OTIzMzJiZTE1MGIuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2hpbGRpc2ggTWFqb3I5OjMwIENsdWJXYXNoaW5ndG9uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzUxMzIzNDE5YmFlNDRmN2Q4NjU5MDZkYzNkNDU4OTg0ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDAuNzI4NDUsIC03NC4wMDUxMl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83YmFjZTIxMmU4ZjY0ZjY0YjViNzdkZGI2ZDA2MzNiNSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZGE1NGJlMDFlMjgwNDFlMmIwMGMzYzU0YWMyNGVlNjMgPSAkKGA8ZGl2IGlkPSJodG1sX2RhNTRiZTAxZTI4MDQxZTJiMDBjM2M1NGFjMjRlZTYzIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzdiYWNlMjEyZThmNjRmNjRiNWI3N2RkYjZkMDYzM2I1LnNldENvbnRlbnQoaHRtbF9kYTU0YmUwMWUyODA0MWUyYjAwYzNjNTRhYzI0ZWU2Myk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV81MTMyMzQxOWJhZTQ0ZjdkODY1OTA2ZGMzZDQ1ODk4NC5iaW5kUG9wdXAocG9wdXBfN2JhY2UyMTJlOGY2NGY2NGI1Yjc3ZGRiNmQwNjMzYjUpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV81MTMyMzQxOWJhZTQ0ZjdkODY1OTA2ZGMzZDQ1ODk4NC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaGlsZGlzaCBNYWpvclMuTy5CLidzTWFuaGF0dGFuCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzI3MmZmMzkxZmE1ODQyODU4MjEyMzA3OGY5NWVmMzRhID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDAuNzM0OTIsIC03My45ODg0NV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9hZjA5ZjY5ZDEyYTA0NzkxOGE1M2ZiNGI5Zjg1YzUxZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMjYxY2IxOWVjNjMwNDExMmI1ZGFkMTUyZDA2ZTJiZDggPSAkKGA8ZGl2IGlkPSJodG1sXzI2MWNiMTllYzYzMDQxMTJiNWRhZDE1MmQwNmUyYmQ4IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2FmMDlmNjlkMTJhMDQ3OTE4YTUzZmI0YjlmODVjNTFkLnNldENvbnRlbnQoaHRtbF8yNjFjYjE5ZWM2MzA0MTEyYjVkYWQxNTJkMDZlMmJkOCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8yNzJmZjM5MWZhNTg0Mjg1ODIxMjMwNzhmOTVlZjM0YS5iaW5kUG9wdXAocG9wdXBfYWYwOWY2OWQxMmEwNDc5MThhNTNmYjRiOWY4NWM1MWQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8yNzJmZjM5MWZhNTg0Mjg1ODIxMjMwNzhmOTVlZjM0YS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaGlsZGlzaCBNYWpvcklydmluZyBQbGF6YU5ldyBZb3JrCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzcxMjAxYmE5MmZkZjRiOWZiZDBlNDMzNjNjZWRkY2M4ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzQ3MzUsIC03MS4wOTU2N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya3JlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrcmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF82ZTAyNzk0NDg4NTk0NjkxODNiZWY5MjZmNmRhZGQ5YSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNjEzYmUyNGFkNmNiNDA1MGFhYmZjYzZlZmQ5NDM3ZjMgPSAkKGA8ZGl2IGlkPSJodG1sXzYxM2JlMjRhZDZjYjQwNTBhYWJmY2M2ZWZkOTQzN2YzIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzZlMDI3OTQ0ODg1OTQ2OTE4M2JlZjkyNmY2ZGFkZDlhLnNldENvbnRlbnQoaHRtbF82MTNiZTI0YWQ2Y2I0MDUwYWFiZmNjNmVmZDk0MzdmMyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV83MTIwMWJhOTJmZGY0YjlmYmQwZTQzMzYzY2VkZGNjOC5iaW5kUG9wdXAocG9wdXBfNmUwMjc5NDQ4ODU5NDY5MTgzYmVmOTI2ZjZkYWRkOWEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV83MTIwMWJhOTJmZGY0YjlmYmQwZTQzMzYzY2VkZGNjOC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDaGlsZGlzaCBNYWpvckhvdXNlIG9mIEJsdWVzIEJvc3RvbiBwcmVzZW50ZWQgYnkgQ3JpY2tldCBXaXJlbGVzc0Jvc3RvbgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9jZGMwY2M4YWFmZjE0ZTFmYmVmN2RiNWIzNThkYzE2MCA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzM3Ljc2OTY5LCAtMTIyLjQyMDE2XSwgWzM4LjU3Mzg1LCAtMTIxLjQ3MDIxXSwgWzM0LjA4NDAxLCAtMTE4LjI3NDE5XSwgWzM0LjQxNjI4LCAtMTE5LjY5NTA5XSwgWzMzLjY5OTg0LCAtMTE3LjkxOTQ1XSwgWzMzLjQ1MTQxLCAtMTEyLjA3ODE5XSwgWzMyLjc5OTUsIC05Ni43ODcyXSwgWzMzLjc2MzYyLCAtODQuMzUwOTZdLCBbMzguOTE3ODcsIC03Ny4wMjM3Ml0sIFs0MC43Mjg0NSwgLTc0LjAwNTEyXSwgWzQwLjczNDkyLCAtNzMuOTg4NDVdLCBbNDIuMzQ3MzUsIC03MS4wOTU2N11dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImRhcmtyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzQ2MDg2YWZmYWM0OTQ1ZGRhZDdhZWIyNjU1YzQ2ZGU1ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzQwOTY5LCAtNzEuMDc1NzkyXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZjYzZDY4MDIxZjFmNGFkNjhkNGZjODg4MmJhZmMzOTcgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzU1NDViOTdhNzRmMzQxOGM5YWYwOTc5ZDk4ODE4NDQ2ID0gJChgPGRpdiBpZD0iaHRtbF81NTQ1Yjk3YTc0ZjM0MThjOWFmMDk3OWQ5ODgxODQ0NiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9mNjNkNjgwMjFmMWY0YWQ2OGQ0ZmM4ODgyYmFmYzM5Ny5zZXRDb250ZW50KGh0bWxfNTU0NWI5N2E3NGYzNDE4YzlhZjA5NzlkOTg4MTg0NDYpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNDYwODZhZmZhYzQ5NDVkZGFkN2FlYjI2NTVjNDZkZTUuYmluZFBvcHVwKHBvcHVwX2Y2M2Q2ODAyMWYxZjRhZDY4ZDRmYzg4ODJiYWZjMzk3KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNDYwODZhZmZhYzQ5NDVkZGFkN2FlYjI2NTVjNDZkZTUuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSm9leSBGYXR0czg1IFcgTmV3dG9uIFN0Qm9zdG9uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzlkZTVlOGE2M2M0ZjRmNTRhN2Y2OWUyM2U0YzU2MWU3ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzIuMjI0OTQxNiwgLTExMC45Njg5ODM2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZjZhMGI4MDA0ZTg1NGJlYTgwODg1NmVjYWI5ODZkMTQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzVjZWFkMzE4ZTk1NDRlNjI4NDM5YjBmYzJkNTFlMGVhID0gJChgPGRpdiBpZD0iaHRtbF81Y2VhZDMxOGU5NTQ0ZTYyODQzOWIwZmMyZDUxZTBlYSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9mNmEwYjgwMDRlODU0YmVhODA4ODU2ZWNhYjk4NmQxNC5zZXRDb250ZW50KGh0bWxfNWNlYWQzMThlOTU0NGU2Mjg0MzliMGZjMmQ1MWUwZWEpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfOWRlNWU4YTYzYzRmNGY1NGE3ZjY5ZTIzZTRjNTYxZTcuYmluZFBvcHVwKHBvcHVwX2Y2YTBiODAwNGU4NTRiZWE4MDg4NTZlY2FiOTg2ZDE0KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfOWRlNWU4YTYzYzRmNGY1NGE3ZjY5ZTIzZTRjNTYxZTcuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSm9leSBGYXR0czE5MSBUb29sZVR1Y3NvbgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8zN2NjZmU0YTcyZTI0YWJlYjRhMGU2YmZlNGNhMjJkMiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMyLjIyNDk0MTYsIC0xMTAuOTY4OTgzNl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzIwYTI4ZGFiYjRmNDQ5MGY4NzA1NTBhZTc5MDZiMWVmID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8wN2QyMzUxYTU2Y2Q0YWNlODUzODVjNmY4NWQ2YTcwNSA9ICQoYDxkaXYgaWQ9Imh0bWxfMDdkMjM1MWE1NmNkNGFjZTg1Mzg1YzZmODVkNmE3MDUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMjBhMjhkYWJiNGY0NDkwZjg3MDU1MGFlNzkwNmIxZWYuc2V0Q29udGVudChodG1sXzA3ZDIzNTFhNTZjZDRhY2U4NTM4NWM2Zjg1ZDZhNzA1KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzM3Y2NmZTRhNzJlMjRhYmViNGEwZTZiZmU0Y2EyMmQyLmJpbmRQb3B1cChwb3B1cF8yMGEyOGRhYmI0ZjQ0OTBmODcwNTUwYWU3OTA2YjFlZikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzM3Y2NmZTRhNzJlMjRhYmViNGEwZTZiZmU0Y2EyMmQyLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEpvZXkgRmF0dHMxOTEgVG9vbGVUdWNzb24KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMjAyN2VmMzE5YjMxNGUyMjk0YjQ2ZDE2YzE1NTI3ZWMgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNC4wNDY5OCwgLTExOC4yNDc4XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfOGRlMzAwN2IwNjAzNDJlY2JiNGNhNWNlOWVkOTFlZmMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzliMDU2Yzk1YTk1MDQ1MmU5YzQ5ZGZlNjQ2MzNmMzk1ID0gJChgPGRpdiBpZD0iaHRtbF85YjA1NmM5NWE5NTA0NTJlOWM0OWRmZTY0NjMzZjM5NSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF84ZGUzMDA3YjA2MDM0MmVjYmI0Y2E1Y2U5ZWQ5MWVmYy5zZXRDb250ZW50KGh0bWxfOWIwNTZjOTVhOTUwNDUyZTljNDlkZmU2NDYzM2YzOTUpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfMjAyN2VmMzE5YjMxNGUyMjk0YjQ2ZDE2YzE1NTI3ZWMuYmluZFBvcHVwKHBvcHVwXzhkZTMwMDdiMDYwMzQyZWNiYjRjYTVjZTllZDkxZWZjKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfMjAyN2VmMzE5YjMxNGUyMjk0YjQ2ZDE2YzE1NTI3ZWMuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSm9leSBGYXR0c1JlZ2VudCBUaGVhdGVyTG9zIEFuZ2VsZXMgKExBKQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV82YjRiODRkYzA3ODk0ZDJmYjNlZTAwN2IzNjZiMWE5ZSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM3LjgwNDIzNTQsIC0xMjIuMjcwMzA2OV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2U2NThiNTkyN2VhMjQ0OTNiNWRiOGE4NDhlYjk1OTI0ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9mMDQxODNhYTJjZTI0ZDg4YmYyZGEzZmI5NjY4ZmQ2ZCA9ICQoYDxkaXYgaWQ9Imh0bWxfZjA0MTgzYWEyY2UyNGQ4OGJmMmRhM2ZiOTY2OGZkNmQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZTY1OGI1OTI3ZWEyNDQ5M2I1ZGI4YTg0OGViOTU5MjQuc2V0Q29udGVudChodG1sX2YwNDE4M2FhMmNlMjRkODhiZjJkYTNmYjk2NjhmZDZkKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzZiNGI4NGRjMDc4OTRkMmZiM2VlMDA3YjM2NmIxYTllLmJpbmRQb3B1cChwb3B1cF9lNjU4YjU5MjdlYTI0NDkzYjVkYjhhODQ4ZWI5NTkyNCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzZiNGI4NGRjMDc4OTRkMmZiM2VlMDA3YjM2NmIxYTllLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEpvZXkgRmF0dHNDb21wbGV4IE9ha2xhbmRPYWtsYW5kCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2EzYTY3OTc1NjE4NjQwNmI4MTFmNzViZmUxNGIyN2NkID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDcuNjE4NjksIC0xMjIuMzI5MzldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0cmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0cmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9lYzYwMWJlMjNmZjg0ZDQxOTU2NTExMjMxMDg0ZGEzZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYjVmNWQzNTFjNGFkNDQxYTk2OWE5NDUxNmYxNzVlZjIgPSAkKGA8ZGl2IGlkPSJodG1sX2I1ZjVkMzUxYzRhZDQ0MWE5NjlhOTQ1MTZmMTc1ZWYyIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2VjNjAxYmUyM2ZmODRkNDE5NTY1MTEyMzEwODRkYTNmLnNldENvbnRlbnQoaHRtbF9iNWY1ZDM1MWM0YWQ0NDFhOTY5YTk0NTE2ZjE3NWVmMik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9hM2E2Nzk3NTYxODY0MDZiODExZjc1YmZlMTRiMjdjZC5iaW5kUG9wdXAocG9wdXBfZWM2MDFiZTIzZmY4NGQ0MTk1NjUxMTIzMTA4NGRhM2YpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9hM2E2Nzk3NTYxODY0MDZiODExZjc1YmZlMTRiMjdjZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKb2V5IEZhdHRzRnVuaG91c2VTZWF0dGxlCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzk0ODkwOTk5MGM0ZDQwNGM5MDcxYzJiMjNhZWE2NGY0ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzkuNTI2NDc3NiwgLTExOS44MDM0MTUzXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZTVlOTlhNmY2MmQzNDZlOWFkM2QyNjE4Yzc3NjBjYTkgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzkzNzRhYTRlYWMyNzQyODhhYWZjN2I2NjQzYzMzNWM0ID0gJChgPGRpdiBpZD0iaHRtbF85Mzc0YWE0ZWFjMjc0Mjg4YWFmYzdiNjY0M2MzMzVjNCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9lNWU5OWE2ZjYyZDM0NmU5YWQzZDI2MThjNzc2MGNhOS5zZXRDb250ZW50KGh0bWxfOTM3NGFhNGVhYzI3NDI4OGFhZmM3YjY2NDNjMzM1YzQpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfOTQ4OTA5OTkwYzRkNDA0YzkwNzFjMmIyM2FlYTY0ZjQuYmluZFBvcHVwKHBvcHVwX2U1ZTk5YTZmNjJkMzQ2ZTlhZDNkMjYxOGM3NzYwY2E5KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfOTQ4OTA5OTkwYzRkNDA0YzkwNzFjMmIyM2FlYTY0ZjQuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSm9leSBGYXR0c0p1YiBKdWIncyBUaGlyc3QgUGFybG9yUmVubwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV82NWZlMDEwNDAwNzU0MzM3OGE5ZTkwNWU4MzUwOTdjNSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQwLjc1MzAxMzYsIC0xMTEuOTAwNzk2Nl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzU0NTZiZTYxZTM1NTQ1OGE4NDk4MjdlZTI2ZTAwNWZlID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF80M2RmM2E5OGE0MTM0MWViODM2OWJjM2IyMmU4MTVmYiA9ICQoYDxkaXYgaWQ9Imh0bWxfNDNkZjNhOThhNDEzNDFlYjgzNjliYzNiMjJlODE1ZmIiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNTQ1NmJlNjFlMzU1NDU4YTg0OTgyN2VlMjZlMDA1ZmUuc2V0Q29udGVudChodG1sXzQzZGYzYTk4YTQxMzQxZWI4MzY5YmMzYjIyZTgxNWZiKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzY1ZmUwMTA0MDA3NTQzMzc4YTllOTA1ZTgzNTA5N2M1LmJpbmRQb3B1cChwb3B1cF81NDU2YmU2MWUzNTU0NThhODQ5ODI3ZWUyNmUwMDVmZSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzY1ZmUwMTA0MDA3NTQzMzc4YTllOTA1ZTgzNTA5N2M1LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEpvZXkgRmF0dHNLaWxieSBDb3VydFNhbHQgTGFrZSBDaXR5CiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2M0NzkyZDIyYTM0ZTQwNWFiMWM4MWYxNDY0NGNjYWYxID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzkuMDU0MjA4OCwgLTk0LjU5MDkwNTVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0cmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0cmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81OGMyNzA4NzU1YzU0NDVlOGE1ZjY1MmI0OTdkYjNhYyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNDVmY2Q1Mjg2MTA1NGZhODliMTEzMDAzNTdkMzhiMmQgPSAkKGA8ZGl2IGlkPSJodG1sXzQ1ZmNkNTI4NjEwNTRmYTg5YjExMzAwMzU3ZDM4YjJkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzU4YzI3MDg3NTVjNTQ0NWU4YTVmNjUyYjQ5N2RiM2FjLnNldENvbnRlbnQoaHRtbF80NWZjZDUyODYxMDU0ZmE4OWIxMTMwMDM1N2QzOGIyZCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9jNDc5MmQyMmEzNGU0MDVhYjFjODFmMTQ2NDRjY2FmMS5iaW5kUG9wdXAocG9wdXBfNThjMjcwODc1NWM1NDQ1ZThhNWY2NTJiNDk3ZGIzYWMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9jNDc5MmQyMmEzNGU0MDVhYjFjODFmMTQ2NDRjY2FmMS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKb2V5IEZhdHRzVGhlIFJpb3QgUm9vbUthbnNhcyBDaXR5CiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2ZlN2NkNDcxNzMwNDRjODg4Yzk1YWI4OWU0ZGJhZjRjID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDUuMTI0ODMxOSwgLTkzLjQyNjYzNDhdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0cmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0cmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9hZTk3MTllYTgzMWY0Y2JhOGVmYjM0YWI1YmQ4ZjMxMyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYjZlZTBkNmEyODQzNDk3ZmExYTk3NzhmM2U2Nzc0MTUgPSAkKGA8ZGl2IGlkPSJodG1sX2I2ZWUwZDZhMjg0MzQ5N2ZhMWE5Nzc4ZjNlNjc3NDE1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2FlOTcxOWVhODMxZjRjYmE4ZWZiMzRhYjViZDhmMzEzLnNldENvbnRlbnQoaHRtbF9iNmVlMGQ2YTI4NDM0OTdmYTFhOTc3OGYzZTY3NzQxNSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9mZTdjZDQ3MTczMDQ0Yzg4OGM5NWFiODllNGRiYWY0Yy5iaW5kUG9wdXAocG9wdXBfYWU5NzE5ZWE4MzFmNGNiYThlZmIzNGFiNWJkOGYzMTMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9mZTdjZDQ3MTczMDQ0Yzg4OGM5NWFiODllNGRiYWY0Yy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKb2V5IEZhdHRzTWFwbGUgVGF2ZXJuIEJhciBhbmQgR3JpbGxNYXBsZSBHcm92ZQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8yNjg5ZDE0MzE2ZDA0ZWNlYjM3M2UwNTgzNDM5NTNkYSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQxLjk1NDM1MTcsIC04Ny43NDkwMzJdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0cmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0cmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF84Y2RjNWJhMWJmYTQ0ZTNiOWExODc4Njc4YzJiNWQ2ZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMzZjYjgxMzVmN2Y3NDI2MDllYmM5MGEwZTQ5NzdlNmUgPSAkKGA8ZGl2IGlkPSJodG1sXzM2Y2I4MTM1ZjdmNzQyNjA5ZWJjOTBhMGU0OTc3ZTZlIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzhjZGM1YmExYmZhNDRlM2I5YTE4Nzg2NzhjMmI1ZDZmLnNldENvbnRlbnQoaHRtbF8zNmNiODEzNWY3Zjc0MjYwOWViYzkwYTBlNDk3N2U2ZSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV8yNjg5ZDE0MzE2ZDA0ZWNlYjM3M2UwNTgzNDM5NTNkYS5iaW5kUG9wdXAocG9wdXBfOGNkYzViYTFiZmE0NGUzYjlhMTg3ODY3OGMyYjVkNmYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV8yNjg5ZDE0MzE2ZDA0ZWNlYjM3M2UwNTgzNDM5NTNkYS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKb2V5IEZhdHRzUG9ydGFnZSBUaGVhdGVyQ2hpY2FnbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9lZWY1MzkyODBhNzU0NzdmYmZhYjkyNjMzNGFjZDk0YyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzM5Ljk3MDI3NDEsIC03NS4xMzU5MjI5XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYTY4YTY5OTdkMzU2NGQ4OTlhYzI0MTUwYTU3N2ViMGQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2FjOWUzNTgwMGYyMDRlODg5NmExOWIxYWVjODY5OWEwID0gJChgPGRpdiBpZD0iaHRtbF9hYzllMzU4MDBmMjA0ZTg4OTZhMTliMWFlYzg2OTlhMCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9hNjhhNjk5N2QzNTY0ZDg5OWFjMjQxNTBhNTc3ZWIwZC5zZXRDb250ZW50KGh0bWxfYWM5ZTM1ODAwZjIwNGU4ODk2YTE5YjFhZWM4Njk5YTApOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfZWVmNTM5MjgwYTc1NDc3ZmJmYWI5MjYzMzRhY2Q5NGMuYmluZFBvcHVwKHBvcHVwX2E2OGE2OTk3ZDM1NjRkODk5YWMyNDE1MGE1NzdlYjBkKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfZWVmNTM5MjgwYTc1NDc3ZmJmYWI5MjYzMzRhY2Q5NGMuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSm9leSBGYXR0c0t1bmcgRnUgTmVja3RpZVBoaWxhZGVscGhpYQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV82MmU3MDMwMTYyMWM0Nzg1YTgzNGRmOTAzOTdhMjI3MSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQzLjIxMjc3NTksIC03Ny40MjgxNjQxXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMGNiNTJlN2VlZmZkNDc1ZWFhMTk0ZDEzMmJlODg1NDAgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzBmYTkzYTA2MWU0MDQ0Mjk4YjdlYWNiYWRlYTM0MjBiID0gJChgPGRpdiBpZD0iaHRtbF8wZmE5M2EwNjFlNDA0NDI5OGI3ZWFjYmFkZWEzNDIwYiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF8wY2I1MmU3ZWVmZmQ0NzVlYWExOTRkMTMyYmU4ODU0MC5zZXRDb250ZW50KGh0bWxfMGZhOTNhMDYxZTQwNDQyOThiN2VhY2JhZGVhMzQyMGIpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNjJlNzAzMDE2MjFjNDc4NWE4MzRkZjkwMzk3YTIyNzEuYmluZFBvcHVwKHBvcHVwXzBjYjUyZTdlZWZmZDQ3NWVhYTE5NGQxMzJiZTg4NTQwKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNjJlNzAzMDE2MjFjNDc4NWE4MzRkZjkwMzk3YTIyNzEuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSm9leSBGYXR0c1RoZSBCYWxscm9vbSBhdCBIYXJtb255IEhvdXNlV2Vic3RlcgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV81MTUzMTk3ZWMwYjI0ZTVmYTlkZjMxZmM4MzRhZGFhMiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQyLjEyMzYyMTMsIC04MC4wODQ2NDldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImxpZ2h0cmVkIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImxpZ2h0cmVkIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8xODllY2JkYTFjZDc0OWFhOWM5NDdkN2Q1OTJiYmQ0YSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZGE5MDU4OGM2ZWJhNDA5NGI3ODNhMjg5YzMyMTUwZjggPSAkKGA8ZGl2IGlkPSJodG1sX2RhOTA1ODhjNmViYTQwOTRiNzgzYTI4OWMzMjE1MGY4IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzE4OWVjYmRhMWNkNzQ5YWE5Yzk0N2Q3ZDU5MmJiZDRhLnNldENvbnRlbnQoaHRtbF9kYTkwNTg4YzZlYmE0MDk0Yjc4M2EyODljMzIxNTBmOCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV81MTUzMTk3ZWMwYjI0ZTVmYTlkZjMxZmM4MzRhZGFhMi5iaW5kUG9wdXAocG9wdXBfMTg5ZWNiZGExY2Q3NDlhYTljOTQ3ZDdkNTkyYmJkNGEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV81MTUzMTk3ZWMwYjI0ZTVmYTlkZjMxZmM4MzRhZGFhMi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBKb2V5IEZhdHRzQmFzZW1lbnQgVHJhbnNtaXNzaW9ucyBUaGVhdHJlRXJpZQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV8xMjUwZGY1YmQwYzI0Zjc5YmI2ZmMyYTE3NmM4NWY3OSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQwLjcxNDMsIC03My45NTU4N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAibGlnaHRyZWQiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAibGlnaHRyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzBlZmY3YjA4YzM5NDRlZDM4NjVmZjI0MzlhMjNkN2M1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF80YTkxOWU1NGI2YmE0MTVlODZkZjljMTY2MzBlNTViOSA9ICQoYDxkaXYgaWQ9Imh0bWxfNGE5MTllNTRiNmJhNDE1ZTg2ZGY5YzE2NjMwZTU1YjkiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMGVmZjdiMDhjMzk0NGVkMzg2NWZmMjQzOWEyM2Q3YzUuc2V0Q29udGVudChodG1sXzRhOTE5ZTU0YjZiYTQxNWU4NmRmOWMxNjYzMGU1NWI5KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzEyNTBkZjViZDBjMjRmNzliYjZmYzJhMTc2Yzg1Zjc5LmJpbmRQb3B1cChwb3B1cF8wZWZmN2IwOGMzOTQ0ZWQzODY1ZmYyNDM5YTIzZDdjNSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzEyNTBkZjViZDBjMjRmNzliYjZmYzJhMTc2Yzg1Zjc5LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEpvZXkgRmF0dHNLbml0dGluZyBGYWN0b3J5IC0gQnJvb2tseW5Ccm9va2x5bgogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9hNWI0NjQwZWVjN2E0MTYyODA2OGE0NGE5MzBkOTE4MiA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQwLjY3ODk0MDEsIC03My40MTczNzY3XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJsaWdodHJlZCIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfN2EzNjZlYTBmODYzNGM3MWEyYzVjMGYxNjRjY2RmNzIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzljYzZjZGExOTdlYjQwZWY4NWFjZGVmOTM5ZTFiZWNmID0gJChgPGRpdiBpZD0iaHRtbF85Y2M2Y2RhMTk3ZWI0MGVmODVhY2RlZjkzOWUxYmVjZiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF83YTM2NmVhMGY4NjM0YzcxYTJjNWMwZjE2NGNjZGY3Mi5zZXRDb250ZW50KGh0bWxfOWNjNmNkYTE5N2ViNDBlZjg1YWNkZWY5MzllMWJlY2YpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfYTViNDY0MGVlYzdhNDE2MjgwNjhhNDRhOTMwZDkxODIuYmluZFBvcHVwKHBvcHVwXzdhMzY2ZWEwZjg2MzRjNzFhMmM1YzBmMTY0Y2NkZjcyKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfYTViNDY0MGVlYzdhNDE2MjgwNjhhNDRhOTMwZDkxODIuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgSm9leSBGYXR0c0FtaXR5dmlsbGUgTXVzaWMgSGFsbEFtaXR5dmlsbGUKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfNDJlY2FhMmQwOTM1NDFhOTk1YzVlOTM4Y2M0NjkxYjAgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1s0Mi4zNDA5NjksIC03MS4wNzU3OTJdLCBbMzIuMjI0OTQxNiwgLTExMC45Njg5ODM2XSwgWzMyLjIyNDk0MTYsIC0xMTAuOTY4OTgzNl0sIFszNC4wNDY5OCwgLTExOC4yNDc4XSwgWzM3LjgwNDIzNTQsIC0xMjIuMjcwMzA2OV0sIFs0Ny42MTg2OSwgLTEyMi4zMjkzOV0sIFszOS41MjY0Nzc2LCAtMTE5LjgwMzQxNTNdLCBbNDAuNzUzMDEzNiwgLTExMS45MDA3OTY2XSwgWzM5LjA1NDIwODgsIC05NC41OTA5MDU1XSwgWzQ1LjEyNDgzMTksIC05My40MjY2MzQ4XSwgWzQxLjk1NDM1MTcsIC04Ny43NDkwMzJdLCBbMzkuOTcwMjc0MSwgLTc1LjEzNTkyMjldLCBbNDMuMjEyNzc1OSwgLTc3LjQyODE2NDFdLCBbNDIuMTIzNjIxMywgLTgwLjA4NDY0OV0sIFs0MC43MTQzLCAtNzMuOTU1ODddLCBbNDAuNjc4OTQwMSwgLTczLjQxNzM3NjddXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJsaWdodHJlZCIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAibGlnaHRyZWQiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzg4ZDQwOWMwMWQ2ZjRiYWU5MTY3MDYwODEzMjEyOTE5ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzYzNjk3LCAtNzEuMTAxMzA4Nl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzZlYmMxZTIzNjJlZjQzOTZhYjk5OTQ4NDE4OGUzMWFiID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9lNWVkNDkxYjg2NDY0MjM4YWIxOTQ3NGU1NjUyMmEzOCA9ICQoYDxkaXYgaWQ9Imh0bWxfZTVlZDQ5MWI4NjQ2NDIzOGFiMTk0NzRlNTY1MjJhMzgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNmViYzFlMjM2MmVmNDM5NmFiOTk5NDg0MTg4ZTMxYWIuc2V0Q29udGVudChodG1sX2U1ZWQ0OTFiODY0NjQyMzhhYjE5NDc0ZTU2NTIyYTM4KTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzg4ZDQwOWMwMWQ2ZjRiYWU5MTY3MDYwODEzMjEyOTE5LmJpbmRQb3B1cChwb3B1cF82ZWJjMWUyMzYyZWY0Mzk2YWI5OTk0ODQxODhlMzFhYikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzg4ZDQwOWMwMWQ2ZjRiYWU5MTY3MDYwODEzMjEyOTE5LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENvcm5lciBCb3kgUFRoZSBNaWRkbGUgRWFzdCAtIERvd25zdGFpcnNDYW1icmlkZ2UKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfYmRiNzliNzljZjY0NDA3ZTlhYWQ3NjFhZWJmYTFmODggPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0MC42Nzg5NDAxLCAtNzMuNDE3Mzc2N10sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiYmVpZ2UiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzJmZjI1Zjc1MDlmZDRiMDk5NDYxZjY2NjFmODVlZDQ5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9mOWU4NDJmMzAyZWQ0MWE3ODA5NTA4ZWNkZDU1MjBiMiA9ICQoYDxkaXYgaWQ9Imh0bWxfZjllODQyZjMwMmVkNDFhNzgwOTUwOGVjZGQ1NTIwYjIiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMmZmMjVmNzUwOWZkNGIwOTk0NjFmNjY2MWY4NWVkNDkuc2V0Q29udGVudChodG1sX2Y5ZTg0MmYzMDJlZDQxYTc4MDk1MDhlY2RkNTUyMGIyKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2JkYjc5Yjc5Y2Y2NDQwN2U5YWFkNzYxYWViZmExZjg4LmJpbmRQb3B1cChwb3B1cF8yZmYyNWY3NTA5ZmQ0YjA5OTQ2MWY2NjYxZjg1ZWQ0OSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2JkYjc5Yjc5Y2Y2NDQwN2U5YWFkNzYxYWViZmExZjg4LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENvcm5lciBCb3kgUEFtaXR5dmlsbGUgTXVzaWMgSGFsbEFtaXR5dmlsbGUKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNWQwZDU1MDY3OTRlNDM3M2EwZWE5ODUwM2MyMDAyYjQgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi44OTMwOTQsIC03OC44NzE1NzldLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJlaWdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJlaWdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9lMzg2NDJjNzIzZTc0NDk3OTM1Y2VjNWU5Yjk0ODJkOCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfM2JmOGRlNDQyYzI5NGYzYmJiOTNiOTdmMWY3OThmZTkgPSAkKGA8ZGl2IGlkPSJodG1sXzNiZjhkZTQ0MmMyOTRmM2JiYjkzYjk3ZjFmNzk4ZmU5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2UzODY0MmM3MjNlNzQ0OTc5MzVjZWM1ZTliOTQ4MmQ4LnNldENvbnRlbnQoaHRtbF8zYmY4ZGU0NDJjMjk0ZjNiYmI5M2I5N2YxZjc5OGZlOSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV81ZDBkNTUwNjc5NGU0MzczYTBlYTk4NTAzYzIwMDJiNC5iaW5kUG9wdXAocG9wdXBfZTM4NjQyYzcyM2U3NDQ5NzkzNWNlYzVlOWI5NDgyZDgpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV81ZDBkNTUwNjc5NGU0MzczYTBlYTk4NTAzYzIwMDJiNC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDb3JuZXIgQm95IFBUb3duIEJhbGxyb29tQnVmZmFsbwogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9lNmRhMGQ2OGM2NDg0OTIyYWQzYTc2NmUwODViNzAzYyA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzQyLjMzMjIxLCAtODMuMDQxNDRdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImJlaWdlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImJlaWdlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9hNjAwNmM4ODhkZDI0M2JiYmMxMzc5NmFlZWJkMzQyNSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNTczNjJiNzAzM2NkNGNlMzkwN2Q5YTFkNzMwZTM3NWMgPSAkKGA8ZGl2IGlkPSJodG1sXzU3MzYyYjcwMzNjZDRjZTM5MDdkOWExZDczMGUzNzVjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2E2MDA2Yzg4OGRkMjQzYmJiYzEzNzk2YWVlYmQzNDI1LnNldENvbnRlbnQoaHRtbF81NzM2MmI3MDMzY2Q0Y2UzOTA3ZDlhMWQ3MzBlMzc1Yyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9lNmRhMGQ2OGM2NDg0OTIyYWQzYTc2NmUwODViNzAzYy5iaW5kUG9wdXAocG9wdXBfYTYwMDZjODg4ZGQyNDNiYmJjMTM3OTZhZWViZDM0MjUpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9lNmRhMGQ2OGM2NDg0OTIyYWQzYTc2NmUwODViNzAzYy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDb3JuZXIgQm95IFBTdC4gQW5kcmV3J3MgSGFsbCBEZXRyb2l0RGV0cm9pdAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV8wMDAwNWM0MzI1YjY0NWMwOWQ1NDc3NjUzYjk3NzdiMyA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQyLjM2MzY5NywgLTcxLjEwMTMwODZdLCBbNDAuNjc4OTQwMSwgLTczLjQxNzM3NjddLCBbNDIuODkzMDk0LCAtNzguODcxNTc5XSwgWzQyLjMzMjIxLCAtODMuMDQxNDRdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJiZWlnZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogZmFsc2UsICJmaWxsQ29sb3IiOiAiYmVpZ2UiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzc4Njg0NWZkM2RkMTQxODlhODRlYTFmYjNkMjI5NTgzID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzAuMzg2Mjk0MiwgLTg5LjA5NDkzNjJdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF84ZGRmOTBlYzliOGY0MTI4YTIwYzQ4NTg3OGM3YjdiZCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfNDU5YjBmYzcxNjYxNGYxOWI4MTY0M2NiZThlM2RkZjMgPSAkKGA8ZGl2IGlkPSJodG1sXzQ1OWIwZmM3MTY2MTRmMTliODE2NDNjYmU4ZTNkZGYzIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzhkZGY5MGVjOWI4ZjQxMjhhMjBjNDg1ODc4YzdiN2JkLnNldENvbnRlbnQoaHRtbF80NTliMGZjNzE2NjE0ZjE5YjgxNjQzY2JlOGUzZGRmMyk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV83ODY4NDVmZDNkZDE0MTg5YTg0ZWExZmIzZDIyOTU4My5iaW5kUG9wdXAocG9wdXBfOGRkZjkwZWM5YjhmNDEyOGEyMGM0ODU4NzhjN2I3YmQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV83ODY4NDVmZDNkZDE0MTg5YTg0ZWExZmIzZDIyOTU4My5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBTaXIgTWljaGFlbCBSb2Nrc0JsdUVudnlHdWxmcG9ydAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV85MWRiZWZhMzJjMTA0MDU4OTQwNGVmMjM4ZDg3MTlmOSA9IEwuY2lyY2xlKAogICAgICAgICAgICAgICAgWzMwLjQ0MDY5NjEsIC05MS4xODk1MjY4XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrYmx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrYmx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNTgxNmNjNmNmYzExNDFlZTlkODYxYTIwYzI4Y2MyNjUgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sX2JmYjE0ZWZkZmM0ZTQ0NTRhYzNhODg0NWQ5MzBmYTU4ID0gJChgPGRpdiBpZD0iaHRtbF9iZmIxNGVmZGZjNGU0NDU0YWMzYTg4NDVkOTMwZmE1OCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF81ODE2Y2M2Y2ZjMTE0MWVlOWQ4NjFhMjBjMjhjYzI2NS5zZXRDb250ZW50KGh0bWxfYmZiMTRlZmRmYzRlNDQ1NGFjM2E4ODQ1ZDkzMGZhNTgpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfOTFkYmVmYTMyYzEwNDA1ODk0MDRlZjIzOGQ4NzE5ZjkuYmluZFBvcHVwKHBvcHVwXzU4MTZjYzZjZmMxMTQxZWU5ZDg2MWEyMGMyOGNjMjY1KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfOTFkYmVmYTMyYzEwNDA1ODk0MDRlZjIzOGQ4NzE5ZjkuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgU2lyIE1pY2hhZWwgUm9ja3NYbyBOaWdodCBDbHViQmF0b24gUm91Z2UKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZWRjZWRlZTNhZTZlNGM4NmI4ZGM5M2FmYmQ0N2IzOGMgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMi43OTk1LCAtOTYuNzg3Ml0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya2JsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya2JsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2U2YzdjYjRkOTExZDQwZDA5OWI2YzlmZjNlOGI3NjE0ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF9kZDdhNTdiMDY0Mjg0YzIwODYwZDA2ZDA0ZmFmZWIyMyA9ICQoYDxkaXYgaWQ9Imh0bWxfZGQ3YTU3YjA2NDI4NGMyMDg2MGQwNmQwNGZhZmViMjMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZTZjN2NiNGQ5MTFkNDBkMDk5YjZjOWZmM2U4Yjc2MTQuc2V0Q29udGVudChodG1sX2RkN2E1N2IwNjQyODRjMjA4NjBkMDZkMDRmYWZlYjIzKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlX2VkY2VkZWUzYWU2ZTRjODZiOGRjOTNhZmJkNDdiMzhjLmJpbmRQb3B1cChwb3B1cF9lNmM3Y2I0ZDkxMWQ0MGQwOTliNmM5ZmYzZThiNzYxNCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlX2VkY2VkZWUzYWU2ZTRjODZiOGRjOTNhZmJkNDdiMzhjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFNpciBNaWNoYWVsIFJvY2tzVGhlIERvb3JEYWxsYXMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfZjdjMTU2ZGRjMTdkNDhkMGI3N2YxYjY1MjNlYzA5ODcgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMi4yMjM2MDMzLCAtMTEwLjk1NjI0NTNdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8zMmNhNjhmYmQwMjM0NWM3YTdhZDdmYWY4NTY2OWRmOSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfZjllNDA2YzdlMDE0NDUzY2EyOTAxNmQ4YmRmMDI2NDIgPSAkKGA8ZGl2IGlkPSJodG1sX2Y5ZTQwNmM3ZTAxNDQ1M2NhMjkwMTZkOGJkZjAyNjQyIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzMyY2E2OGZiZDAyMzQ1YzdhN2FkN2ZhZjg1NjY5ZGY5LnNldENvbnRlbnQoaHRtbF9mOWU0MDZjN2UwMTQ0NTNjYTI5MDE2ZDhiZGYwMjY0Mik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV9mN2MxNTZkZGMxN2Q0OGQwYjc3ZjFiNjUyM2VjMDk4Ny5iaW5kUG9wdXAocG9wdXBfMzJjYTY4ZmJkMDIzNDVjN2E3YWQ3ZmFmODU2NjlkZjkpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV9mN2MxNTZkZGMxN2Q0OGQwYjc3ZjFiNjUyM2VjMDk4Ny5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBTaXIgTWljaGFlbCBSb2Nrc1RoZSBSb2NrVHVjc29uCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzYyMjMyMDYzZTIwNTQ5OTlhNzMyZWRlMzI3ZjE4ZjEzID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMDQ3Nzc1LCAtMTE4LjMyNDExMzRdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF84MDVjNzk5OGVjYjE0YTYyYTY4N2UzOWYxYjA5ZTIwNSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYjBiZDRmYzAwOWE2NGMyYmFjMWY0YTQ5YjU0YWE5NTEgPSAkKGA8ZGl2IGlkPSJodG1sX2IwYmQ0ZmMwMDlhNjRjMmJhYzFmNGE0OWI1NGFhOTUxIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzgwNWM3OTk4ZWNiMTRhNjJhNjg3ZTM5ZjFiMDllMjA1LnNldENvbnRlbnQoaHRtbF9iMGJkNGZjMDA5YTY0YzJiYWMxZjRhNDliNTRhYTk1MSk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV82MjIzMjA2M2UyMDU0OTk5YTczMmVkZTMyN2YxOGYxMy5iaW5kUG9wdXAocG9wdXBfODA1Yzc5OThlY2IxNGE2MmE2ODdlMzlmMWIwOWUyMDUpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV82MjIzMjA2M2UyMDU0OTk5YTczMmVkZTMyN2YxOGYxMy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBTaXIgTWljaGFlbCBSb2Nrc1VuaW9uTG9zIEFuZ2VsZXMKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNTdjYTYxZWMyODZkNDlmMGFhZTQ0MDcwYzlmZDQxY2QgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszMi43MjcyMDg4LCAtMTE3LjE0OTU5OTRdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtibHVlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9jMDI4YWZjZGU5NjY0MzJhYjdjZTVkMjQ1OGNiY2E1NSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfYTgyNmVjZjM1M2FiNDc3Y2I2YTk4YzQ1YzAwNWJjOGYgPSAkKGA8ZGl2IGlkPSJodG1sX2E4MjZlY2YzNTNhYjQ3N2NiNmE5OGM0NWMwMDViYzhmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2MwMjhhZmNkZTk2NjQzMmFiN2NlNWQyNDU4Y2JjYTU1LnNldENvbnRlbnQoaHRtbF9hODI2ZWNmMzUzYWI0NzdjYjZhOThjNDVjMDA1YmM4Zik7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV81N2NhNjFlYzI4NmQ0OWYwYWFlNDQwNzBjOWZkNDFjZC5iaW5kUG9wdXAocG9wdXBfYzAyOGFmY2RlOTY2NDMyYWI3Y2U1ZDI0NThjYmNhNTUpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV81N2NhNjFlYzI4NmQ0OWYwYWFlNDQwNzBjOWZkNDFjZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBTaXIgTWljaGFlbCBSb2Nrc1dvcmxkQmVhdCBDdWx0dXJhbCBDZW50ZXJTYW4gRGllZ28KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNTQ2YWY0OWIyYTcwNDM2NGJlOTc1NDY4N2VkNjQ4ZTcgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFszNS4zNzU4NzY4LCAtMTE5LjAxOTAwNV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya2JsdWUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IHRydWUsICJmaWxsQ29sb3IiOiAiZGFya2JsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzQ5MWQyYTE1ZjY5ZDRlZjNhNzlhNmUwZmU2NjViMjFiID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF83ZWIzYmQxZjU5M2E0YTNkOGQwZjI5OGQ4NGQ4MjE1MCA9ICQoYDxkaXYgaWQ9Imh0bWxfN2ViM2JkMWY1OTNhNGEzZDhkMGYyOThkODRkODIxNTAiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNDkxZDJhMTVmNjlkNGVmM2E3OWE2ZTBmZTY2NWIyMWIuc2V0Q29udGVudChodG1sXzdlYjNiZDFmNTkzYTRhM2Q4ZDBmMjk4ZDg0ZDgyMTUwKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzU0NmFmNDliMmE3MDQzNjRiZTk3NTQ2ODdlZDY0OGU3LmJpbmRQb3B1cChwb3B1cF80OTFkMmExNWY2OWQ0ZWYzYTc5YTZlMGZlNjY1YjIxYikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzU0NmFmNDliMmE3MDQzNjRiZTk3NTQ2ODdlZDY0OGU3LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIFNpciBNaWNoYWVsIFJvY2tzSmVycnkncyBQaXp6YSAmIFB1YkJha2Vyc2ZpZWxkCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX2NjZGVmYWFhMDg5NjQ0MWM4ZTlkN2Y4MzE0MWJjMWQ2ID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzguNTczOTgzMiwgLTEyMS40NzAxNzU1XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrYmx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJkYXJrYmx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZmZlMzlkNTAzMWYzNDJjZWE0NWJjNDc4YWUzOWE4Y2IgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzliYTEwMjFmYTExODQ1YTBiNDQ2ZjcxYzdlNzZkMGI2ID0gJChgPGRpdiBpZD0iaHRtbF85YmExMDIxZmExMTg0NWEwYjQ0NmY3MWM3ZTc2ZDBiNiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF9mZmUzOWQ1MDMxZjM0MmNlYTQ1YmM0NzhhZTM5YThjYi5zZXRDb250ZW50KGh0bWxfOWJhMTAyMWZhMTE4NDVhMGI0NDZmNzFjN2U3NmQwYjYpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfY2NkZWZhYWEwODk2NDQxYzhlOWQ3ZjgzMTQxYmMxZDYuYmluZFBvcHVwKHBvcHVwX2ZmZTM5ZDUwMzFmMzQyY2VhNDViYzQ3OGFlMzlhOGNiKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfY2NkZWZhYWEwODk2NDQxYzhlOWQ3ZjgzMTQxYmMxZDYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgU2lyIE1pY2hhZWwgUm9ja3NIYXJsb3cnc1NhY3JhbWVudG8KICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb2x5X2xpbmVfNjcyZGQyOWJlZDIzNDM1YmE2ZmEyZDI3NWU1YmU1NjYgPSBMLnBvbHlsaW5lKAogICAgICAgICAgICAgICAgW1szMC4zODYyOTQyLCAtODkuMDk0OTM2Ml0sIFszMC40NDA2OTYxLCAtOTEuMTg5NTI2OF0sIFszMi43OTk1LCAtOTYuNzg3Ml0sIFszMi4yMjM2MDMzLCAtMTEwLjk1NjI0NTNdLCBbMzQuMDQ3Nzc1LCAtMTE4LjMyNDExMzRdLCBbMzIuNzI3MjA4OCwgLTExNy4xNDk1OTk0XSwgWzM1LjM3NTg3NjgsIC0xMTkuMDE5MDA1XSwgWzM4LjU3Mzk4MzIsIC0xMjEuNDcwMTc1NV1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJkYXJrYmx1ZSIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfNzU3NTQzMGRmYzNkNDkyMzk1ZmY3NDMxNTI3YmE3NjkgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFs0Mi4zODcxLCAtODMuMTAyNl0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiZGFya2dyZWVuIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJvcGFjaXR5IjogMS4wLCAicmFkaXVzIjogOCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiA1fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNDdlMzgyMDBkN2M1NDRlNTgzOTIxMmQ2NDk3NDNkYWEgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiAiMTAwJSJ9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBodG1sXzY1NDFmMTZkOWNkZjQxOGY5ZWM2Y2NkNDkyYzlhYmJlID0gJChgPGRpdiBpZD0iaHRtbF82NTQxZjE2ZDljZGY0MThmOWVjNmNjZDQ5MmM5YWJiZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+PGk+PC9pPjwvZGl2PmApWzBdOwogICAgICAgICAgICBwb3B1cF80N2UzODIwMGQ3YzU0NGU1ODM5MjEyZDY0OTc0M2RhYS5zZXRDb250ZW50KGh0bWxfNjU0MWYxNmQ5Y2RmNDE4ZjllYzZjY2Q0OTJjOWFiYmUpOwogICAgICAgIAoKICAgICAgICBjaXJjbGVfNzU3NTQzMGRmYzNkNDkyMzk1ZmY3NDMxNTI3YmE3NjkuYmluZFBvcHVwKHBvcHVwXzQ3ZTM4MjAwZDdjNTQ0ZTU4MzkyMTJkNjQ5NzQzZGFhKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBjaXJjbGVfNzU3NTQzMGRmYzNkNDkyMzk1ZmY3NDMxNTI3YmE3NjkuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgVGVhbSBFYXN0c2lkZU1hamVzdGljIFRoZWF0cmVEZXRyb2l0CiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lXzM1ZjIxNWU2YWEzYTRiMDU4NTdlZmQwMjFmNzc0NTYxID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbNDIuMzg3MSwgLTgzLjEwMjZdXSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrZ3JlZW4iLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImRhcmtncmVlbiIsICJmaWxsT3BhY2l0eSI6IDAuMiwgImZpbGxSdWxlIjogImV2ZW5vZGQiLCAibGluZUNhcCI6ICJyb3VuZCIsICJsaW5lSm9pbiI6ICJyb3VuZCIsICJub0NsaXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic21vb3RoRmFjdG9yIjogMS4wLCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDIuNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfMmNhZDY4M2U2N2Q1NDg2NThiZTc5MmMyNTI3YTdmNzkgPSBMLmNpcmNsZSgKICAgICAgICAgICAgICAgIFsyOS45MzM4NiwgLTkwLjA3MjVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImNhZGV0Ymx1ZSIsICJkYXNoQXJyYXkiOiBudWxsLCAiZGFzaE9mZnNldCI6IG51bGwsICJmaWxsIjogdHJ1ZSwgImZpbGxDb2xvciI6ICJjYWRldGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzFjMzgzNDI4YzVhMjQxNDY4NDA4OGViMDJmY2FjMjA0ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF8zNDllZmQzYjg2NTk0NTg5ODExYWQzNTUzYTJhNWI0ZSA9ICQoYDxkaXYgaWQ9Imh0bWxfMzQ5ZWZkM2I4NjU5NDU4OTgxMWFkMzU1M2EyYTViNGUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMWMzODM0MjhjNWEyNDE0Njg0MDg4ZWIwMmZjYWMyMDQuc2V0Q29udGVudChodG1sXzM0OWVmZDNiODY1OTQ1ODk4MTFhZDM1NTNhMmE1YjRlKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzJjYWQ2ODNlNjdkNTQ4NjU4YmU3OTJjMjUyN2E3Zjc5LmJpbmRQb3B1cChwb3B1cF8xYzM4MzQyOGM1YTI0MTQ2ODQwODhlYjAyZmNhYzIwNCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzJjYWQ2ODNlNjdkNTQ4NjU4YmU3OTJjMjUyN2E3Zjc5LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEphbWVlbCBOYSdpbSBYTm9sYSBNaXggUmVjb3Jkc05ldyBPcmxlYW5zCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9seV9saW5lXzVlMGUwMjBkMDY2YTRhYjliZjhiNzBmNmQzZDFmNGNhID0gTC5wb2x5bGluZSgKICAgICAgICAgICAgICAgIFtbMjkuOTMzODYsIC05MC4wNzI1XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAiY2FkZXRibHVlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiBmYWxzZSwgImZpbGxDb2xvciI6ICJjYWRldGJsdWUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzQ1ZTU3MDQwOGM5MjQ2YTE5MmEzNDlhM2M1NWQ4ZjYxID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbNDIuMzIxNCwgLTgzLjA5MzY2XSwKICAgICAgICAgICAgICAgIHsiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsICJjb2xvciI6ICJkYXJrcHVycGxlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogImRhcmtwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAib3BhY2l0eSI6IDEuMCwgInJhZGl1cyI6IDgsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogNX0KICAgICAgICAgICAgKS5hZGRUbyhtYXBfZDBkODcxMDc4YTZiNDcyZGE2NzExNzIxYzg4ZmJmZTUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzNmNzFmZTdhODFkNzQ4MmJhMWM3YWE5YjYyOWZlNGFmID0gTC5wb3B1cCh7Im1heFdpZHRoIjogIjEwMCUifSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaHRtbF83ZWI5NmQ3YmE0ZWQ0MThkYjJiZmQxN2FlOWU1MDczZiA9ICQoYDxkaXYgaWQ9Imh0bWxfN2ViOTZkN2JhNGVkNDE4ZGIyYmZkMTdhZTllNTA3M2YiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPjxpPjwvaT48L2Rpdj5gKVswXTsKICAgICAgICAgICAgcG9wdXBfM2Y3MWZlN2E4MWQ3NDgyYmExYzdhYTliNjI5ZmU0YWYuc2V0Q29udGVudChodG1sXzdlYjk2ZDdiYTRlZDQxOGRiMmJmZDE3YWU5ZTUwNzNmKTsKICAgICAgICAKCiAgICAgICAgY2lyY2xlXzQ1ZTU3MDQwOGM5MjQ2YTE5MmEzNDlhM2M1NWQ4ZjYxLmJpbmRQb3B1cChwb3B1cF8zZjcxZmU3YTgxZDc0ODJiYTFjN2FhOWI2MjlmZTRhZikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgY2lyY2xlXzQ1ZTU3MDQwOGM5MjQ2YTE5MmEzNDlhM2M1NWQ4ZjYxLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIEljZXdlYXIgVmV6em9FbCBDbHViRGV0cm9pdAogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV80YmQ0OTNkY2EzNjI0MjlmODVmMWZjNDRmN2U0M2FmNSA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzQyLjMyMTQsIC04My4wOTM2Nl1dLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogImRhcmtwdXJwbGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogImRhcmtwdXJwbGUiLCAiZmlsbE9wYWNpdHkiOiAwLjIsICJmaWxsUnVsZSI6ICJldmVub2RkIiwgImxpbmVDYXAiOiAicm91bmQiLCAibGluZUpvaW4iOiAicm91bmQiLCAibm9DbGlwIjogZmFsc2UsICJvcGFjaXR5IjogMSwgInNtb290aEZhY3RvciI6IDEuMCwgInN0cm9rZSI6IHRydWUsICJ3ZWlnaHQiOiAyLjV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlXzlkZTdiM2Q4NjkwNjRlMmY4ZjY3YTU2MzYyZTRkZGUxID0gTC5jaXJjbGUoCiAgICAgICAgICAgICAgICBbMzQuMDQ3NTksIC0xMTguMzI0MTVdLAogICAgICAgICAgICAgICAgeyJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwgImNvbG9yIjogIndoaXRlIiwgImRhc2hBcnJheSI6IG51bGwsICJkYXNoT2Zmc2V0IjogbnVsbCwgImZpbGwiOiB0cnVlLCAiZmlsbENvbG9yIjogIndoaXRlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm9wYWNpdHkiOiAxLjAsICJyYWRpdXMiOiA4LCAic3Ryb2tlIjogdHJ1ZSwgIndlaWdodCI6IDV9CiAgICAgICAgICAgICkuYWRkVG8obWFwX2QwZDg3MTA3OGE2YjQ3MmRhNjcxMTcyMWM4OGZiZmU1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8wZTA4MDMxMzE1NzQ0ZWM3Yjg1NGY1OWRjOWU4YjdlMSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6ICIxMDAlIn0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGh0bWxfMTIyZGFjMjI3MmUxNDc2YWJmZDM0NjRiNzYxYTU4YTAgPSAkKGA8ZGl2IGlkPSJodG1sXzEyMmRhYzIyNzJlMTQ3NmFiZmQzNDY0Yjc2MWE1OGEwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij48aT48L2k+PC9kaXY+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzBlMDgwMzEzMTU3NDRlYzdiODU0ZjU5ZGM5ZThiN2UxLnNldENvbnRlbnQoaHRtbF8xMjJkYWMyMjcyZTE0NzZhYmZkMzQ2NGI3NjFhNThhMCk7CiAgICAgICAgCgogICAgICAgIGNpcmNsZV85ZGU3YjNkODY5MDY0ZTJmOGY2N2E1NjM2MmU0ZGRlMS5iaW5kUG9wdXAocG9wdXBfMGUwODAzMTMxNTc0NGVjN2I4NTRmNTlkYzllOGI3ZTEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIGNpcmNsZV85ZGU3YjNkODY5MDY0ZTJmOGY2N2E1NjM2MmU0ZGRlMS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBCaWcgR292Q2F0Y2ggT25lTG9zIEFuZ2VsZXMgKExBKQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvbHlfbGluZV9kNmM0MjVjMmYzMmU0YjYyOTM1ZDk1NGY1YmRkZGI5ZiA9IEwucG9seWxpbmUoCiAgICAgICAgICAgICAgICBbWzM0LjA0NzU5LCAtMTE4LjMyNDE1XV0sCiAgICAgICAgICAgICAgICB7ImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLCAiY29sb3IiOiAid2hpdGUiLCAiZGFzaEFycmF5IjogbnVsbCwgImRhc2hPZmZzZXQiOiBudWxsLCAiZmlsbCI6IGZhbHNlLCAiZmlsbENvbG9yIjogIndoaXRlIiwgImZpbGxPcGFjaXR5IjogMC4yLCAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsICJsaW5lQ2FwIjogInJvdW5kIiwgImxpbmVKb2luIjogInJvdW5kIiwgIm5vQ2xpcCI6IGZhbHNlLCAib3BhY2l0eSI6IDEsICJzbW9vdGhGYWN0b3IiOiAxLjAsICJzdHJva2UiOiB0cnVlLCAid2VpZ2h0IjogMi41fQogICAgICAgICAgICApLmFkZFRvKG1hcF9kMGQ4NzEwNzhhNmI0NzJkYTY3MTE3MjFjODhmYmZlNSk7CiAgICAgICAgCjwvc2NyaXB0Pg==\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a5f463a90>"
      ]
     },
     "execution_count": 342,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "colors = ['blue', 'purple', 'orange', 'darkred', 'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue', 'darkpurple', 'white', 'pink', 'lightblue', 'lightgreen']\n",
    "\n",
    "cc = -1\n",
    "\n",
    "for x in ts:\n",
    "    if not isinstance(x, int) and len(x) != 0:\n",
    "        if (cc!=len(colors)-1):\n",
    "            cc += 1\n",
    "        else:\n",
    "            cc = 0\n",
    "    \n",
    "        points = []\n",
    "\n",
    "        for i, row in x.iterrows():\n",
    "            tooltip = str(row[0]) + str(row[1]) + str(row[2])\n",
    "#             print(tooltip)\n",
    "        \n",
    "            points.append((row[5], row[6]))\n",
    "    \n",
    "#         if (i==0):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'green',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i==len(gdf)-1):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'red',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i!=0):\n",
    "            folium.Circle([row[5], row[6]], radius = 8, color = colors[cc], fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "#         print(points)\n",
    "        folium.PolyLine(points, color=colors[cc], weight=2.5, opacity=1).add_to(m)\n",
    "\n",
    "\n",
    "# fig, ax = plt.subplots(figsize=(15,15))\n",
    "# ax = ws.plot(color='white', edgecolor='black')\n",
    "toy_traj = mpd.Trajectory(1, gdf)\n",
    "# toy_traj.df\n",
    "# toy_traj.plot(ax = ax, linewidth=1, capstyle='round', legend=True)\n",
    "\n",
    "# print(se)\n",
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 429,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(41.9104085, -87.677996), (42.3871, -83.1026), (32.78533, -96.80809)]\n",
      "[(32.237116, -110.867374), (37.804256, -122.270302), (40.73492, -73.98845), (34.04759, -118.32415), (40.6780885, -73.9484003), (30.2701302, -97.7359046), (47.66128, -122.31365), (32.753815, -117.209272), (39.95898, -75.15028), (29.75393, -95.36406), (42.35211, -71.11942), (38.9172, -77.02776), (29.4293856, -98.4929842), (38.56998, -121.49069), (33.4514114, -112.0781884), (34.04494, -118.2655), (35.2473898, -80.8062281), (42.3635, -71.10162)]\n",
      "[(45.5120081, -122.6581769), (42.6367415, -83.2917046), (34.06359, -117.67981), (40.7177, -74.00153), (39.0542088, -94.5909055), (33.79209, -84.388), (42.280221, -83.7512377), (40.6789401, -73.4173767)]\n",
      "[(34.238382, -77.949208), (34.090712, -118.387966), (43.2127759, -77.4281641), (27.771666, -82.636035), (33.4577445, -111.9081615), (36.972, -122.026), (34.41628, -119.69509), (33.69984, -117.91945), (37.76969, -122.42016), (40.7530136, -111.9007966), (39.5264776, -119.8034153), (35.4935, -97.52016), (29.93386, -90.0725), (41.31157, -72.92936), (44.97827, -93.27608), (25.780664, -80.193623), (33.4234826, -111.8590237), (45.1248319, -93.4266348), (34.1020506, -118.3361384), (30.3862942, -89.0949362), (36.7351821, -119.7930528), (42.1236213, -80.084649), (34.07816, -118.26056), (39.75449, -104.97854), (38.98144, -76.93828), (41.50832, -81.5803), (46.7289, -122.953), (42.893094, -78.871579), (40.008, -105.27629), (26.350098, -80.100436), (30.4406961, -91.1895268), (39.31884, -76.6195), (35.3758768, -119.019005)]\n",
      "((42.3871, -83.1026), (41.9104085, -87.677996), (32.78533, -96.80809)) 17.508517983777192\n",
      "[(42.3871, -83.1026), (41.9104085, -87.677996), (32.78533, -96.80809)]\n",
      "(30.2701302, -97.7359046)\n",
      "(29.75393, -95.36406)\n",
      "(29.4293856, -98.4929842)\n",
      "(42.6367415, -83.2917046)\n",
      "(39.0542088, -94.5909055)\n",
      "(42.280221, -83.7512377)\n",
      "(35.4935, -97.52016)\n",
      "[(42.3871, -83.1026), (42.6367415, -83.2917046), (42.280221, -83.7512377), (41.9104085, -87.677996), (39.0542088, -94.5909055), (35.4935, -97.52016), (29.4293856, -98.4929842), (29.75393, -95.36406), (30.2701302, -97.7359046), (32.78533, -96.80809)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a68ddf1d0>"
      ]
     },
     "execution_count": 429,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import statistics\n",
    "import itertools as it\n",
    "import math\n",
    "import numpy\n",
    "\n",
    "# def optimal_path(list):\n",
    "avg = 0\n",
    "maxm = 0\n",
    "cities = {}\n",
    "#     print(len(list))\n",
    "for t in ts:\n",
    "\n",
    "    if not isinstance(t, int):\n",
    "        for i,row in t.iterrows():\n",
    "            city = str(row[2]) + ', ' + str(row[3]) + ', ' + str(row[4])\n",
    "            if city not in cities.keys():\n",
    "                cities[city] = [(row[5], row[6]), 1]\n",
    "            else:\n",
    "                cities[city][1] += 1\n",
    "\n",
    "lst = sorted(cities.items(), key = \n",
    "         lambda kv:(kv[1][1], kv[0]), reverse=True)\n",
    "\n",
    "maxm = lst[0][1][1]\n",
    "sl = []\n",
    "for i in lst:\n",
    "    avg += i[1][1]\n",
    "    sl.append(i[1][1])\n",
    "\n",
    "sd = statistics.stdev(sl)\n",
    "\n",
    "avg = avg/len(lst)\n",
    "\n",
    "green = []\n",
    "lg = []\n",
    "yellow = []\n",
    "red = []\n",
    "\n",
    "for i in lst:\n",
    "    count = i[1][1]\n",
    "    if (count >= avg + sd*1.5):\n",
    "        green.append(i[1][0])\n",
    "    elif (count >= avg):\n",
    "        lg.append(i[1][0])\n",
    "    elif (count >= avg - sd/2):\n",
    "        yellow.append(i[1][0])\n",
    "    else:\n",
    "        red.append(i[1][0])\n",
    "\n",
    "print(green)\n",
    "print(lg)\n",
    "print(yellow)\n",
    "print(red)\n",
    "\n",
    "final_points = green\n",
    "\n",
    "\n",
    "def dist(x,y):\n",
    "    return math.hypot(y[0]-x[0],y[1]-x[1])\n",
    "\n",
    "paths = [ p for p in it.permutations(final_points) ]\n",
    "path_distances = [ sum(map(lambda x: dist(x[0],x[1]),zip(p[:-1],p[1:]))) for p in paths ]\n",
    "min_index = numpy.argmin(path_distances)\n",
    "\n",
    "print(str(paths[min_index]) + ' ' + str(path_distances[min_index]))\n",
    "\n",
    "final_path = []\n",
    "\n",
    "for i in paths[min_index]:\n",
    "    final_path.append(i)\n",
    "    \n",
    "print(final_path)\n",
    "\n",
    "def add_fp(fp, l, std):\n",
    "    i = 0\n",
    "    while (i < len(l)):\n",
    "#         print(fp)\n",
    "#         print(l[i] not in fp)\n",
    "    \n",
    "        if (l[i] not in fp):\n",
    "            for j in range(len(fp)-1):\n",
    "#             print('-')\n",
    "#             print(dist(final_path[j], lg[i]) + dist(lg[i], final_path[j+1]))\n",
    "#             print(2*dist(final_path[j], final_path[j+1]))\n",
    "#             print(dist(final_path[j], lg[i]) + dist(lg[i], final_path[j+1])) < (2*dist(final_path[j], final_path[j+1])))\n",
    "\n",
    "                if ((dist(fp[j], l[i]) + dist(l[i], fp[j+1])) < (std*dist(fp[j], fp[j+1]))):\n",
    "                    if (l[i] not in fp):\n",
    "                        fp.insert(j+1, l[i])\n",
    "                        print(l[i])\n",
    "                        i = -1\n",
    "                    continue\n",
    "        i+=1\n",
    "        \n",
    "    return fp\n",
    "\n",
    "final_path = add_fp(final_path, lg, 1.5)\n",
    "final_path = add_fp(final_path, yellow, 1.2)\n",
    "final_path = add_fp(final_path, red, 1.05)\n",
    "\n",
    "print(final_path)\n",
    "\n",
    "m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "for x in ts:\n",
    "    if not isinstance(x, int) and len(x) != 0:\n",
    "        points = []\n",
    "\n",
    "        for i, row in x.iterrows():\n",
    "            tooltip = str(row[0]) + str(row[1]) + str(row[2])        \n",
    "            points.append((row[5], row[6]))\n",
    "            folium.Circle([row[5], row[6]], radius = 8, color = 'lightgrey', fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "#         folium.PolyLine(points, color='lightgrey', weight=2.5, opacity=1).add_to(m)\n",
    "        \n",
    "for x in green:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'green', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "for x in lg:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'lightgreen', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "for x in yellow:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'yellow', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "for x in red:\n",
    "    folium.Circle([x[0], x[1]], radius = 8, color = 'red', fill = True, weight = 5, popup='<i></i>').add_to(m)\n",
    "\n",
    "folium.PolyLine(final_path, color='blue', weight=1.5, opacity=1).add_to(m)\n",
    "\n",
    "\n",
    "\n",
    "# fig, ax = plt.subplots(figsize=(15,15))\n",
    "# ax = ws.plot(color='white', edgecolor='black')\n",
    "toy_traj = mpd.Trajectory(1, gdf)\n",
    "# toy_traj.df\n",
    "# toy_traj.plot(ax = ax, linewidth=1, capstyle='round', legend=True)\n",
    "\n",
    "# print(se)\n",
    "m\n",
    "\n",
    "# print(optimal_path(ts)) \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 430,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n",
      "[(34.04429, -118.2656), (29.75135, -95.36986), (29.68472, -95.409), (33.78424, -84.36399), (30.00872, -90.06533), (39.96826, -75.17497), (29.9086, -95.41167), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (42.36757, -71.1259), (30.2773, -87.6831), (30.24743, -87.69056), (25.68701, -80.35159), (32.77936, -96.76119), (36.15276, -95.99623), (35.22509, -80.83922), (33.75723, -84.39634), (36.15995, -86.77857), (27.94259, -82.45196), (28.54878, -81.38691), (40.00801, -83.02491), (43.04497, -87.91716), (41.88063, -87.67405), (39.76405, -86.15548), (38.62643, -90.20262), (39.09715, -94.58103), (29.75198, -95.36218), (36.15276, -95.99623), (33.9582, -118.34053), (36.1942, -115.222), (32.75518, -117.21231), (47.23634, -122.42683), (45.53161, -122.66729)]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1a68e1a0d0>"
      ]
     },
     "execution_count": 430,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# gdfs = compile_points('aster aweke')\n",
    "\n",
    "# gdf = find_tour(requests.get(r).json(), \"Travis Scott\")\n",
    "\n",
    "m = folium.Map(location=[40, -95], zoom_start=4)\n",
    "\n",
    "colors = ['blue', 'purple', 'orange', 'darkred', 'lightred', 'beige', 'darkblue', 'darkgreen', 'cadetblue', 'darkpurple', 'white', 'pink', 'lightblue', 'lightgreen']\n",
    "\n",
    "cc = -1\n",
    "\n",
    "# print(tours)\n",
    "\n",
    "for x in tours:\n",
    "    \n",
    "    if (cc!=len(colors)-1):\n",
    "        cc += 1\n",
    "    else:\n",
    "        cc = 0\n",
    "    \n",
    "    points = []\n",
    "\n",
    "    for i, row in gdf.iterrows():\n",
    "#     print(row[1][2])\n",
    "#         tooltip = str(row[0]) + str(row[1]) + str(row[2])\n",
    "#         print(tooltip)\n",
    "        \n",
    "        points.append((row[5], row[6]))\n",
    "    \n",
    "#         if (i==0):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'green',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i==len(gdf)-1):\n",
    "#             folium.Circle([row[5], row[6]], radius = 8, color = 'red',  fill = True, weight = 10, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "#         elif (i!=0):\n",
    "        folium.Circle([row[5], row[6]], radius = 8, color = colors[cc], fill = True, weight = 5, popup='<i></i>', tooltip=tooltip).add_to(m)\n",
    "\n",
    "    print(points)\n",
    "#     folium.PolyLine(points, color=\"grey\", weight=2.5, opacity=1).add_to(m)\n",
    "\n",
    "\n",
    "# fig, ax = plt.subplots(figsize=(15,15))\n",
    "# ax = ws.plot(color='white', edgecolor='black')\n",
    "toy_traj = mpd.Trajectory(1, gdf)\n",
    "# toy_traj.df\n",
    "# toy_traj.plot(ax = ax, linewidth=1, capstyle='round', legend=True)\n",
    "\n",
    "# print(se)\n",
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
